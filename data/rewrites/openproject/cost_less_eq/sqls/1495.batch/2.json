{"schemas": [{"name": "projects", "fields": ["id", "parent_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, true], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "project_statuses", "fields": ["project_id"], "types": ["BIGINT"], "nullable": [false], "key": [], "foreign": [], "guaranteed": []}, {"name": "enabled_modules", "fields": ["project_id"], "types": ["INTEGER"], "nullable": [false], "key": [], "foreign": [], "guaranteed": []}, {"name": "custom_values", "fields": ["customized_type", "customized_id", "custom_field_id"], "types": ["VARCHAR", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "custom_fields", "fields": ["id"], "types": ["INTEGER"], "nullable": [false], "key": [[0]], "foreign": [], "guaranteed": []}], "queries": [{"distinct": {"correlate": [{"project": {"target": [], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 5, "type": "VARCHAR"}, {"operator": "_ISO-8859-1''", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 6, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 2, "type": "BIGINT"}, {"operator": "CAST", "operand": [{"column": 0, "type": "INTEGER"}], "type": "BIGINT"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 0}}}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}, "right": {"scan": 4}}}}}}}, {"aggregate": {"function": [{"operator": "COUNT", "operand": [{"column": 0, "type": "INTEGER"}], "distinct": true, "ignoreNulls": false, "type": "BIGINT"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 5, "type": "VARCHAR"}, {"operator": "_ISO-8859-1''", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 6, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 2, "type": "BIGINT"}, {"operator": "CAST", "operand": [{"column": 0, "type": "INTEGER"}], "type": "BIGINT"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 0}}}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}, "right": {"scan": 4}}}}}}}}}]}}, {"distinct": {"correlate": [{"project": {"target": [], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 5, "type": "VARCHAR"}, {"operator": "_ISO-8859-1''", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 6, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 2, "type": "BIGINT"}, {"operator": "CAST", "operand": [{"column": 0, "type": "INTEGER"}], "type": "BIGINT"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 0}}}}}, "right": {"scan": 2}}}, "right": {"project": {"target": [{"column": 0, "type": "VARCHAR"}, {"column": 1, "type": "INTEGER"}], "source": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [{"operator": "COUNT", "operand": [{"column": 0, "type": "INTEGER"}], "distinct": true, "ignoreNulls": false, "type": "BIGINT"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 5, "type": "VARCHAR"}, {"operator": "_ISO-8859-1''", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 6, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 2, "type": "BIGINT"}, {"operator": "CAST", "operand": [{"column": 0, "type": "INTEGER"}], "type": "BIGINT"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 0}}}}}, "right": {"scan": 2}}}, "right": {"project": {"target": [{"column": 0, "type": "VARCHAR"}, {"column": 1, "type": "INTEGER"}], "source": {"scan": 3}}}}}}}}}}}]}}], "help": ["LogicalAggregate(group=[{}], EXPR$0=[COUNT(DISTINCT $0)])\n  LogicalProject(id=[$0])\n    LogicalJoin(condition=[=($8, $7)], joinType=[left])\n      LogicalJoin(condition=[AND(=($5, ''), =($6, $0))], joinType=[left])\n        LogicalJoin(condition=[=($4, $0)], joinType=[left])\n          LogicalJoin(condition=[=($3, $1)], joinType=[left])\n            LogicalJoin(condition=[=($2, CAST($0):BIGINT NOT NULL)], joinType=[left])\n              LogicalTableScan(table=[[Cosette, projects]])\n              LogicalTableScan(table=[[Cosette, project_statuses]])\n            LogicalProject(id=[$0])\n              LogicalTableScan(table=[[Cosette, projects]])\n          LogicalTableScan(table=[[Cosette, enabled_modules]])\n        LogicalTableScan(table=[[Cosette, custom_values]])\n      LogicalTableScan(table=[[Cosette, custom_fields]])\n", "LogicalAggregate(group=[{}], EXPR$0=[COUNT(DISTINCT $0)])\n  LogicalProject(id=[$0])\n    LogicalJoin(condition=[AND(=($5, ''), =($6, $0))], joinType=[left])\n      LogicalJoin(condition=[=($4, $0)], joinType=[left])\n        LogicalJoin(condition=[=($3, $1)], joinType=[left])\n          LogicalJoin(condition=[=($2, CAST($0):BIGINT NOT NULL)], joinType=[left])\n            LogicalTableScan(table=[[Cosette, projects]])\n            LogicalTableScan(table=[[Cosette, project_statuses]])\n          LogicalProject(id=[$0])\n            LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n      LogicalProject(customized_type=[$0], customized_id=[$1])\n        LogicalTableScan(table=[[Cosette, custom_values]])\n"]}