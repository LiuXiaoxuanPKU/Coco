{"schemas": [{"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "members", "fields": ["id", "user_id", "project_id"], "types": ["INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [[1, 2], [0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["member_id", "role_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "roles", "fields": ["id"], "types": ["INTEGER"], "nullable": [false], "key": [[0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [[1, "VARCHAR", "ASC"]], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "23241", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 18, "type": "INTEGER"}, {"column": 17, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 16, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 15, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 0}}}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}, {"sort": {"collation": [[1, "VARCHAR", "ASC"]], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "23241", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 16, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 15, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 0}}}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 2}}}}}}}}}}}], "help": ["LogicalSort(sort0=[$1], dir0=[ASC])\n  LogicalProject(id=[$0], name=[$1], description=[$2], public=[$3], parent_id=[$4], created_at=[$5], updated_at=[$6], identifier=[$7], lft=[$8], rgt=[$9], active=[$10], templated=[$11])\n    LogicalFilter(condition=[AND(=($13, 23241), OR(=($10, true), IS NULL($14)), =($10, true))])\n      LogicalJoin(condition=[=($18, $17)], joinType=[left])\n        LogicalJoin(condition=[=($16, $12)], joinType=[left])\n          LogicalJoin(condition=[=($15, $14)], joinType=[left])\n            LogicalJoin(condition=[=($0, $14)], joinType=[inner])\n              LogicalTableScan(table=[[Cosette, projects]])\n              LogicalTableScan(table=[[Cosette, members]])\n            LogicalProject(id=[$0])\n              LogicalTableScan(table=[[Cosette, projects]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n", "LogicalSort(sort0=[$1], dir0=[ASC])\n  LogicalProject(id=[$0], name=[$1], description=[$2], public=[$3], parent_id=[$4], created_at=[$5], updated_at=[$6], identifier=[$7], lft=[$8], rgt=[$9], active=[$10], templated=[$11])\n    LogicalFilter(condition=[AND(=($13, 23241), OR(=($10, true), IS NULL($14)), =($10, true))])\n      LogicalJoin(condition=[=($16, $12)], joinType=[inner])\n        LogicalJoin(condition=[=($15, $14)], joinType=[left])\n          LogicalJoin(condition=[=($0, $14)], joinType=[inner])\n            LogicalTableScan(table=[[Cosette, projects]])\n            LogicalTableScan(table=[[Cosette, members]])\n          LogicalProject(id=[$0])\n            LogicalTableScan(table=[[Cosette, projects]])\n        LogicalProject(member_id=[$0])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n"]}