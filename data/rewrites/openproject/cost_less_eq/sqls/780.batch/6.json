{"schemas": [{"name": "users", "fields": ["id", "admin", "type"], "types": ["INTEGER", "BOOLEAN", "VARCHAR"], "nullable": [false, false, true], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "members", "fields": ["id", "user_id", "project_id"], "types": ["INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [[1, 2], [0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["member_id", "role_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "roles", "fields": ["id"], "types": ["INTEGER"], "nullable": [false], "key": [[0]], "foreign": [], "guaranteed": []}], "queries": [{"distinct": {"correlate": [{"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'Group'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "IS NOT NULL", "operand": [{"column": 8, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 4, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"operator": "1186", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 1, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'Group'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "IS NOT NULL", "operand": [{"column": 9, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 9, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"column": 5, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 6, "type": "INTEGER"}, {"operator": "1186", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}}}]}}, {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'Group'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "IS NOT NULL", "operand": [{"column": 8, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 4, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"operator": "1186", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}], "help": ["LogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[AND(=($2, 'Group'), OR(IS NOT NULL($8), =($1, true)))])\n      LogicalJoin(condition=[=($8, $7)], joinType=[left])\n        LogicalJoin(condition=[=($3, $6)], joinType=[left])\n          LogicalJoin(condition=[AND(=($0, $4), =($5, 1186))], joinType=[left])\n            LogicalTableScan(table=[[Cosette, users]])\n            LogicalTableScan(table=[[Cosette, members]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n", "LogicalProject(id=[$0])\n  LogicalFilter(condition=[AND(OR(=($2, 'User'), =($2, 'Group')), OR(IS NOT NULL($8), =($1, true)))])\n    LogicalJoin(condition=[=($8, $7)], joinType=[left])\n      LogicalJoin(condition=[=($3, $6)], joinType=[left])\n        LogicalJoin(condition=[AND(=($0, $4), =($5, 1186))], joinType=[inner])\n          LogicalTableScan(table=[[Cosette, users]])\n          LogicalTableScan(table=[[Cosette, members]])\n        LogicalTableScan(table=[[Cosette, member_roles]])\n      LogicalTableScan(table=[[Cosette, roles]])\n"]}