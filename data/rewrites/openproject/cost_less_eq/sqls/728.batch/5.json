{"schemas": [{"name": "roles", "fields": ["id"], "types": ["INTEGER"], "nullable": [false], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["member_id", "role_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "role_permissions", "fields": ["role_id"], "types": ["INTEGER"], "nullable": [false], "key": [], "foreign": [], "guaranteed": []}], "queries": [{"distinct": {"correlate": [{"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "5095", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 1, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "5095", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}}}}}}}}}]}}, {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "5095", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}}}}}], "help": ["LogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($1, 5095)])\n      LogicalJoin(condition=[=($3, $0)], joinType=[left])\n        LogicalJoin(condition=[=($0, $2)], joinType=[inner])\n          LogicalTableScan(table=[[Cosette, roles]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, role_permissions]])\n", "LogicalProject(id=[$0])\n  LogicalFilter(condition=[=($1, 5095)])\n    LogicalJoin(condition=[=($3, $0)], joinType=[left])\n      LogicalJoin(condition=[=($0, $2)], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, roles]])\n        LogicalTableScan(table=[[Cosette, member_roles]])\n      LogicalTableScan(table=[[Cosette, role_permissions]])\n"]}