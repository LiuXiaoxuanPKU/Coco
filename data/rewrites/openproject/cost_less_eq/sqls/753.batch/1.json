{"schemas": [{"name": "work_packages", "fields": ["id", "type_id", "project_id", "subject", "description", "due_date", "category_id", "status_id", "assigned_to_id", "priority_id", "version_id", "author_id", "lock_version", "done_ratio", "estimated_hours", "created_at", "updated_at", "start_date", "responsible_id", "budget_id", "position", "story_points", "remaining_hours", "derived_estimated_hours", "schedule_manually"], "types": ["INTEGER", "INTEGER", "INTEGER", "VARCHAR", "VARCHAR", "DATE", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "DOUBLE", "TIMESTAMP", "TIMESTAMP", "DATE", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "DOUBLE", "DOUBLE", "BOOLEAN"], "nullable": [false, false, false, false, true, true, false, false, false, false, false, false, false, false, true, true, true, true, false, true, true, true, true, true, true], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "enabled_modules", "fields": ["id", "project_id", "name"], "types": ["INTEGER", "INTEGER", "VARCHAR"], "nullable": [false, false, false], "key": [[2, 1], [0]], "foreign": [], "guaranteed": []}], "queries": [{"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "VARCHAR"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "DATE"}, {"column": 6, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}, {"column": 13, "type": "INTEGER"}, {"column": 14, "type": "DOUBLE"}, {"column": 15, "type": "TIMESTAMP"}, {"column": 16, "type": "TIMESTAMP"}, {"column": 17, "type": "DATE"}, {"column": 18, "type": "INTEGER"}, {"column": 19, "type": "INTEGER"}, {"column": 20, "type": "INTEGER"}, {"column": 21, "type": "INTEGER"}, {"column": 22, "type": "DOUBLE"}, {"column": 23, "type": "DOUBLE"}, {"column": 24, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 25, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 25, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 35, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 25, "type": "INTEGER"}, {"column": 38, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 39, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 35, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 25, "type": "INTEGER"}, {"column": 26, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 26, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 36, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 26, "type": "INTEGER"}, {"column": 39, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 40, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 36, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}}}}}}}}}]}}, "type": "BOOLEAN"}, "source": {"scan": 0}}}}}, {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "VARCHAR"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "DATE"}, {"column": 6, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}, {"column": 13, "type": "INTEGER"}, {"column": 14, "type": "DOUBLE"}, {"column": 15, "type": "TIMESTAMP"}, {"column": 16, "type": "TIMESTAMP"}, {"column": 17, "type": "DATE"}, {"column": 18, "type": "INTEGER"}, {"column": 19, "type": "INTEGER"}, {"column": 20, "type": "INTEGER"}, {"column": 21, "type": "INTEGER"}, {"column": 22, "type": "DOUBLE"}, {"column": 23, "type": "DOUBLE"}, {"column": 24, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 25, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 35, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 25, "type": "INTEGER"}, {"column": 38, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 39, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 35, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}}}}}, "type": "BOOLEAN"}, "source": {"scan": 0}}}}}], "help": ["LogicalProject(id=[$0], type_id=[$1], project_id=[$2], subject=[$3], description=[$4], due_date=[$5], category_id=[$6], status_id=[$7], assigned_to_id=[$8], priority_id=[$9], version_id=[$10], author_id=[$11], lock_version=[$12], done_ratio=[$13], estimated_hours=[$14], created_at=[$15], updated_at=[$16], start_date=[$17], responsible_id=[$18], budget_id=[$19], position=[$20], story_points=[$21], remaining_hours=[$22], derived_estimated_hours=[$23], schedule_manually=[$24])\n  LogicalFilter(condition=[IN($2, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n    LogicalTableScan(table=[[Cosette, work_packages]])\n", "LogicalProject(id=[$0], type_id=[$1], project_id=[$2], subject=[$3], description=[$4], due_date=[$5], category_id=[$6], status_id=[$7], assigned_to_id=[$8], priority_id=[$9], version_id=[$10], author_id=[$11], lock_version=[$12], done_ratio=[$13], estimated_hours=[$14], created_at=[$15], updated_at=[$16], start_date=[$17], responsible_id=[$18], budget_id=[$19], position=[$20], story_points=[$21], remaining_hours=[$22], derived_estimated_hours=[$23], schedule_manually=[$24])\n  LogicalFilter(condition=[IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[=($10, true)])\n    LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n      LogicalTableScan(table=[[Cosette, projects]])\n      LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n    LogicalTableScan(table=[[Cosette, work_packages]])\n"]}