{"schemas": [{"name": "relations", "fields": ["id", "from_id", "to_id", "delay", "description", "hierarchy", "relates", "duplicates", "blocks", "follows", "includes", "requires", "count"], "types": ["INTEGER", "INTEGER", "INTEGER", "INTEGER", "VARCHAR", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false, true, true, false, false, false, false, false, false, false, false], "key": [[1, 2, 5, 6, 7, 8, 9, 10, 11], [0]], "foreign": [], "guaranteed": []}, {"name": "work_packages", "fields": ["id", "type_id", "project_id", "subject", "description", "due_date", "category_id", "status_id", "assigned_to_id", "priority_id", "version_id", "author_id", "lock_version", "done_ratio", "estimated_hours", "created_at", "updated_at", "start_date", "responsible_id", "budget_id", "position", "story_points", "remaining_hours", "derived_estimated_hours", "schedule_manually"], "types": ["INTEGER", "INTEGER", "INTEGER", "VARCHAR", "VARCHAR", "DATE", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "DOUBLE", "TIMESTAMP", "TIMESTAMP", "DATE", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "DOUBLE", "DOUBLE", "BOOLEAN"], "nullable": [false, false, false, false, true, true, false, false, false, false, false, false, false, false, true, true, true, true, false, true, true, true, true, true, true], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "enabled_modules", "fields": ["id", "project_id", "name"], "types": ["INTEGER", "INTEGER", "VARCHAR"], "nullable": [false, false, false], "key": [[2, 1], [0]], "foreign": [], "guaranteed": []}], "queries": [{"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "OR", "operand": [{"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "7283", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 13, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 15, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 38, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 38, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 38, "type": "INTEGER"}, {"column": 51, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 52, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 38, "type": "INTEGER"}, {"column": 39, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 39, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 49, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 39, "type": "INTEGER"}, {"column": 52, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 53, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 49, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}}}]}}, "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "78", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 13, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 15, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 38, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 38, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 38, "type": "INTEGER"}, {"column": 51, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 52, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 38, "type": "INTEGER"}, {"column": 39, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 39, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 49, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 39, "type": "INTEGER"}, {"column": 52, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 53, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 49, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}}}]}}, "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}], "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"operator": "0", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}, {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "OR", "operand": [{"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "7283", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 13, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 15, "type": "INTEGER"}], "query": {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 38, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 38, "type": "INTEGER"}, {"column": 51, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 52, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}, "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "78", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 13, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 15, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 38, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 38, "type": "INTEGER"}, {"column": 51, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 52, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 48, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}, "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}], "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"operator": "0", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}}}], "help": ["LogicalProject(id=[$0], from_id=[$1], to_id=[$2], delay=[$3], description=[$4], hierarchy=[$5], relates=[$6], duplicates=[$7], blocks=[$8], follows=[$9], includes=[$10], requires=[$11], count=[$12])\n  LogicalFilter(condition=[AND(OR(AND(=($1, 7283), IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[IN($2, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n    LogicalTableScan(table=[[Cosette, work_packages]])\n})), AND(=($2, 78), IN($1, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[IN($2, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n    LogicalTableScan(table=[[Cosette, work_packages]])\n}))), =(+(+(+(+(+(+($5, $6), $7), $9), $8), $10), $11), 1), =($5, 0))])\n    LogicalTableScan(table=[[Cosette, relations]])\n", "LogicalSort(fetch=[1])\n  LogicalProject(id=[$0], from_id=[$1], to_id=[$2], delay=[$3], description=[$4], hierarchy=[$5], relates=[$6], duplicates=[$7], blocks=[$8], follows=[$9], includes=[$10], requires=[$11], count=[$12])\n    LogicalFilter(condition=[AND(OR(AND(=($1, 7283), IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[IN($2, {\nLogicalSort(fetch=[1])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n    LogicalTableScan(table=[[Cosette, work_packages]])\n})), AND(=($2, 78), IN($1, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[=($10, true)])\n    LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n      LogicalTableScan(table=[[Cosette, projects]])\n      LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n    LogicalTableScan(table=[[Cosette, work_packages]])\n}))), =(+(+(+(+(+(+($5, $6), $7), $9), $8), $10), $11), 1), =($5, 0))])\n      LogicalTableScan(table=[[Cosette, relations]])\n"]}