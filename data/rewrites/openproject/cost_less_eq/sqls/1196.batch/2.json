{"schemas": [{"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "members", "fields": ["id", "user_id", "project_id"], "types": ["INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [[1, 2], [0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["id", "member_id", "role_id"], "types": ["INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "roles", "fields": ["id", "builtin"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [[0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [], "limit": {"operator": "5", "operand": [], "type": "INTEGER"}, "source": {"distinct": {"correlate": [{"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "IS NOT NULL", "operand": [{"column": 18, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "4212", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"operator": "1", "operand": [], "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 18, "type": "INTEGER"}, {"column": 17, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 15, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "5033", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"column": 13, "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"column": 14, "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"column": 15, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 5, "type": "TIMESTAMP"}, {"column": 17, "type": "TIMESTAMP"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 6, "type": "TIMESTAMP"}, {"column": 18, "type": "TIMESTAMP"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 7, "type": "VARCHAR"}, {"column": 19, "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 20, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 9, "type": "INTEGER"}, {"column": 21, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"column": 22, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 11, "type": "BOOLEAN"}, {"column": 23, "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 12, "type": "INTEGER"}, {"column": 13, "type": "VARCHAR"}, {"column": 14, "type": "VARCHAR"}, {"column": 15, "type": "BOOLEAN"}, {"column": 16, "type": "INTEGER"}, {"column": 17, "type": "TIMESTAMP"}, {"column": 18, "type": "TIMESTAMP"}, {"column": 19, "type": "VARCHAR"}, {"column": 20, "type": "INTEGER"}, {"column": 21, "type": "INTEGER"}, {"column": 22, "type": "BOOLEAN"}, {"column": 23, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "IS NOT NULL", "operand": [{"column": 30, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "4212", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"operator": "1", "operand": [], "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 22, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 30, "type": "INTEGER"}, {"column": 29, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 15, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 31, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 27, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 24, "type": "INTEGER"}, {"column": 28, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 26, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 25, "type": "INTEGER"}, {"operator": "5033", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 22, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}}}]}}}}, {"sort": {"collation": [], "limit": {"operator": "5", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "4212", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"operator": "1", "operand": [], "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 18, "type": "INTEGER"}, {"column": 17, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 15, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "5033", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}], "help": ["LogicalSort(fetch=[5])\n  LogicalAggregate(group=[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}])\n    LogicalProject(id=[$0], name=[$1], description=[$2], public=[$3], parent_id=[$4], created_at=[$5], updated_at=[$6], identifier=[$7], lft=[$8], rgt=[$9], active=[$10], templated=[$11])\n      LogicalFilter(condition=[AND(IS NOT NULL($18), =($0, 4212))])\n        LogicalJoin(condition=[AND(=(1, 1), =($10, true), OR(=($18, $17), AND(=($3, true), =($19, 1), IS NULL($15))))], joinType=[left])\n          LogicalJoin(condition=[=($12, $16)], joinType=[left])\n            LogicalJoin(condition=[AND(=($0, $14), =($13, 5033), =($10, true))], joinType=[left])\n              LogicalTableScan(table=[[Cosette, projects]])\n              LogicalTableScan(table=[[Cosette, members]])\n            LogicalTableScan(table=[[Cosette, member_roles]])\n          LogicalTableScan(table=[[Cosette, roles]])\n", "LogicalSort(fetch=[5])\n  LogicalProject(id=[$0], name=[$1], description=[$2], public=[$3], parent_id=[$4], created_at=[$5], updated_at=[$6], identifier=[$7], lft=[$8], rgt=[$9], active=[$10], templated=[$11])\n    LogicalFilter(condition=[=($0, 4212)])\n      LogicalJoin(condition=[AND(=(1, 1), =($10, true), OR(=($18, $17), AND(=($3, true), =($19, 1), IS NULL($15))))], joinType=[inner])\n        LogicalJoin(condition=[=($12, $16)], joinType=[left])\n          LogicalJoin(condition=[AND(=($0, $14), =($13, 5033), =($10, true))], joinType=[left])\n            LogicalTableScan(table=[[Cosette, projects]])\n            LogicalTableScan(table=[[Cosette, members]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n"]}