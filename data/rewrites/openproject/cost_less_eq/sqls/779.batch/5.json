{"schemas": [{"name": "work_packages", "fields": ["id", "project_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "enabled_modules", "fields": ["id", "project_id", "name"], "types": ["INTEGER", "INTEGER", "VARCHAR"], "nullable": [false, false, false], "key": [[2, 1], [0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"operator": "1", "operand": [], "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 15, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 16, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 3, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 17, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}}}}}}}}}]}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "6918", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}}}, {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"operator": "1", "operand": [], "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"distinct": {"correlate": [{"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 15, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 16, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 3, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 17, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}}}}}}}}}]}}}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "6918", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}}}], "help": ["LogicalSort(fetch=[1])\n  LogicalProject(one=[1])\n    LogicalFilter(condition=[AND(IN($1, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n}), =($0, 6918))])\n      LogicalTableScan(table=[[Cosette, work_packages]])\n", "LogicalSort(fetch=[1])\n  LogicalProject(one=[1])\n    LogicalFilter(condition=[AND(IN($1, {\nLogicalSort(fetch=[1])\n  LogicalAggregate(group=[{0}])\n    LogicalProject(id=[$0])\n      LogicalFilter(condition=[=($10, true)])\n        LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n          LogicalTableScan(table=[[Cosette, projects]])\n          LogicalTableScan(table=[[Cosette, enabled_modules]])\n}), =($0, 6918))])\n      LogicalTableScan(table=[[Cosette, work_packages]])\n"]}