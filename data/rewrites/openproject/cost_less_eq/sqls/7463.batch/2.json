{"schemas": [{"name": "members", "fields": ["id", "user_id", "project_id", "created_at", "updated_at"], "types": ["INTEGER", "INTEGER", "INTEGER", "TIMESTAMP", "TIMESTAMP"], "nullable": [false, false, false, true, false], "key": [[1, 2], [0]], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["member_id", "role_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "roles", "fields": ["id", "name", "position", "assignable", "builtin", "type", "created_at", "updated_at"], "types": ["INTEGER", "VARCHAR", "INTEGER", "BOOLEAN", "INTEGER", "VARCHAR", "TIMESTAMP", "TIMESTAMP"], "nullable": [false, false, true, true, false, true, true, true], "key": [[1], [0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [[6, "VARCHAR", "ASC"]], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "TIMESTAMP"}, {"column": 4, "type": "TIMESTAMP"}, {"column": 5, "type": "INTEGER"}, {"column": 6, "type": "VARCHAR"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "BOOLEAN"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "TIMESTAMP"}, {"column": 11, "type": "TIMESTAMP"}, {"column": 12, "type": "VARCHAR"}, {"column": 13, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}, {"column": 15, "type": "BOOLEAN"}, {"column": 16, "type": "BOOLEAN"}, {"column": 19, "type": "INTEGER"}, {"column": 20, "type": "VARCHAR"}, {"column": 21, "type": "INTEGER"}, {"column": 22, "type": "BOOLEAN"}, {"column": 23, "type": "INTEGER"}, {"column": 24, "type": "VARCHAR"}, {"column": 25, "type": "TIMESTAMP"}, {"column": 26, "type": "TIMESTAMP"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "20557", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 15, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"column": 18, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 17, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}, {"sort": {"collation": [[6, "VARCHAR", "ASC"]], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "TIMESTAMP"}, {"column": 4, "type": "TIMESTAMP"}, {"column": 5, "type": "INTEGER"}, {"column": 6, "type": "VARCHAR"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "BOOLEAN"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "TIMESTAMP"}, {"column": 11, "type": "TIMESTAMP"}, {"column": 12, "type": "VARCHAR"}, {"column": 13, "type": "INTEGER"}, {"column": 14, "type": "INTEGER"}, {"column": 15, "type": "BOOLEAN"}, {"column": 16, "type": "BOOLEAN"}, {"column": 19, "type": "INTEGER"}, {"column": 20, "type": "VARCHAR"}, {"column": 21, "type": "INTEGER"}, {"column": 22, "type": "BOOLEAN"}, {"column": 23, "type": "INTEGER"}, {"column": 24, "type": "VARCHAR"}, {"column": 25, "type": "TIMESTAMP"}, {"column": 26, "type": "TIMESTAMP"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "20557", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 15, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "false", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"column": 18, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 17, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}], "help": ["LogicalSort(sort0=[$6], dir0=[ASC])\n  LogicalProject(t0_r0=[$0], t0_r1=[$1], t0_r2=[$2], t0_r3=[$3], t0_r4=[$4], t1_r0=[$5], t1_r1=[$6], t1_r2=[$7], t1_r3=[$8], t1_r4=[$9], t1_r5=[$10], t1_r6=[$11], t1_r7=[$12], t1_r8=[$13], t1_r9=[$14], t1_r10=[$15], t1_r11=[$16], t2_r0=[$19], t2_r1=[$20], t2_r2=[$21], t2_r3=[$22], t2_r4=[$23], t2_r5=[$24], t2_r6=[$25], t2_r7=[$26])\n    LogicalFilter(condition=[AND(=($1, 20557), OR(=($15, true), IS NULL($2)))])\n      LogicalJoin(condition=[=($19, $18)], joinType=[left])\n        LogicalJoin(condition=[=($17, $0)], joinType=[left])\n          LogicalJoin(condition=[=($5, $2)], joinType=[left])\n            LogicalTableScan(table=[[Cosette, members]])\n            LogicalTableScan(table=[[Cosette, projects]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n", "LogicalSort(sort0=[$6], dir0=[ASC])\n  LogicalProject(t0_r0=[$0], t0_r1=[$1], t0_r2=[$2], t0_r3=[$3], t0_r4=[$4], t1_r0=[$5], t1_r1=[$6], t1_r2=[$7], t1_r3=[$8], t1_r4=[$9], t1_r5=[$10], t1_r6=[$11], t1_r7=[$12], t1_r8=[$13], t1_r9=[$14], t1_r10=[$15], t1_r11=[$16], t2_r0=[$19], t2_r1=[$20], t2_r2=[$21], t2_r3=[$22], t2_r4=[$23], t2_r5=[$24], t2_r6=[$25], t2_r7=[$26])\n    LogicalFilter(condition=[AND(=($1, 20557), OR(=($15, true), false))])\n      LogicalJoin(condition=[=($19, $18)], joinType=[left])\n        LogicalJoin(condition=[=($17, $0)], joinType=[left])\n          LogicalJoin(condition=[=($5, $2)], joinType=[inner])\n            LogicalTableScan(table=[[Cosette, members]])\n            LogicalTableScan(table=[[Cosette, projects]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n"]}