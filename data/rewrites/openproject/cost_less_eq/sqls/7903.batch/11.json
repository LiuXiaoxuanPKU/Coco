{"schemas": [{"name": "documents", "fields": ["id", "project_id", "category_id", "title", "description", "created_at", "updated_at"], "types": ["INTEGER", "INTEGER", "INTEGER", "VARCHAR", "VARCHAR", "TIMESTAMP", "TIMESTAMP"], "nullable": [false, false, false, false, true, true, true], "key": [], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "members", "fields": ["id", "user_id", "project_id", "created_at", "updated_at"], "types": ["INTEGER", "INTEGER", "INTEGER", "TIMESTAMP", "TIMESTAMP"], "nullable": [false, false, false, true, false], "key": [[1, 2], [0]], "foreign": [], "guaranteed": []}, {"name": "enabled_modules", "fields": ["id", "project_id", "name"], "types": ["INTEGER", "INTEGER", "VARCHAR"], "nullable": [false, false, false], "key": [[2, 1], [0]], "foreign": [], "guaranteed": []}, {"name": "role_permissions", "fields": ["id", "permission", "role_id", "created_at", "updated_at"], "types": ["INTEGER", "VARCHAR", "INTEGER", "TIMESTAMP", "TIMESTAMP"], "nullable": [false, false, false, false, false], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "roles", "fields": ["id", "name", "position", "assignable", "builtin", "type", "created_at", "updated_at"], "types": ["INTEGER", "VARCHAR", "INTEGER", "BOOLEAN", "INTEGER", "VARCHAR", "TIMESTAMP", "TIMESTAMP"], "nullable": [false, false, true, true, false, true, true, true], "key": [[1], [0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["id", "member_id", "role_id", "inherited_from"], "types": ["INTEGER", "INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false, true], "key": [[1, 2, 3], [0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [[5, "TIMESTAMP", "DESC"]], "limit": {"operator": "10", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "VARCHAR"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "VARCHAR"}, {"column": 9, "type": "VARCHAR"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "TIMESTAMP"}, {"column": 13, "type": "TIMESTAMP"}, {"column": 14, "type": "VARCHAR"}, {"column": 15, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}, {"column": 17, "type": "BOOLEAN"}, {"column": 18, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 19, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 19, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IS NOT NULL", "operand": [{"column": 56, "type": "INTEGER"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 56, "type": "INTEGER"}, {"column": 44, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 29, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 56, "type": "INTEGER"}, {"column": 54, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 22, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 60, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 52, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 31, "type": "INTEGER"}, {"column": 53, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 44, "type": "INTEGER"}, {"column": 41, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 40, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'view_documents'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"column": 37, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 38, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'documents'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 29, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"column": 33, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 32, "type": "INTEGER"}, {"operator": "627", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 29, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}, "right": {"scan": 3}}}, "right": {"scan": 4}}}, "right": {"scan": 5}}}, "right": {"scan": 6}}}, "right": {"scan": 5}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"column": 20, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 20, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IS NOT NULL", "operand": [{"column": 57, "type": "INTEGER"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 57, "type": "INTEGER"}, {"column": 45, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 30, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 57, "type": "INTEGER"}, {"column": 55, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 23, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 61, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 53, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 32, "type": "INTEGER"}, {"column": 54, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 45, "type": "INTEGER"}, {"column": 42, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 41, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'view_documents'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 20, "type": "INTEGER"}, {"column": 38, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 39, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'documents'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 30, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 20, "type": "INTEGER"}, {"column": 34, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 33, "type": "INTEGER"}, {"operator": "627", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 30, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}, "right": {"scan": 3}}}, "right": {"scan": 4}}}, "right": {"scan": 5}}}, "right": {"scan": 6}}}, "right": {"scan": 5}}}}}}}}}}}]}}, "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "225", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "223", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "LIKE", "operand": [{"operator": "LOWER", "operand": [{"column": 3, "type": "VARCHAR"}], "type": "VARCHAR"}, {"operator": "_ISO-8859-1'%issue%'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "LIKE", "operand": [{"operator": "LOWER", "operand": [{"column": 4, "type": "VARCHAR"}], "type": "VARCHAR"}, {"operator": "_ISO-8859-1'%issue%'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 7, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}}}}}}}, {"sort": {"collation": [[5, "TIMESTAMP", "DESC"]], "limit": {"operator": "10", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "VARCHAR"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "VARCHAR"}, {"column": 9, "type": "VARCHAR"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "TIMESTAMP"}, {"column": 13, "type": "TIMESTAMP"}, {"column": 14, "type": "VARCHAR"}, {"column": 15, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}, {"column": 17, "type": "BOOLEAN"}, {"column": 18, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 19, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IS NOT NULL", "operand": [{"column": 56, "type": "INTEGER"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 56, "type": "INTEGER"}, {"column": 44, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 29, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 56, "type": "INTEGER"}, {"column": 54, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 22, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 60, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 52, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 31, "type": "INTEGER"}, {"column": 53, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 44, "type": "INTEGER"}, {"column": 41, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 40, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'view_documents'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"column": 37, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 38, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'documents'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 29, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 19, "type": "INTEGER"}, {"column": 33, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 32, "type": "INTEGER"}, {"operator": "627", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 29, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 1}, "right": {"scan": 2}}}, "right": {"scan": 3}}}, "right": {"scan": 4}}}, "right": {"scan": 5}}}, "right": {"scan": 6}}}, "right": {"scan": 5}}}}}}}}}, "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "225", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "223", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "LIKE", "operand": [{"operator": "LOWER", "operand": [{"column": 3, "type": "VARCHAR"}], "type": "VARCHAR"}, {"operator": "_ISO-8859-1'%issue%'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "LIKE", "operand": [{"operator": "LOWER", "operand": [{"column": 4, "type": "VARCHAR"}], "type": "VARCHAR"}, {"operator": "_ISO-8859-1'%issue%'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 7, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}}}}}}}], "help": ["LogicalSort(sort0=[$5], dir0=[DESC], fetch=[10])\n  LogicalProject(t0_r0=[$0], t0_r1=[$1], t0_r2=[$2], t0_r3=[$3], t0_r4=[$4], t0_r5=[$5], t0_r6=[$6], t1_r0=[$7], t1_r1=[$8], t1_r2=[$9], t1_r3=[$10], t1_r4=[$11], t1_r5=[$12], t1_r6=[$13], t1_r7=[$14], t1_r8=[$15], t1_r9=[$16], t1_r10=[$17], t1_r11=[$18])\n    LogicalFilter(condition=[AND(IN($1, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[IS NOT NULL($37)])\n      LogicalJoin(condition=[AND(=($37, $25), =($10, true), OR(=($37, $35), AND(=($3, true), =($41, 1), IS NULL($33))))], joinType=[left])\n        LogicalJoin(condition=[=($12, $34)], joinType=[left])\n          LogicalJoin(condition=[=($25, $22)], joinType=[inner])\n            LogicalJoin(condition=[=($21, 'view_documents')], joinType=[inner])\n              LogicalJoin(condition=[AND(=($0, $18), =($19, 'documents'), =($10, true))], joinType=[inner])\n                LogicalJoin(condition=[AND(=($0, $14), =($13, 627), =($10, true))], joinType=[left])\n                  LogicalTableScan(table=[[Cosette, projects]])\n                  LogicalTableScan(table=[[Cosette, members]])\n                LogicalTableScan(table=[[Cosette, enabled_modules]])\n              LogicalTableScan(table=[[Cosette, role_permissions]])\n            LogicalTableScan(table=[[Cosette, roles]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n}), OR(=($1, 225), =($1, 223)), OR(LIKE(LOWER($3), '%issue%'), LIKE(LOWER($4), '%issue%')))])\n      LogicalJoin(condition=[=($7, $1)], joinType=[left])\n        LogicalTableScan(table=[[Cosette, documents]])\n        LogicalTableScan(table=[[Cosette, projects]])\n", "LogicalSort(sort0=[$5], dir0=[DESC], fetch=[10])\n  LogicalProject(t0_r0=[$0], t0_r1=[$1], t0_r2=[$2], t0_r3=[$3], t0_r4=[$4], t0_r5=[$5], t0_r6=[$6], t1_r0=[$7], t1_r1=[$8], t1_r2=[$9], t1_r3=[$10], t1_r4=[$11], t1_r5=[$12], t1_r6=[$13], t1_r7=[$14], t1_r8=[$15], t1_r9=[$16], t1_r10=[$17], t1_r11=[$18])\n    LogicalFilter(condition=[AND(IN($1, {\nLogicalSort(fetch=[1])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[IS NOT NULL($37)])\n      LogicalJoin(condition=[AND(=($37, $25), =($10, true), OR(=($37, $35), AND(=($3, true), =($41, 1), IS NULL($33))))], joinType=[left])\n        LogicalJoin(condition=[=($12, $34)], joinType=[inner])\n          LogicalJoin(condition=[=($25, $22)], joinType=[inner])\n            LogicalJoin(condition=[=($21, 'view_documents')], joinType=[inner])\n              LogicalJoin(condition=[AND(=($0, $18), =($19, 'documents'), =($10, true))], joinType=[inner])\n                LogicalJoin(condition=[AND(=($0, $14), =($13, 627), =($10, true))], joinType=[left])\n                  LogicalTableScan(table=[[Cosette, projects]])\n                  LogicalTableScan(table=[[Cosette, members]])\n                LogicalTableScan(table=[[Cosette, enabled_modules]])\n              LogicalTableScan(table=[[Cosette, role_permissions]])\n            LogicalTableScan(table=[[Cosette, roles]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n}), OR(=($1, 225), =($1, 223)), OR(LIKE(LOWER($3), '%issue%'), LIKE(LOWER($4), '%issue%')))])\n      LogicalJoin(condition=[=($7, $1)], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, documents]])\n        LogicalTableScan(table=[[Cosette, projects]])\n"]}