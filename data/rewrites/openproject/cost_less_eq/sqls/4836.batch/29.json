{"schemas": [{"name": "versions", "fields": ["project_id", "sharing"], "types": ["INTEGER", "VARCHAR"], "nullable": [false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"operator": "1", "operand": [], "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "7101", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 4, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": ">=", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "2", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 4, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "<=", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": ">=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "2", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<>", "operand": [{"column": 4, "type": "INTEGER"}, {"operator": "637", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 4, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": ">=", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "2", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}], "source": {"scan": 1}}}}}}}}}}}, {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"operator": "1", "operand": [], "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "7101", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 4, "type": "INTEGER"}], "source": {"sort": {"collation": [[1, "VARCHAR", "ASC"]], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 4, "type": "INTEGER"}, {"column": 5, "type": "VARCHAR"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": ">=", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "2", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 1}}}}}}}}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 4, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "<=", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": ">=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "2", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<>", "operand": [{"column": 4, "type": "INTEGER"}, {"operator": "637", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 1}}}}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IN", "operand": [{"column": 2, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 4, "type": "INTEGER"}], "source": {"sort": {"collation": [[1, "VARCHAR", "ASC"]], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 4, "type": "INTEGER"}, {"column": 5, "type": "VARCHAR"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": ">=", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<", "operand": [{"column": 12, "type": "INTEGER"}, {"operator": "2", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 1}}}}}}}}}, "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'none'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}], "source": {"scan": 1}}}}}}}}}}}], "help": ["LogicalSort(fetch=[1])\n  LogicalProject(one=[1])\n    LogicalFilter(condition=[OR(=($2, 7101), AND(=($3, true), =($1, 'none')), AND(=($3, true), IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[AND(>=($8, 1), <($8, 2))])\n    LogicalTableScan(table=[[Cosette, projects]])\n}), =($1, 'none')), AND(=($3, true), IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[AND(<=($8, 1), >=($9, 2), <>($0, 637))])\n    LogicalTableScan(table=[[Cosette, projects]])\n}), =($1, 'none')), AND(=($3, true), IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[AND(>=($8, 1), <($8, 2))])\n    LogicalTableScan(table=[[Cosette, projects]])\n}), =($1, 'none')))])\n      LogicalJoin(condition=[=($2, $0)], joinType=[left])\n        LogicalTableScan(table=[[Cosette, versions]])\n        LogicalProject(id=[$0], active=[$10])\n          LogicalTableScan(table=[[Cosette, projects]])\n", "LogicalSort(fetch=[1])\n  LogicalProject(one=[1])\n    LogicalFilter(condition=[OR(=($2, 7101), AND(=($3, true), =($1, 'none')), AND(=($3, true), IN($2, {\nLogicalProject(id=[$0])\n  LogicalSort(sort0=[$1], dir0=[ASC], fetch=[1])\n    LogicalProject(id=[$0], name=[$1])\n      LogicalFilter(condition=[AND(>=($8, 1), <($8, 2))])\n        LogicalTableScan(table=[[Cosette, projects]])\n}), =($1, 'none')), AND(=($3, true), IN($2, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[AND(<=($8, 1), >=($9, 2), <>($0, 637))])\n    LogicalTableScan(table=[[Cosette, projects]])\n}), =($1, 'none')), AND(=($3, true), IN($2, {\nLogicalProject(id=[$0])\n  LogicalSort(sort0=[$1], dir0=[ASC], fetch=[1])\n    LogicalProject(id=[$0], name=[$1])\n      LogicalFilter(condition=[AND(>=($8, 1), <($8, 2))])\n        LogicalTableScan(table=[[Cosette, projects]])\n}), =($1, 'none')))])\n      LogicalJoin(condition=[=($2, $0)], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, versions]])\n        LogicalProject(id=[$0], active=[$10])\n          LogicalTableScan(table=[[Cosette, projects]])\n"]}