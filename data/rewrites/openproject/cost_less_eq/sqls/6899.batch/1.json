{"schemas": [{"name": "relations", "fields": ["id", "from_id", "to_id", "delay", "description", "hierarchy", "relates", "duplicates", "blocks", "follows", "includes", "requires", "count"], "types": ["INTEGER", "INTEGER", "INTEGER", "INTEGER", "VARCHAR", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false, true, true, false, false, false, false, false, false, false, false], "key": [[1, 2, 5, 6, 7, 8, 9, 10, 11], [0]], "foreign": [], "guaranteed": []}, {"name": "work_packages", "fields": ["id", "project_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "enabled_modules", "fields": ["id", "project_id", "name"], "types": ["INTEGER", "INTEGER", "VARCHAR"], "nullable": [false, false, false], "key": [[2, 1], [0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [], "limit": {"operator": "4", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}], "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "2083", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 14, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 15, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 16, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 3, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 17, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}}}]}}, "type": "BOOLEAN"}, "source": {"scan": 1}}}}}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 15, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 16, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 3, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 17, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}}}]}}, "type": "BOOLEAN"}, "source": {"scan": 1}}}}}}}}}}}}}, {"sort": {"collation": [], "limit": {"operator": "4", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}, {"column": 4, "type": "VARCHAR"}, {"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"operator": "+", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}], "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}], "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "2083", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"column": 1, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "IN", "operand": [{"column": 1, "type": "INTEGER"}], "query": {"distinct": {"correlate": [{"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"project": {"target": [{"column": 2, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 15, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 16, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 12, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"column": 3, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 3, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 17, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 2}, "right": {"scan": 3}}}}}}}}}}}]}}, "type": "BOOLEAN"}, "source": {"scan": 1}}}}}}}}}}}}}], "help": ["LogicalSort(fetch=[4])\n  LogicalProject(id=[$0], from_id=[$1], to_id=[$2], delay=[$3], description=[$4], hierarchy=[$5], relates=[$6], duplicates=[$7], blocks=[$8], follows=[$9], includes=[$10], requires=[$11], count=[$12])\n    LogicalFilter(condition=[AND(=(+(+(+(+(+(+($5, $6), $7), $9), $8), $10), $11), 1), =($0, 2083))])\n      LogicalJoin(condition=[=($14, $2)], joinType=[inner])\n        LogicalJoin(condition=[=($13, $1)], joinType=[inner])\n          LogicalTableScan(table=[[Cosette, relations]])\n          LogicalProject(id=[$0])\n            LogicalFilter(condition=[IN($1, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n              LogicalTableScan(table=[[Cosette, work_packages]])\n        LogicalProject(id=[$0])\n          LogicalFilter(condition=[IN($1, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n            LogicalTableScan(table=[[Cosette, work_packages]])\n", "LogicalSort(fetch=[4])\n  LogicalProject(id=[$0], from_id=[$1], to_id=[$2], delay=[$3], description=[$4], hierarchy=[$5], relates=[$6], duplicates=[$7], blocks=[$8], follows=[$9], includes=[$10], requires=[$11], count=[$12])\n    LogicalFilter(condition=[AND(=(+(+(+(+(+(+($5, $6), $7), $9), $8), $10), $11), 1), =($0, 2083))])\n      LogicalJoin(condition=[=($13, $1)], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, relations]])\n        LogicalProject(id=[$0])\n          LogicalFilter(condition=[IN($1, {\nLogicalAggregate(group=[{0}])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $13), =($14, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n})])\n            LogicalTableScan(table=[[Cosette, work_packages]])\n"]}