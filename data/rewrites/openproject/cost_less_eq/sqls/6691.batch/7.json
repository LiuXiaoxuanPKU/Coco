{"schemas": [{"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "members", "fields": ["id", "user_id", "project_id"], "types": ["INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [[1, 2], [0]], "foreign": [], "guaranteed": []}, {"name": "role_permissions", "fields": ["permission", "role_id"], "types": ["VARCHAR", "INTEGER"], "nullable": [false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "roles", "fields": ["id", "builtin"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["id", "member_id", "role_id"], "types": ["INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [[0]], "foreign": [], "guaranteed": []}], "queries": [{"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"operator": "1", "operand": [], "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "IS NOT NULL", "operand": [{"column": 12, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "NOT", "operand": [{"operator": "IN", "operand": [{"column": 0, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 14, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": ">=", "operand": [{"column": 22, "type": "INTEGER"}, {"operator": "NULL", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<", "operand": [{"column": 22, "type": "INTEGER"}, {"operator": "NULL", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "8097", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 9, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 6, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'add_subprojects'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 5, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"operator": "211", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 3, "type": "BOOLEAN"}, {"column": 10, "type": "BOOLEAN"}], "source": {"scan": 0}}}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 3}}}}}, "right": {"scan": 4}}}, "right": {"scan": 3}}}}}}}}}, {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"operator": "1", "operand": [], "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "NOT", "operand": [{"operator": "IN", "operand": [{"column": 0, "type": "INTEGER"}], "query": {"project": {"target": [{"column": 14, "type": "INTEGER"}], "source": {"sort": {"collation": [[1, "VARCHAR", "ASC"]], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"project": {"target": [{"column": 14, "type": "INTEGER"}, {"column": 15, "type": "VARCHAR"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": ">=", "operand": [{"column": 22, "type": "INTEGER"}, {"operator": "NULL", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "<", "operand": [{"column": 22, "type": "INTEGER"}, {"operator": "NULL", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}}}}}, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"operator": "8097", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 8, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 11, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "INTEGER"}, {"operator": "1", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 9, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 10, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 7, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "INNER", "condition": {"operator": "=", "operand": [{"column": 6, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'add_subprojects'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 5, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"operator": "211", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 3, "type": "BOOLEAN"}, {"column": 10, "type": "BOOLEAN"}], "source": {"scan": 0}}}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 3}}}}}, "right": {"scan": 4}}}, "right": {"scan": 3}}}}}}}}}], "help": ["LogicalSort(fetch=[1])\n  LogicalProject(one=[1])\n    LogicalFilter(condition=[AND(IS NOT NULL($12), NOT(IN($0, {\nLogicalProject(id=[$0])\n  LogicalFilter(condition=[AND(>=($8, null), <($8, null))])\n    LogicalTableScan(table=[[Cosette, projects]])\n})), =($0, 8097))])\n      LogicalJoin(condition=[AND(=($12, $8), =($2, true), OR(=($12, $11), AND(=($1, true), =($13, 1), IS NULL($9))))], joinType=[left])\n        LogicalJoin(condition=[=($3, $10)], joinType=[left])\n          LogicalJoin(condition=[=($8, $7)], joinType=[inner])\n            LogicalJoin(condition=[=($6, 'add_subprojects')], joinType=[inner])\n              LogicalJoin(condition=[AND(=($0, $5), =($4, 211), =($2, true))], joinType=[left])\n                LogicalProject(id=[$0], public=[$3], active=[$10])\n                  LogicalTableScan(table=[[Cosette, projects]])\n                LogicalTableScan(table=[[Cosette, members]])\n              LogicalTableScan(table=[[Cosette, role_permissions]])\n            LogicalProject(id=[$0])\n              LogicalTableScan(table=[[Cosette, roles]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n", "LogicalSort(fetch=[1])\n  LogicalProject(one=[1])\n    LogicalFilter(condition=[AND(NOT(IN($0, {\nLogicalProject(id=[$0])\n  LogicalSort(sort0=[$1], dir0=[ASC], fetch=[1])\n    LogicalProject(id=[$0], name=[$1])\n      LogicalFilter(condition=[AND(>=($8, null), <($8, null))])\n        LogicalTableScan(table=[[Cosette, projects]])\n})), =($0, 8097))])\n      LogicalJoin(condition=[AND(=($12, $8), =($2, true), OR(=($12, $11), AND(=($1, true), =($13, 1), IS NULL($9))))], joinType=[inner])\n        LogicalJoin(condition=[=($3, $10)], joinType=[left])\n          LogicalJoin(condition=[=($8, $7)], joinType=[inner])\n            LogicalJoin(condition=[=($6, 'add_subprojects')], joinType=[inner])\n              LogicalJoin(condition=[AND(=($0, $5), =($4, 211), =($2, true))], joinType=[left])\n                LogicalProject(id=[$0], public=[$3], active=[$10])\n                  LogicalTableScan(table=[[Cosette, projects]])\n                LogicalTableScan(table=[[Cosette, members]])\n              LogicalTableScan(table=[[Cosette, role_permissions]])\n            LogicalProject(id=[$0])\n              LogicalTableScan(table=[[Cosette, roles]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n"]}