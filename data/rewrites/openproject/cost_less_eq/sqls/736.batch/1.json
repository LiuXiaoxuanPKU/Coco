{"schemas": [{"name": "projects", "fields": ["id", "name", "description", "public", "parent_id", "created_at", "updated_at", "identifier", "lft", "rgt", "active", "templated"], "types": ["INTEGER", "VARCHAR", "VARCHAR", "BOOLEAN", "INTEGER", "TIMESTAMP", "TIMESTAMP", "VARCHAR", "INTEGER", "INTEGER", "BOOLEAN", "BOOLEAN"], "nullable": [false, false, true, false, true, true, true, true, true, true, false, false], "key": [[7], [0]], "foreign": [], "guaranteed": []}, {"name": "enabled_modules", "fields": ["project_id", "name"], "types": ["INTEGER", "VARCHAR"], "nullable": [false, false], "key": [[1, 0]], "foreign": [], "guaranteed": []}], "queries": [{"distinct": {"correlate": [{"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}}}}}}}, {"aggregate": {"function": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "VARCHAR"}, {"column": 13, "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"column": 14, "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 3, "type": "BOOLEAN"}, {"column": 15, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "INTEGER"}, {"column": 16, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 5, "type": "TIMESTAMP"}, {"column": 17, "type": "TIMESTAMP"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 6, "type": "TIMESTAMP"}, {"column": 18, "type": "TIMESTAMP"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 7, "type": "VARCHAR"}, {"column": 19, "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 8, "type": "INTEGER"}, {"column": 20, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 9, "type": "INTEGER"}, {"column": 21, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"column": 22, "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 11, "type": "BOOLEAN"}, {"column": 23, "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 12, "type": "INTEGER"}, {"column": 13, "type": "VARCHAR"}, {"column": 14, "type": "VARCHAR"}, {"column": 15, "type": "BOOLEAN"}, {"column": 16, "type": "INTEGER"}, {"column": 17, "type": "TIMESTAMP"}, {"column": 18, "type": "TIMESTAMP"}, {"column": 19, "type": "VARCHAR"}, {"column": 20, "type": "INTEGER"}, {"column": 21, "type": "INTEGER"}, {"column": 22, "type": "BOOLEAN"}, {"column": 23, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 22, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 12, "type": "INTEGER"}, {"column": 24, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 25, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 22, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}}}}}}}}}]}}, {"project": {"target": [{"column": 0, "type": "INTEGER"}, {"column": 1, "type": "VARCHAR"}, {"column": 2, "type": "VARCHAR"}, {"column": 3, "type": "BOOLEAN"}, {"column": 4, "type": "INTEGER"}, {"column": 5, "type": "TIMESTAMP"}, {"column": 6, "type": "TIMESTAMP"}, {"column": 7, "type": "VARCHAR"}, {"column": 8, "type": "INTEGER"}, {"column": 9, "type": "INTEGER"}, {"column": 10, "type": "BOOLEAN"}, {"column": 11, "type": "BOOLEAN"}], "source": {"filter": {"condition": {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "INNER", "condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "INTEGER"}, {"column": 12, "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 13, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'work_package_tracking'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 10, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}}}}}], "help": ["LogicalAggregate(group=[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}])\n  LogicalProject(id=[$0], name=[$1], description=[$2], public=[$3], parent_id=[$4], created_at=[$5], updated_at=[$6], identifier=[$7], lft=[$8], rgt=[$9], active=[$10], templated=[$11])\n    LogicalFilter(condition=[=($10, true)])\n      LogicalJoin(condition=[AND(=($0, $12), =($13, 'work_package_tracking'), =($10, true))], joinType=[inner])\n        LogicalTableScan(table=[[Cosette, projects]])\n        LogicalTableScan(table=[[Cosette, enabled_modules]])\n", "LogicalProject(id=[$0], name=[$1], description=[$2], public=[$3], parent_id=[$4], created_at=[$5], updated_at=[$6], identifier=[$7], lft=[$8], rgt=[$9], active=[$10], templated=[$11])\n  LogicalFilter(condition=[=($10, true)])\n    LogicalJoin(condition=[AND(=($0, $12), =($13, 'work_package_tracking'), =($10, true))], joinType=[inner])\n      LogicalTableScan(table=[[Cosette, projects]])\n      LogicalTableScan(table=[[Cosette, enabled_modules]])\n"]}