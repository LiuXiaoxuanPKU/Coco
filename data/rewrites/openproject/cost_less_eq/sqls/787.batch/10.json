{"schemas": [{"name": "members", "fields": ["id", "user_id", "project_id"], "types": ["INTEGER", "INTEGER", "INTEGER"], "nullable": [false, false, false], "key": [[1, 2], [0]], "foreign": [], "guaranteed": []}, {"name": "projects", "fields": ["id", "active"], "types": ["INTEGER", "BOOLEAN"], "nullable": [false, false], "key": [[0]], "foreign": [], "guaranteed": []}, {"name": "member_roles", "fields": ["member_id", "role_id"], "types": ["INTEGER", "INTEGER"], "nullable": [false, false], "key": [], "foreign": [], "guaranteed": []}, {"name": "roles", "fields": ["id"], "types": ["INTEGER"], "nullable": [false], "key": [[0]], "foreign": [], "guaranteed": []}], "queries": [{"distinct": {"correlate": [{"project": {"target": [], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "24939", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 4, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "3972", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "4616", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 7, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}, {"aggregate": {"function": [{"operator": "COUNT", "operand": [{"column": 0, "type": "INTEGER"}], "distinct": true, "ignoreNulls": false, "type": "BIGINT"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "24939", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 4, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "IS NULL", "operand": [{"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "3972", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "4616", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 7, "type": "INTEGER"}, {"column": 6, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"scan": 2}}}, "right": {"scan": 3}}}}}}}}}}}]}}, {"distinct": {"correlate": [{"project": {"target": [], "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "24939", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 4, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "false", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "2166", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "41", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 2}}}}}}}}}}}, {"aggregate": {"function": [{"operator": "COUNT", "operand": [{"column": 0, "type": "INTEGER"}], "distinct": true, "ignoreNulls": false, "type": "BIGINT"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [], "type": "BOOLEAN"}, "source": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 1, "type": "INTEGER"}, {"operator": "24939", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 4, "type": "BOOLEAN"}, {"operator": "true", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "false", "operand": [], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "OR", "operand": [{"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "2166", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "INTEGER"}, {"operator": "41", "operand": [], "type": "INTEGER"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 5, "type": "INTEGER"}, {"column": 0, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"join": {"kind": "LEFT", "condition": {"operator": "=", "operand": [{"column": 3, "type": "INTEGER"}, {"column": 2, "type": "INTEGER"}], "type": "BOOLEAN"}, "left": {"scan": 0}, "right": {"scan": 1}}}, "right": {"project": {"target": [{"column": 0, "type": "INTEGER"}], "source": {"scan": 2}}}}}}}}}}}}}]}}], "help": ["LogicalAggregate(group=[{}], EXPR$0=[COUNT(DISTINCT $0)])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[AND(=($1, 24939), OR(=($4, true), IS NULL($2)), OR(=($2, 3972), =($2, 4616)))])\n      LogicalJoin(condition=[=($7, $6)], joinType=[left])\n        LogicalJoin(condition=[=($5, $0)], joinType=[left])\n          LogicalJoin(condition=[=($3, $2)], joinType=[left])\n            LogicalTableScan(table=[[Cosette, members]])\n            LogicalTableScan(table=[[Cosette, projects]])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n        LogicalTableScan(table=[[Cosette, roles]])\n", "LogicalAggregate(group=[{}], EXPR$0=[COUNT(DISTINCT $0)])\n  LogicalProject(id=[$0])\n    LogicalFilter(condition=[AND(=($1, 24939), OR(=($4, true), false), OR(=($2, 2166), =($2, 41)))])\n      LogicalJoin(condition=[=($5, $0)], joinType=[left])\n        LogicalJoin(condition=[=($3, $2)], joinType=[left])\n          LogicalTableScan(table=[[Cosette, members]])\n          LogicalTableScan(table=[[Cosette, projects]])\n        LogicalProject(member_id=[$0])\n          LogicalTableScan(table=[[Cosette, member_roles]])\n"]}