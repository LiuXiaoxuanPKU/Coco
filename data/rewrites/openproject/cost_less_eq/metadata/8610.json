{
    "org": {
        "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
        "cost": 374.77,
        "rewrite_types": []
    },
    "rewrites": [
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.63,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.63,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.63,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.63,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.64,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets LEFT OUTER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, repositories.id AS t1_r0, repositories.project_id AS t1_r1, repositories.url AS t1_r2, repositories.login AS t1_r3, repositories.password AS t1_r4, repositories.root_url AS t1_r5, repositories.type AS t1_r6, repositories.path_encoding AS t1_r7, repositories.log_encoding AS t1_r8, repositories.scm_type AS t1_r9, repositories.required_storage_bytes AS t1_r10, repositories.storage_updated_at AS t1_r11, projects.id AS t2_r0, projects.name AS t2_r1, projects.description AS t2_r2, projects.public AS t2_r3, projects.parent_id AS t2_r4, projects.created_at AS t2_r5, projects.updated_at AS t2_r6, projects.identifier AS t2_r7, projects.lft AS t2_r8, projects.rgt AS t2_r9, projects.active AS t2_r10, projects.templated AS t2_r11 FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id LEFT OUTER JOIN projects ON projects.id = repositories.project_id WHERE repositories.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 627 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('repository') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_changesets') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND LOWER(comments) LIKE '%cook%' ORDER BY committed_on DESC LIMIT \"$1\"",
            "cost": 374.77,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        }
    ]
}