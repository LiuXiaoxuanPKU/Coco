{
    "org": {
        "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
        "cost": 381.63,
        "rewrite_types": []
    },
    "rewrites": [
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND False AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 0.02,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct",
                "RewriteNullPredicate"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 246.95,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 246.95,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 277.62,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 277.62,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 368.09,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 368.09,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 369.95,
            "rewrite_types": [
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 369.95,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 373.62,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 373.62,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.41,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.41,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.41,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.41,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.41,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.41,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.84,
            "rewrite_types": [
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 377.84,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.19,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.19,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.19,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.19,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.63,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.63,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.63,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.63,
            "rewrite_types": [
                "AddLimitOne",
                "RemoveDistinct"
            ]
        },
        {
            "sql": "SELECT notifications.* FROM notifications WHERE notifications.read_ian IS NOT NULL AND notifications.recipient_id IS NULL AND notifications.resource_type = \"$1\" AND notifications.resource_id IN (SELECT work_packages.id FROM work_packages WHERE work_packages.project_id IN (SELECT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id IS NULL AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('work_package_tracking') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_work_packages') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 1 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)) ORDER BY notifications.id DESC LIMIT \"$2\" OFFSET \"$3\"",
            "cost": 381.63,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne",
                "RemoveDistinct"
            ]
        }
    ]
}