{
    "org": {
        "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
        "cost": 0.01,
        "rewrite_types": []
    },
    "rewrites": [
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id INNER JOIN member_roles ON members.id = member_roles.member_id LEFT OUTER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1)",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        },
        {
            "sql": "SELECT SUM(COALESCE(cost_entries.overridden_costs, cost_entries.costs)) FROM cost_entries INNER JOIN work_packages ON work_packages.id = cost_entries.work_package_id INNER JOIN projects ON projects.id = work_packages.project_id WHERE 1 = 0 AND (cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) OR cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_own_cost_entries') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) AND cost_entries.user_id = 121) AND cost_entries.project_id IN (SELECT DISTINCT projects.id FROM projects LEFT OUTER JOIN members ON projects.id = members.project_id AND members.user_id = 121 AND projects.active = True INNER JOIN enabled_modules ON projects.id = enabled_modules.project_id AND enabled_modules.name IN ('costs') AND projects.active = True INNER JOIN role_permissions ON role_permissions.permission IN ('view_cost_rates') INNER JOIN roles AS permission_roles ON permission_roles.id = role_permissions.role_id LEFT OUTER JOIN member_roles ON members.id = member_roles.member_id INNER JOIN roles AS assigned_roles ON assigned_roles.id = permission_roles.id AND projects.active = True AND (assigned_roles.id = member_roles.role_id OR projects.public = True AND assigned_roles.builtin = 2 AND member_roles.id IS NULL) WHERE assigned_roles.id IS NOT NULL LIMIT 1) LIMIT 1",
            "cost": 0.01,
            "rewrite_types": [
                "ReplaceOuterJoin",
                "AddLimitOne"
            ]
        }
    ]
}