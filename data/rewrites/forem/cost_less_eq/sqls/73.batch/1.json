{"schemas": [{"name": "follows", "fields": ["blocked", "followable_id", "followable_type", "follower_id", "follower_type"], "types": ["BOOLEAN", "BIGINT", "VARCHAR", "BIGINT", "VARCHAR"], "nullable": [false, false, false, false, false], "key": [[1, 2, 3, 4]], "foreign": [], "guaranteed": []}], "queries": [{"distinct": {"correlate": [{"project": {"target": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "BOOLEAN"}, {"operator": "CAST", "operand": [{"operator": "_ISO-8859-1'false'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 3, "type": "BIGINT"}, {"operator": "5963", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "BIGINT"}, {"operator": "4329", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}, {"aggregate": {"function": [{"operator": "COUNT", "operand": [], "distinct": false, "ignoreNulls": false, "type": "BIGINT"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [], "type": "BOOLEAN"}, "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "BOOLEAN"}, {"operator": "CAST", "operand": [{"operator": "_ISO-8859-1'false'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 3, "type": "BIGINT"}, {"operator": "5963", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "BIGINT"}, {"operator": "4329", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}}}]}}, {"sort": {"collation": [], "limit": {"operator": "1", "operand": [], "type": "INTEGER"}, "source": {"distinct": {"correlate": [{"project": {"target": [], "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "BOOLEAN"}, {"operator": "CAST", "operand": [{"operator": "_ISO-8859-1'false'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 3, "type": "BIGINT"}, {"operator": "5963", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "BIGINT"}, {"operator": "4329", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}, {"aggregate": {"function": [{"operator": "COUNT", "operand": [], "distinct": false, "ignoreNulls": false, "type": "BIGINT"}], "source": {"filter": {"condition": {"operator": "AND", "operand": [], "type": "BOOLEAN"}, "source": {"filter": {"condition": {"operator": "AND", "operand": [{"operator": "=", "operand": [{"column": 0, "type": "BOOLEAN"}, {"operator": "CAST", "operand": [{"operator": "_ISO-8859-1'false'", "operand": [], "type": "CHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 3, "type": "BIGINT"}, {"operator": "5963", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 4, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 1, "type": "BIGINT"}, {"operator": "4329", "operand": [], "type": "BIGINT"}], "type": "BOOLEAN"}, {"operator": "=", "operand": [{"column": 2, "type": "VARCHAR"}, {"operator": "_ISO-8859-1'User'", "operand": [], "type": "VARCHAR"}], "type": "BOOLEAN"}], "type": "BOOLEAN"}, "source": {"scan": 0}}}}}}}]}}}}], "help": ["LogicalAggregate(group=[{}], EXPR$0=[COUNT()])\n  LogicalFilter(condition=[AND(=($0, CAST('false'):BOOLEAN NOT NULL), =($3, 5963), =($4, 'User'), =($1, 4329), =($2, 'User'))])\n    LogicalTableScan(table=[[Cosette, follows]])\n", "LogicalSort(fetch=[1])\n  LogicalAggregate(group=[{}], EXPR$0=[COUNT()])\n    LogicalFilter(condition=[AND(=($0, CAST('false'):BOOLEAN NOT NULL), =($3, 5963), =($4, 'User'), =($1, 4329), =($2, 'User'))])\n      LogicalTableScan(table=[[Cosette, follows]])\n"]}