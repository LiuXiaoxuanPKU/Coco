[
    {
        "src": "SELECT 1 AS one FROM \"wiki_pages\" WHERE LOWER(\"wiki_pages\".\"title\") = LOWER($1) AND \"wiki_pages\".\"wiki_id\" IS NULL LIMIT $2",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [
            "wiki_pages.title"
        ],
        "setup_query": [
            "SELECT wiki_pages.title FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( wiki_pages.title = ? and wiki_pages.wiki_id IS NULL ) LIMIT 37;",
            "after": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( wiki_pages.title = ? and wiki_pages.wiki_id IS NULL ) LIMIT 37;"
        }
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE (created_on < '2021-08-22 23:07:10.031931' AND (container_type IS NULL OR container_type = ''))",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-22 23:07:10.031931' and ( attachments.container_type IS NULL or attachments.container_type = '' ) );",
            "after": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-22 23:07:10.031931' and ( attachments.container_type IS NULL or attachments.container_type = '' ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"members\" WHERE \"members\".\"user_id\" IS NULL AND \"members\".\"project_id\" = $1 LIMIT $2",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [
            "members.project_id"
        ],
        "setup_query": [
            "SELECT members.project_id FROM members ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT members.id, 1 FROM members WHERE ( members.user_id IS NULL and members.project_id = ? ) LIMIT 90;",
            "after": "SELECT members.id, 1 FROM members WHERE ( members.user_id IS NULL and members.project_id = ? ) LIMIT 90;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"issue_relations\" WHERE \"issue_relations\".\"issue_to_id\" IS NULL AND \"issue_relations\".\"issue_from_id\" = $1 LIMIT $2",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [
            "issue_relations.issue_from_id"
        ],
        "setup_query": [
            "SELECT issue_relations.issue_from_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT issue_relations.id, 1 FROM issue_relations WHERE ( issue_relations.issue_to_id IS NULL and issue_relations.issue_from_id = ? ) LIMIT 78;",
            "after": "SELECT issue_relations.id, 1 FROM issue_relations WHERE ( issue_relations.issue_to_id IS NULL and issue_relations.issue_from_id = ? ) LIMIT 78;"
        }
    },
    {
        "src": "SELECT \"time_entries\".* FROM \"time_entries\" WHERE \"time_entries\".\"issue_id\" IS NULL ORDER BY \"time_entries\".\"id\" ASC LIMIT $1",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( time_entries.* ) FROM time_entries WHERE time_entries.issue_id IS NULL ORDER BY time_entries.id ASC LIMIT 92;",
            "after": "SELECT ( time_entries.* ) FROM time_entries WHERE time_entries.issue_id IS NULL ORDER BY time_entries.id ASC LIMIT 92;"
        }
    },
    {
        "src": "SELECT \"members\".* FROM \"members\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"members\".\"project_id\" WHERE \"members\".\"user_id\" = $1 AND \"projects\".\"status\" != $2 AND \"members\".\"project_id\" IS NULL ORDER BY \"members\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [
            "members.user_id",
            "projects.status"
        ],
        "setup_query": [
            "SELECT members.user_id FROM members ORDER BY RANDOM() LIMIT 1;",
            "SELECT projects.status FROM projects ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( members.* ) FROM members INNER JOIN projects ON (projects.id = members.project_id) WHERE ( ( members.user_id = ? and projects.status != ? ) and members.project_id IS NULL ) ORDER BY members.id ASC LIMIT 99;",
            "after": "SELECT ( members.* ) FROM members INNER JOIN projects ON (projects.id = members.project_id) WHERE ( ( members.user_id = ? and projects.status != ? ) and members.project_id IS NULL ) ORDER BY members.id ASC LIMIT 99;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"wiki_pages\" WHERE \"wiki_pages\".\"title\" IS NULL AND \"wiki_pages\".\"wiki_id\" = $1 LIMIT $2",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [
            "wiki_pages.wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( wiki_pages.title IS NULL and wiki_pages.wiki_id = ? ) LIMIT 84;",
            "after": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( wiki_pages.title IS NULL and wiki_pages.wiki_id = ? ) LIMIT 84;"
        }
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE (created_on < '2021-08-24 04:26:31.148038' AND (container_type IS NULL OR container_type = ''))",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-24 04:26:31.148038' and ( attachments.container_type IS NULL or attachments.container_type = '' ) );",
            "after": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-24 04:26:31.148038' and ( attachments.container_type IS NULL or attachments.container_type = '' ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"user_id\" = $1 AND \"watchers\".\"watchable_type\" = $2 AND \"watchers\".\"watchable_id\" IS NULL LIMIT $3",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [
            "watchers.user_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.user_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( ( watchers.user_id = ? and watchers.watchable_type = ? ) and watchers.watchable_id IS NULL ) LIMIT 62;",
            "after": "SELECT watchers.id, 1 FROM watchers WHERE ( ( watchers.user_id = ? and watchers.watchable_type = ? ) and watchers.watchable_id IS NULL ) LIMIT 62;"
        }
    },
    {
        "src": "SELECT \"wikis\".* FROM \"wikis\" WHERE \"wikis\".\"project_id\" IS NULL LIMIT $1",
        "rewrite_type": "remove_nil_pattern",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( wikis.* ) FROM wikis WHERE wikis.project_id IS NULL LIMIT 57;",
            "after": "SELECT ( wikis.* ) FROM wikis WHERE wikis.project_id IS NULL LIMIT 57;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"status\" = $3 AND \"users\".\"type\" IN ($4, $5) ORDER BY users.type DESC, users.firstname, users.lastname, users.id",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('testuser@example.org'))",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 5)",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('dlopper@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 55;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 55;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"status\" = $3 AND \"users\".\"type\" IN ($4, $5) LIMIT $6",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? ) LIMIT 52;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? ) LIMIT 52;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 4)",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"status\" = $3 AND \"users\".\"type\" IN ($4, $5)",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@bar.net')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 2;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 2;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 3)",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 1)",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('r@mycompanyname.com'))",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 2)",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('jdoe@example.net')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 88;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 88;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"type\" IN ($3, $4) LIMIT $5",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.type in ? ) LIMIT 68;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.type in ? ) LIMIT 68;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('jsmith@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 25;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 25;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('redmine@somenet.foo','dlopper@somenet.foo'))",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('redmine@somenet.foo'))",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('john.doe@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 98;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 98;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@example.org')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 26;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 26;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('invalid@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 68;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 68;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('anotheraddress@foo.bar')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 63;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 63;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 50) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 6)",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 8) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 2) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@example.com')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 17;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 17;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 1) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('newuser@foo.bar')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "remove_distinct_pattern",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 33;",
            "after": "SELECT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 33;"
        }
    },
    {
        "src": "SELECT \"issue_relations\".* FROM \"issue_relations\" WHERE \"issue_relations\".\"issue_from_id\" = $1 AND \"issue_relations\".\"issue_to_id\" = $2 AND \"issue_relations\".\"relation_type\" = $3 AND \"issue_relations\".\"delay\" = $4",
        "rewrite_type": "add_limit",
        "setup_fields": [
            "issue_relations.delay",
            "issue_relations.issue_to_id",
            "issue_relations.relation_type",
            "issue_relations.issue_from_id"
        ],
        "setup_query": [
            "SELECT issue_relations.delay FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_to_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.relation_type FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_from_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( ( ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) and issue_relations.relation_type = ? ) and issue_relations.delay = ? );",
            "after": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( ( ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) and issue_relations.relation_type = ? ) and issue_relations.delay = ? ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"email_addresses\".* FROM \"email_addresses\" WHERE \"email_addresses\".\"address\" = $1",
        "rewrite_type": "add_limit",
        "setup_fields": [
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( email_addresses.* ) FROM email_addresses WHERE email_addresses.address = ?;",
            "after": "SELECT ( email_addresses.* ) FROM email_addresses WHERE email_addresses.address = ? LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"login\" = $3",
        "rewrite_type": "add_limit",
        "setup_fields": [
            "users.type",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = ? );",
            "after": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = ? ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE (created_on < '2021-08-22 23:07:10.031931' AND (container_type IS NULL OR container_type = ''))",
        "rewrite_type": "add_limit",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-22 23:07:10.031931' and ( attachments.container_type IS NULL or attachments.container_type = '' ) );",
            "after": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-22 23:07:10.031931' and ( attachments.container_type IS NULL or attachments.container_type = '' ) ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"issue_relations\".* FROM \"issue_relations\" WHERE \"issue_relations\".\"issue_from_id\" = $1 AND \"issue_relations\".\"issue_to_id\" = $2",
        "rewrite_type": "add_limit",
        "setup_fields": [
            "issue_relations.issue_to_id",
            "issue_relations.issue_from_id"
        ],
        "setup_query": [
            "SELECT issue_relations.issue_to_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_from_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? );",
            "after": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND \"users\".\"login\" = $4",
        "rewrite_type": "add_limit",
        "setup_fields": [
            "users.type",
            "users.status",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.login = ? );",
            "after": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.login = ? ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"roles\".* FROM \"roles\" WHERE ( builtin = 0)",
        "rewrite_type": "add_limit",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( roles.* ) FROM roles WHERE roles.builtin = 0;",
            "after": "SELECT ( roles.* ) FROM roles WHERE roles.builtin = 0 LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"issue_relations\".* FROM \"issue_relations\" WHERE \"issue_relations\".\"issue_from_id\" = $1 AND \"issue_relations\".\"issue_to_id\" = $2 AND \"issue_relations\".\"relation_type\" IN ($3, $4)",
        "rewrite_type": "add_limit",
        "setup_fields": [
            "issue_relations.issue_to_id",
            "issue_relations.relation_type",
            "issue_relations.issue_from_id"
        ],
        "setup_query": [
            "SELECT issue_relations.issue_to_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.relation_type FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_from_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) and issue_relations.relation_type in ? );",
            "after": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) and issue_relations.relation_type in ? ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE (created_on < '2021-08-24 04:26:31.148038' AND (container_type IS NULL OR container_type = ''))",
        "rewrite_type": "add_limit",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-24 04:26:31.148038' and ( attachments.container_type IS NULL or attachments.container_type = '' ) );",
            "after": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.created_on < '2021-08-24 04:26:31.148038' and ( attachments.container_type IS NULL or attachments.container_type = '' ) ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"issue_relations\".* FROM \"issue_relations\" WHERE \"issue_relations\".\"issue_from_id\" = $1 AND \"issue_relations\".\"issue_to_id\" = $2 AND \"issue_relations\".\"delay\" = $3 AND \"issue_relations\".\"relation_type\" = $4",
        "rewrite_type": "add_limit",
        "setup_fields": [
            "issue_relations.delay",
            "issue_relations.issue_to_id",
            "issue_relations.relation_type",
            "issue_relations.issue_from_id"
        ],
        "setup_query": [
            "SELECT issue_relations.delay FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_to_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.relation_type FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_from_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;"
        ],
        "experiment_query": {
            "before": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( ( ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) and issue_relations.delay = ? ) and issue_relations.relation_type = ? );",
            "after": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( ( ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) and issue_relations.delay = ? ) and issue_relations.relation_type = ? ) LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 13 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 13 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 44 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 100;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 100;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 31 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 44 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 97;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 97;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 ORDER BY id desc LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE custom_fields.type = ? ORDER BY custom_fields.id DESC LIMIT 79;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE custom_fields_new.type_int = ? ORDER BY custom_fields_new.id DESC LIMIT 79;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"id\" IN ($2, $3, $4, $5, $6)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.id"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.id FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.id in ? );",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.id in ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"name\" = $1 AND \"enumerations\".\"id\" != $2 AND \"enumerations\".\"type\" = $3 AND \"enumerations\".\"project_id\" = $4 LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.name",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.name = ? and enumerations.id != ? ) and enumerations.type = ? ) and enumerations.project_id = ? ) LIMIT 90;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.name = ? and enumerations_new.id != ? ) and enumerations_new.type_int = ? ) and enumerations_new.project_id = ? ) LIMIT 90;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"status\" = $3 AND \"users\".\"type\" IN ($4, $5) ORDER BY users.type DESC, users.firstname, users.lastname, users.id",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( ( ( users_new.status = ? and members.project_id = 3 ) and users_new.status = ? ) and users_new.status = ? ) and users_new.type_int in ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (LOWER(enumerations.name) = LOWER('foo')) ORDER BY \"enumerations\".\"position\" ASC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.name = 'foo' ) ORDER BY enumerations.position ASC LIMIT 73;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.name = 'foo' ) ORDER BY enumerations_new.position ASC LIMIT 73;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 49 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 49 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND \"users\".\"admin\" = $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "users.admin"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.admin FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.admin = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and users_new.admin = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"members\".* FROM \"members\" INNER JOIN \"users\" ON \"users\".\"id\" = \"members\".\"user_id\" WHERE \"members\".\"project_id\" = $1 AND \"users\".\"type\" = $2 AND \"users\".\"status\" = $3 ORDER BY \"members\".\"id\" ASC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "members.project_id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT members.project_id FROM members ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( members.* ) FROM members INNER JOIN users ON (users.id = members.user_id) WHERE ( ( members.project_id = ? and users.type = ? ) and users.status = ? ) ORDER BY members.id ASC LIMIT 72;",
            "after": "SELECT ( members.* ) FROM members INNER JOIN users_new ON (users_new.id = members.user_id) WHERE ( ( members.project_id = ? and users_new.type_int = ? ) and users_new.status = ? ) ORDER BY members.id ASC LIMIT 72;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"position\" = $2 AND \"enumerations\".\"parent_id\" IS NULL ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.position",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.position FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and enumerations.position = ? ) and enumerations.parent_id IS NULL ) ORDER BY enumerations.position ASC LIMIT 64;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and enumerations_new.position = ? ) and enumerations_new.parent_id IS NULL ) ORDER BY enumerations_new.position ASC LIMIT 64;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 23 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 23 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 67 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 67 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '1710ec44ca59418837e1aebc9cfd9b5137d9506d') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '1710ec44ca59418837e1aebc9cfd9b5137d9506d' ) LIMIT 67;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = '1710ec44ca59418837e1aebc9cfd9b5137d9506d' ) LIMIT 67;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" IN ($2, $3) ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.project_id in ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.project_id in ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND \"users\".\"type\" = $5 LIMIT $6",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE ( users.type in ? and users.type = ? ) LIMIT 58;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE ( users_new.type_int in ? and users_new.type_int = ? ) LIMIT 58;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"lastname\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.lastname"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.lastname FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.lastname = ? ) LIMIT 24;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.lastname = ? ) LIMIT 24;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 81 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 42;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 42;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY created_on desc LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? ) ORDER BY journals.created_on DESC LIMIT 40;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) ORDER BY journals_new.created_on DESC LIMIT 40;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('testuser@example.org'))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" WHERE \"versions\".\"sharing\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions WHERE versions.sharing = ?;",
            "after": "SELECT ( versions_new.* ) FROM versions_new WHERE versions_new.sharing_int = ?;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 36 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 11 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 11 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 5)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('dlopper@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 55;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 55;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 8) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 44;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 44;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"login\" = $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) ORDER BY \"users\".\"type\" ASC, \"users\".\"lastname\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ?;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ?;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (LOWER(enumerations.name) = LOWER('Urgent')) ORDER BY \"enumerations\".\"position\" ASC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.name = 'Urgent' ) ORDER BY enumerations.position ASC LIMIT 91;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.name = 'Urgent' ) ORDER BY enumerations_new.position ASC LIMIT 91;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 2 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 11 AND projects.rgt > 12 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 11 AND projects.rgt < 12 AND versions.sharing = 'hierarchy')))) AND (LOWER(versions.name) = LOWER('Alpha')) ORDER BY \"versions\".\"id\" ASC LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.name = 'Alpha' ) ORDER BY versions.id ASC LIMIT 58;",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.name = 'Alpha' ) ORDER BY versions_new.id ASC LIMIT 58;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"is_filter\" = $2 ORDER BY \"custom_fields\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.is_filter"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.is_filter FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.is_filter = ? ) ORDER BY custom_fields.position ASC;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.is_filter = ? ) ORDER BY custom_fields_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 3) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 75 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 58;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 58;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 ORDER BY \"custom_fields\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE custom_fields.type = ? ORDER BY custom_fields.position ASC;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE custom_fields_new.type_int = ? ORDER BY custom_fields_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND (LOWER(versions.name) = LOWER('2.1')) ORDER BY \"versions\".\"id\" ASC LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.name = '2.1' ) ORDER BY versions.id ASC LIMIT 44;",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.name = '2.1' ) ORDER BY versions_new.id ASC LIMIT 44;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 10 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.id = ? ) LIMIT 7;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.id = ? ) LIMIT 7;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 58 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 58 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"watchers\".* FROM \"watchers\" WHERE \"watchers\".\"watchable_id\" = $1 AND \"watchers\".\"watchable_type\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( watchers.* ) FROM watchers WHERE ( watchers.watchable_id = ? and watchers.watchable_type = ? );",
            "after": "SELECT ( watchers_new.* ) FROM watchers_new WHERE ( watchers_new.watchable_id = ? and watchers_new.watchable_type_int = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 ORDER BY \"enumerations\".\"position\" DESC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE enumerations.type = ? ORDER BY enumerations.position DESC LIMIT 15;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE enumerations_new.type_int = ? ORDER BY enumerations_new.position DESC LIMIT 15;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"watchable_type\" = $1 AND \"watchers\".\"watchable_id\" = $2 AND \"watchers\".\"user_id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.user_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.user_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( ( watchers.watchable_type = ? and watchers.watchable_id = ? ) and watchers.user_id = ? ) LIMIT 62;",
            "after": "SELECT watchers_new.id, 1 FROM watchers_new WHERE ( ( watchers_new.watchable_type_int = ? and watchers_new.watchable_id = ? ) and watchers_new.user_id = ? ) LIMIT 62;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '4653f594ea9f52648876463d1bfe2e849916da5f') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '4653f594ea9f52648876463d1bfe2e849916da5f' ) LIMIT 74;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = '4653f594ea9f52648876463d1bfe2e849916da5f' ) LIMIT 74;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"status\" = $1 AND \"users\".\"status\" = $2 AND \"users\".\"type\" IN ($3, $4) AND \"users\".\"id\" = $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( ( users.status = ? and users.status = ? ) and users.type in ? ) and users.id = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( ( users_new.status = ? and users_new.status = ? ) and users_new.type_int in ? ) and users_new.id = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"status\" = $3 AND \"users\".\"type\" IN ($4, $5) LIMIT $6",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? ) LIMIT 52;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( ( ( users_new.status = ? and members.project_id = 3 ) and users_new.status = ? ) and users_new.status = ? ) and users_new.type_int in ? ) LIMIT 52;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 7) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 25 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 48;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 48;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(login) = 'admin') LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.login = 'admin' ) LIMIT 39;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and users_new.login = 'admin' ) LIMIT 39;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 86) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"members\".* FROM \"members\" INNER JOIN \"users\" ON \"users\".\"id\" = \"members\".\"user_id\" WHERE \"members\".\"project_id\" = $1 AND \"users\".\"type\" = $2 AND \"users\".\"status\" = $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "members.project_id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT members.project_id FROM members ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( members.* ) FROM members INNER JOIN users ON (users.id = members.user_id) WHERE ( ( members.project_id = ? and users.type = ? ) and users.status = ? );",
            "after": "SELECT ( members.* ) FROM members INNER JOIN users_new ON (users_new.id = members.user_id) WHERE ( ( members.project_id = ? and users_new.type_int = ? ) and users_new.status = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 17 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 22 AND versions.sharing = 'tree') OR (projects.lft < 17 AND projects.rgt > 18 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 17 AND projects.rgt < 18 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 22 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 17 and projects.rgt > 18 ) and versions.sharing in ? ) ) or ( ( projects.lft > 17 and projects.rgt < 18 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 79;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 22 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 17 and projects.rgt > 18 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 17 and projects.rgt < 18 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 79;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"is_default\" = $1 AND \"enumerations\".\"type\" = $2 ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.is_default",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.is_default FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.is_default = ? and enumerations.type = ? ) ORDER BY enumerations.position ASC LIMIT 100;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.is_default = ? and enumerations_new.type_int = ? ) ORDER BY enumerations_new.position ASC LIMIT 100;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"id\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.id = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.id = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'psmith') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'psmith' ) LIMIT 5;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'psmith' ) LIMIT 5;"
        }
    },
    {
        "src": "SELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"commented_id\" = $1 AND \"comments\".\"commented_type\" = $2 ORDER BY created_on DESC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "comments.commented_id",
            "comments.commented_type"
        ],
        "setup_query": [
            "SELECT comments.commented_id FROM comments ORDER BY RANDOM() LIMIT 1;",
            "SELECT comments.commented_type FROM comments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "comments.commented_type": [
                "News"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( comments.* ) FROM comments WHERE ( comments.commented_id = ? and comments.commented_type = ? ) ORDER BY comments.created_on DESC LIMIT 10;",
            "after": "SELECT ( comments_new.* ) FROM comments_new WHERE ( comments_new.commented_id = ? and comments_new.commented_type_int = ? ) ORDER BY comments_new.created_on DESC LIMIT 10;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"name\" = $1 AND \"custom_fields\".\"type\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.name",
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.name FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT custom_fields.id, 1 FROM custom_fields WHERE ( custom_fields.name = ? and custom_fields.type = ? ) LIMIT 57;",
            "after": "SELECT custom_fields_new.id, 1 FROM custom_fields_new WHERE ( custom_fields_new.name = ? and custom_fields_new.type_int = ? ) LIMIT 57;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 4)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 13 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 72;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 72;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"status\" = $3 AND \"users\".\"type\" IN ($4, $5)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.status = ? ) and users.type in ? );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( ( ( users_new.status = ? and members.project_id = 3 ) and users_new.status = ? ) and users_new.status = ? ) and users_new.type_int in ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" = $1 AND \"users\".\"lastname\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.lastname"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.lastname FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type = ? and users.lastname = ? ) LIMIT 19;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int = ? and users_new.lastname = ? ) LIMIT 19;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY created_on DESC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? ) ORDER BY journals.created_on DESC LIMIT 41;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) ORDER BY journals_new.created_on DESC LIMIT 41;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) ORDER BY users.type DESC, users.firstname, users.lastname, users.id",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ?;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ?;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 50 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE users.type = ? LIMIT 27;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE users_new.type_int = ? LIMIT 27;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 18 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 24 AND versions.sharing = 'tree') OR (projects.lft < 18 AND projects.rgt > 19 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 18 AND projects.rgt < 19 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 24 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 18 and projects.rgt > 19 ) and versions.sharing in ? ) ) or ( ( projects.lft > 18 and projects.rgt < 19 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 97;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 24 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 18 and projects.rgt > 19 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 18 and projects.rgt < 19 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 97;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 16 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"settings\".* FROM \"settings\" WHERE \"settings\".\"name\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "settings.name"
        ],
        "setup_query": [
            "SELECT settings.name FROM settings ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "settings.name": []
        },
        "experiment_query": {
            "before": "SELECT ( settings.* ) FROM settings WHERE settings.name = ? LIMIT 46;",
            "after": "SELECT ( settings_new.* ) FROM settings_new WHERE settings_new.name_int = ? LIMIT 46;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" IS NULL ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.project_id IS NULL ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.project_id IS NULL ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"id\" IN ($2, $3, $4)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.id"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.id FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.id in ? );",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.id in ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 15 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 18 AND versions.sharing = 'tree') OR (projects.lft < 15 AND projects.rgt > 16 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 15 AND projects.rgt < 16 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 18 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 90;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 18 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 90;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"admin\" = $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.admin"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.admin FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.admin = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.admin = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 2 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 11 AND projects.rgt > 12 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 11 AND projects.rgt < 12 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 87;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 87;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 65) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'cool_user') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'cool_user' ) LIMIT 36;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'cool_user' ) LIMIT 36;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" WHERE \"versions\".\"project_id\" = $1 AND \"versions\".\"status\" IN ($2, $3)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.status",
            "versions.project_id"
        ],
        "setup_query": [
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.project_id FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions WHERE ( versions.project_id = ? and versions.status in ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new WHERE ( versions_new.project_id = ? and versions_new.status_int in ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 AND (LOWER(enumerations.name) = LOWER('Inactive Activity')) ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.name = 'Inactive Activity' ) ORDER BY enumerations.position ASC LIMIT 36;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.name = 'Inactive Activity' ) ORDER BY enumerations_new.position ASC LIMIT 36;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"position\" = $2 AND \"enumerations\".\"parent_id\" = $3 AND \"enumerations\".\"project_id\" = $4 ORDER BY \"enumerations\".\"position\" ASC LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.parent_id",
            "enumerations.position",
            "enumerations.type",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.parent_id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.position FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( ( enumerations.type = ? and enumerations.position = ? ) and enumerations.parent_id = ? ) and enumerations.project_id = ? ) ORDER BY enumerations.position ASC LIMIT 62;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and enumerations_new.position = ? ) and enumerations_new.parent_id = ? ) and enumerations_new.project_id = ? ) ORDER BY enumerations_new.position ASC LIMIT 62;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 ORDER BY login DESC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.status = ? ) ORDER BY users.login DESC LIMIT 55;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.status = ? ) ORDER BY users_new.login DESC LIMIT 55;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE enumerations.type = ? LIMIT 73;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE enumerations_new.type_int = ? LIMIT 73;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"name\" = $1 AND \"custom_fields\".\"id\" != $2 AND \"custom_fields\".\"type\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.name",
            "custom_fields.type",
            "custom_fields.id"
        ],
        "setup_query": [
            "SELECT custom_fields.name FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.id FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT custom_fields.id, 1 FROM custom_fields WHERE ( ( custom_fields.name = ? and custom_fields.id != ? ) and custom_fields.type = ? ) LIMIT 20;",
            "after": "SELECT custom_fields_new.id, 1 FROM custom_fields_new WHERE ( ( custom_fields_new.name = ? and custom_fields_new.id != ? ) and custom_fields_new.type_int = ? ) LIMIT 20;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.id"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.id FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.id = ? ) LIMIT 75;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.id = ? ) LIMIT 75;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 41 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 41 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT journals.id, 1 FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? ) LIMIT 50;",
            "after": "SELECT journals_new.id, 1 FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) LIMIT 50;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 76 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND \"users\".\"type\" = $5 AND \"users\".\"status\" = $6",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.type = ? ) and users.status = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.type_int = ? ) and users_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".\"parent_id\" FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, enumerations.parent_id FROM enumerations WHERE ( enumerations.type = ? and enumerations.project_id = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT enumerations_new.id, enumerations_new.parent_id FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.project_id = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 52 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 85) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 47 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 12 AND projects.rgt > 13 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 12 AND projects.rgt < 13 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 12 and projects.rgt > 13 ) and versions.sharing in ? ) ) or ( ( projects.lft > 12 and projects.rgt < 13 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 14;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 12 and projects.rgt > 13 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 12 and projects.rgt < 13 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 14;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 AND (journals.id > 2) ORDER BY journals.id ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( ( journals.journalized_id = ? and journals.journalized_type = ? ) and journals.id > 3 ) ORDER BY journals.id ASC;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) and journals_new.id > 3 ) ORDER BY journals_new.id ASC;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" IS NULL AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and enumerations.project_id IS NULL ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and enumerations_new.project_id IS NULL ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"searchable\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.searchable",
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.searchable FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.searchable = ? );",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.searchable = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 37 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 37 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@bar.net')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 2;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 2;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"watchable_type\" = $1 AND \"watchers\".\"watchable_id\" IN ($2, $3) AND \"watchers\".\"user_id\" = $4 LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.user_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.user_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( ( watchers.watchable_type = ? and watchers.watchable_id in ? ) and watchers.user_id = ? ) LIMIT 97;",
            "after": "SELECT watchers_new.id, 1 FROM watchers_new WHERE ( ( watchers_new.watchable_type_int = ? and watchers_new.watchable_id in ? ) and watchers_new.user_id = ? ) LIMIT 97;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'foo') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'foo' ) LIMIT 73;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'foo' ) LIMIT 73;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 47 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) ORDER BY \"users\".\"id\" ASC LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ? ORDER BY users.id ASC LIMIT 36;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ? ORDER BY users_new.id ASC LIMIT 36;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'john') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'john' ) LIMIT 78;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'john' ) LIMIT 78;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 ORDER BY login",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.status = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.status = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 3)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND \"users\".\"id\" = $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.id = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.id = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 24 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) ORDER BY id desc LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ? ORDER BY users.id DESC LIMIT 77;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ? ORDER BY users_new.id DESC LIMIT 77;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 AND (LOWER(enumerations.name) = LOWER('Development')) ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.name = 'Development' ) ORDER BY enumerations.position ASC LIMIT 3;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.name = 'Development' ) ORDER BY enumerations_new.position ASC LIMIT 3;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"is_filter\" = $1 AND \"custom_fields\".\"type\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.is_filter"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.is_filter FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.is_filter = ? and custom_fields.type = ? );",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.is_filter = ? and custom_fields_new.type_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" INNER JOIN \"watchers\" ON \"users\".\"id\" = \"watchers\".\"user_id\" WHERE \"watchers\".\"watchable_id\" = $1 AND \"watchers\".\"watchable_type\" = $2 AND \"users\".\"status\" = $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "watchers.watchable_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users INNER JOIN watchers ON (users.id = watchers.user_id) WHERE ( ( watchers.watchable_id = ? and watchers.watchable_type = ? ) and users.status = ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN watchers_new ON (users.id = watchers_new.user_id) WHERE ( ( watchers_new.watchable_id = ? and watchers_new.watchable_type_int = ? ) and users.status = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"id\" IN ($2, $3) ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.id in ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.id in ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 20 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND LOWER(\"users\".\"login\") = LOWER($3) LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE ( users.type in ? and users.login = ? ) LIMIT 34;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE ( users_new.type_int in ? and users_new.login = ? ) LIMIT 34;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" INNER JOIN \"watchers\" ON \"users\".\"id\" = \"watchers\".\"user_id\" WHERE \"watchers\".\"watchable_id\" = $1 AND \"watchers\".\"watchable_type\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users INNER JOIN watchers ON (users.id = watchers.user_id) WHERE ( watchers.watchable_id = ? and watchers.watchable_type = ? );",
            "after": "SELECT ( users.* ) FROM users INNER JOIN watchers_new ON (users.id = watchers_new.user_id) WHERE ( watchers_new.watchable_id = ? and watchers_new.watchable_type_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 32 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"custom_values\" INNER JOIN \"custom_fields\" ON \"custom_fields\".\"id\" = \"custom_values\".\"custom_field_id\" WHERE \"custom_values\".\"value\" = $1 AND \"custom_fields\".\"field_format\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.field_format",
            "custom_values.value"
        ],
        "setup_query": [
            "SELECT custom_fields.field_format FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_values.value FROM custom_values ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.field_format": []
        },
        "experiment_query": {
            "before": "SELECT custom_values.id, 1 FROM custom_values INNER JOIN custom_fields ON (custom_fields.id = custom_values.custom_field_id) WHERE ( custom_values.value = ? and custom_fields.field_format = ? ) LIMIT 59;",
            "after": "SELECT custom_values.id, 1 FROM custom_values INNER JOIN custom_fields_new ON (custom_fields_new.id = custom_values.custom_field_id) WHERE ( custom_values.value = ? and custom_fields_new.field_format_int = ? ) LIMIT 59;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 2 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 11 AND projects.rgt > 12 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 11 AND projects.rgt < 12 AND versions.sharing = 'hierarchy')))) AND (LOWER(versions.name) = LOWER('alpha')) ORDER BY \"versions\".\"id\" ASC LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.name = 'alpha' ) ORDER BY versions.id ASC LIMIT 78;",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.name = 'alpha' ) ORDER BY versions_new.id ASC LIMIT 78;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 24 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 24 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 48 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" = $1 ORDER BY id LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type = ? LIMIT 82;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int = ? LIMIT 82;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" DESC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.active = ? ) ORDER BY enumerations.position DESC LIMIT 29;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.active = ? ) ORDER BY enumerations_new.position DESC LIMIT 29;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 27 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"id\" = $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.id = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.id = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"is_default\" = $2 ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.is_default",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.is_default FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.is_default = ? ) ORDER BY enumerations.position ASC LIMIT 84;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.is_default = ? ) ORDER BY enumerations_new.position ASC LIMIT 84;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 1)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"active\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( enumerations.type = ? and enumerations.active = ? ) LIMIT 30;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.active = ? ) LIMIT 30;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('r@mycompanyname.com'))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 54 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 20 AND versions.sharing = 'tree') OR (projects.lft < 16 AND projects.rgt > 17 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 16 AND projects.rgt < 17 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 20 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 16 and projects.rgt > 17 ) and versions.sharing in ? ) ) or ( ( projects.lft > 16 and projects.rgt < 17 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 79;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 20 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 16 and projects.rgt > 17 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 16 and projects.rgt < 17 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 79;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY \"journals\".\"id\" DESC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? ) ORDER BY journals.id DESC LIMIT 78;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) ORDER BY journals_new.id DESC LIMIT 78;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND LOWER(\"users\".\"login\") = LOWER($3) AND \"users\".\"id\" != $4 LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE ( ( users.type in ? and users.login = ? ) and users.id != ? ) LIMIT 50;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE ( ( users_new.type_int in ? and users_new.login = ? ) and users_new.id != ? ) LIMIT 50;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 42 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 91;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 91;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 29 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 29 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"queries\".* FROM \"queries\" WHERE \"queries\".\"type\" = $1 AND \"queries\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "queries.id",
            "queries.type"
        ],
        "setup_query": [
            "SELECT queries.id FROM queries ORDER BY RANDOM() LIMIT 1;",
            "SELECT queries.type FROM queries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "queries.type": [
                "IssueQuery",
                "ProjectQuery",
                "TimeEntryQuery"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( queries.* ) FROM queries WHERE ( queries.type = ? and queries.id = ? ) LIMIT 91;",
            "after": "SELECT ( queries_new.* ) FROM queries_new WHERE ( queries_new.type_int = ? and queries_new.id = ? ) LIMIT 91;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY id DESC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? ) ORDER BY journals.id DESC LIMIT 99;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) ORDER BY journals_new.id DESC LIMIT 99;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (users.status <> 0) AND \"users\".\"status\" = $3 ORDER BY \"users\".\"id\" ASC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status != 0 ) and users.status = ? ) ORDER BY users.id ASC LIMIT 67;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.status != 0 ) and users_new.status = ? ) ORDER BY users_new.id ASC LIMIT 67;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 65 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 65 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"id\" = $2 ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.id = ? ) ORDER BY enumerations.position ASC LIMIT 52;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.id = ? ) ORDER BY enumerations_new.position ASC LIMIT 52;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '29f6e57f5704082c88aa01e8c4ab8fe6f02870ca') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '29f6e57f5704082c88aa01e8c4ab8fe6f02870ca' ) LIMIT 81;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = '29f6e57f5704082c88aa01e8c4ab8fe6f02870ca' ) LIMIT 81;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 2)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"status\" = $1 AND \"users\".\"status\" = $2 AND \"users\".\"type\" IN ($3, $4) AND \"users\".\"id\" IN ($5, $6, $7)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( ( users.status = ? and users.status = ? ) and users.type in ? ) and users.id in ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( ( users_new.status = ? and users_new.status = ? ) and users_new.type_int in ? ) and users_new.id in ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 5 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 2 AND projects.rgt > 5 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 2 AND projects.rgt < 5 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 5 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 2 AND projects.rgt > 5 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 2 AND projects.rgt < 5 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.status = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"commented_id\" = $1 AND \"comments\".\"commented_type\" = $2 ORDER BY created_on",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "comments.commented_id",
            "comments.commented_type"
        ],
        "setup_query": [
            "SELECT comments.commented_id FROM comments ORDER BY RANDOM() LIMIT 1;",
            "SELECT comments.commented_type FROM comments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "comments.commented_type": [
                "News"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( comments.* ) FROM comments WHERE ( comments.commented_id = ? and comments.commented_type = ? );",
            "after": "SELECT ( comments_new.* ) FROM comments_new WHERE ( comments_new.commented_id = ? and comments_new.commented_type_int = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"parent_id\" = $2 AND \"enumerations\".\"project_id\" = $3 ORDER BY \"enumerations\".\"position\" ASC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.parent_id",
            "enumerations.type",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.parent_id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and enumerations.parent_id = ? ) and enumerations.project_id = ? ) ORDER BY enumerations.position ASC LIMIT 22;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and enumerations_new.parent_id = ? ) and enumerations_new.project_id = ? ) ORDER BY enumerations_new.position ASC LIMIT 22;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'edavis') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'edavis' ) LIMIT 26;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'edavis' ) LIMIT 26;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('jdoe@example.net')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 88;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 88;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"status\" = $1 AND (members.project_id = 1) AND \"users\".\"status\" = $2 AND \"users\".\"type\" IN ($3, $4) LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "users.type"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( ( users.status = ? and members.project_id = 3 ) and users.status = ? ) and users.type in ? ) LIMIT 68;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( ( users_new.status = ? and members.project_id = 3 ) and users_new.status = ? ) and users_new.type_int in ? ) LIMIT 68;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 8 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"visible\" = $2 ORDER BY \"custom_fields\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.visible"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.visible FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.visible = ? ) ORDER BY custom_fields.position ASC;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.visible = ? ) ORDER BY custom_fields_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"queries\".* FROM \"queries\" WHERE \"queries\".\"type\" = $1 ORDER BY id DESC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "queries.type"
        ],
        "setup_query": [
            "SELECT queries.type FROM queries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "queries.type": [
                "IssueQuery",
                "ProjectQuery",
                "TimeEntryQuery"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( queries.* ) FROM queries WHERE queries.type = ? ORDER BY queries.id DESC LIMIT 91;",
            "after": "SELECT ( queries_new.* ) FROM queries_new WHERE queries_new.type_int = ? ORDER BY queries_new.id DESC LIMIT 91;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 AND (id = 9 OR parent_id = 9) ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and ( enumerations.id = 3 or enumerations.parent_id = 3 ) ) ORDER BY enumerations.position ASC LIMIT 64;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and ( enumerations_new.id = 3 or enumerations_new.parent_id = 3 ) ) ORDER BY enumerations_new.position ASC LIMIT 64;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 12 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 29 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 9 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 9 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 6 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 3 AND projects.rgt > 4 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 3 AND projects.rgt < 4 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 3 and projects.rgt > 4 ) and versions.sharing in ? ) ) or ( ( projects.lft > 3 and projects.rgt < 4 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 79;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 3 and projects.rgt > 4 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 3 and projects.rgt < 4 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 79;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 3 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 9 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 10 AND projects.rgt > 11 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 10 AND projects.rgt < 11 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 9 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 10 and projects.rgt > 11 ) and versions.sharing in ? ) ) or ( ( projects.lft > 10 and projects.rgt < 11 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 68;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 9 and projects.rgt <= 12 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 10 and projects.rgt > 11 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 10 and projects.rgt < 11 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 68;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY \"journals\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? ) ORDER BY journals.id ASC LIMIT 85;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) ORDER BY journals_new.id ASC LIMIT 85;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 40 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 44 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 44 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND (LOWER(users.lastname) = LOWER('Group 33')) ORDER BY \"users\".\"id\" ASC LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.lastname = 'Group 33' ) ORDER BY users.id ASC LIMIT 74;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.lastname = 'Group 33' ) ORDER BY users_new.id ASC LIMIT 74;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 21 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 23;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 23;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY journals.id ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? ) ORDER BY journals.id ASC;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) ORDER BY journals_new.id ASC;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"position_name\" = $2 ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.position_name"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.position_name FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.position_name = ? ) ORDER BY enumerations.position ASC LIMIT 73;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.position_name = ? ) ORDER BY enumerations_new.position ASC LIMIT 73;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 5 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 2 AND projects.rgt > 5 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 2 AND projects.rgt < 5 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 25;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 25;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"user_id\" = $1 AND \"watchers\".\"watchable_type\" = $2 AND \"watchers\".\"watchable_id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.user_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.user_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( ( watchers.user_id = ? and watchers.watchable_type = ? ) and watchers.watchable_id = ? ) LIMIT 99;",
            "after": "SELECT watchers_new.id, 1 FROM watchers_new WHERE ( ( watchers_new.user_id = ? and watchers_new.watchable_type_int = ? ) and watchers_new.watchable_id = ? ) LIMIT 99;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 49 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 56;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 56;"
        }
    },
    {
        "src": "SELECT \"queries\".* FROM \"queries\" WHERE \"queries\".\"type\" = $1 AND (\"queries\".\"project_id\" IS NULL OR \"queries\".\"project_id\" = $2) AND \"queries\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "queries.project_id",
            "queries.type",
            "queries.id"
        ],
        "setup_query": [
            "SELECT queries.project_id FROM queries ORDER BY RANDOM() LIMIT 1;",
            "SELECT queries.type FROM queries ORDER BY RANDOM() LIMIT 1;",
            "SELECT queries.id FROM queries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "queries.type": [
                "IssueQuery",
                "ProjectQuery",
                "TimeEntryQuery"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( queries.* ) FROM queries WHERE ( ( queries.type = ? and ( queries.project_id IS NULL or queries.project_id = ? ) ) and queries.id = ? ) LIMIT 3;",
            "after": "SELECT ( queries_new.* ) FROM queries_new WHERE ( ( queries_new.type_int = ? and ( queries_new.project_id IS NULL or queries_new.project_id = ? ) ) and queries_new.id = ? ) LIMIT 3;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 38 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 27;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 27;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"name\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.name",
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.name FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.name = ? ) LIMIT 29;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.name = ? ) LIMIT 29;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.id = ? ) LIMIT 6;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.id = ? ) LIMIT 6;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 42 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 42 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('jsmith@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 25;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 25;"
        }
    },
    {
        "src": "SELECT \"settings\".* FROM \"settings\" WHERE \"settings\".\"name\" = $1 ORDER BY \"settings\".\"id\" DESC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "settings.name"
        ],
        "setup_query": [
            "SELECT settings.name FROM settings ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "settings.name": []
        },
        "experiment_query": {
            "before": "SELECT ( settings.* ) FROM settings WHERE settings.name = ? ORDER BY settings.id DESC LIMIT 69;",
            "after": "SELECT ( settings_new.* ) FROM settings_new WHERE settings_new.name_int = ? ORDER BY settings_new.id DESC LIMIT 69;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 21) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 36;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 36;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 57;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 57;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"name\" = $1 AND \"enumerations\".\"type\" = $2 AND \"enumerations\".\"project_id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.name",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( enumerations.name = ? and enumerations.type = ? ) and enumerations.project_id = ? ) LIMIT 35;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( enumerations_new.name = ? and enumerations_new.type_int = ? ) and enumerations_new.project_id = ? ) LIMIT 35;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 2) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"sharing\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.sharing = ? ) LIMIT 5;",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.sharing_int = ? ) LIMIT 5;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('redmine@somenet.foo','dlopper@somenet.foo'))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 57 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 57 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 16 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 20 AND versions.sharing = 'tree') OR (projects.lft < 16 AND projects.rgt > 17 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 16 AND projects.rgt < 17 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 20 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 16 and projects.rgt > 17 ) and versions.sharing in ? ) ) or ( ( projects.lft > 16 and projects.rgt < 17 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 100;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 20 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 16 and projects.rgt > 17 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 16 and projects.rgt < 17 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 100;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".\"name\" FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 ORDER BY \"custom_fields\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT custom_fields.id, custom_fields.name FROM custom_fields WHERE custom_fields.type = ? ORDER BY custom_fields.position ASC;",
            "after": "SELECT custom_fields_new.id, custom_fields_new.name FROM custom_fields_new WHERE custom_fields_new.type_int = ? ORDER BY custom_fields_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 19) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 77;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 77;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 2 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 11 AND projects.rgt > 12 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 11 AND projects.rgt < 12 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"id\" IN ($3, $4)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.id in ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.id in ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 26 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 43;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 43;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 2 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 11 AND projects.rgt > 12 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 11 AND projects.rgt < 12 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 4;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 4;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 13) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 6;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 6;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND \"users\".\"type\" = $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.type = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.type_int = ? );"
        }
    },
    {
        "src": "SELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"commented_id\" = $1 AND \"comments\".\"commented_type\" = $2 AND \"comments\".\"id\" = $3 ORDER BY created_on LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "comments.commented_id",
            "comments.id",
            "comments.commented_type"
        ],
        "setup_query": [
            "SELECT comments.commented_id FROM comments ORDER BY RANDOM() LIMIT 1;",
            "SELECT comments.id FROM comments ORDER BY RANDOM() LIMIT 1;",
            "SELECT comments.commented_type FROM comments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "comments.commented_type": [
                "News"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( comments.* ) FROM comments WHERE ( ( comments.commented_id = ? and comments.commented_type = ? ) and comments.id = ? ) LIMIT 56;",
            "after": "SELECT ( comments_new.* ) FROM comments_new WHERE ( ( comments_new.commented_id = ? and comments_new.commented_type_int = ? ) and comments_new.id = ? ) LIMIT 56;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'unnamed') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'unnamed' ) LIMIT 26;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'unnamed' ) LIMIT 26;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" = $2 AND \"enumerations\".\"name\" = $3 ORDER BY \"enumerations\".\"position\" ASC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.name",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and enumerations.project_id = ? ) and enumerations.name = ? ) ORDER BY enumerations.position ASC LIMIT 88;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and enumerations_new.project_id = ? ) and enumerations_new.name = ? ) ORDER BY enumerations_new.position ASC LIMIT 88;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (LOWER(enumerations.name) = LOWER('High')) ORDER BY \"enumerations\".\"position\" ASC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.name = 'High' ) ORDER BY enumerations.position ASC LIMIT 70;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.name = 'High' ) ORDER BY enumerations_new.position ASC LIMIT 70;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 5 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 2 AND projects.rgt > 5 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 2 AND projects.rgt < 5 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? ) LIMIT 45;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? ) LIMIT 45;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 5 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 2 AND projects.rgt > 5 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 2 AND projects.rgt < 5 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? ) LIMIT 45;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? ) LIMIT 45;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (salt IS NULL OR salt = '') ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and ( users.salt IS NULL or users.salt = '' ) ) ORDER BY users.id ASC LIMIT 30;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and ( users_new.salt IS NULL or users_new.salt = '' ) ) ORDER BY users_new.id ASC LIMIT 30;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 39;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 39;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"status\" = $1 AND \"users\".\"status\" = $2 AND \"users\".\"type\" IN ($3, $4) AND \"users\".\"id\" IN ($5, $6)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.status",
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( ( users.status = ? and users.status = ? ) and users.type in ? ) and users.id in ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( ( users_new.status = ? and users_new.status = ? ) and users_new.type_int in ? ) and users_new.id in ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" WHERE \"versions\".\"status\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions WHERE versions.status = ? LIMIT 23;",
            "after": "SELECT ( versions_new.* ) FROM versions_new WHERE versions_new.status_int = ? LIMIT 23;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT custom_fields.id, 1 FROM custom_fields WHERE custom_fields.type = ? LIMIT 26;",
            "after": "SELECT custom_fields_new.id, 1 FROM custom_fields_new WHERE custom_fields_new.type_int = ? LIMIT 26;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 8 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 8 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 60 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 60 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 11) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 28;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 28;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ?;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ?;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ?;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ?;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"identity_url\" = $3 ORDER BY \"users\".\"id\" ASC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.identity_url"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.identity_url FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.identity_url = ? ) ORDER BY users.id ASC LIMIT 1;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.identity_url = ? ) ORDER BY users_new.id ASC LIMIT 1;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 10 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 10 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND (LOWER(users.lastname) = LOWER('Group 35')) ORDER BY \"users\".\"id\" ASC LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.lastname = 'Group 35' ) ORDER BY users.id ASC LIMIT 72;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.lastname = 'Group 35' ) ORDER BY users_new.id ASC LIMIT 72;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) ORDER BY id DESC LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ? ORDER BY users.id DESC LIMIT 88;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ? ORDER BY users_new.id DESC LIMIT 88;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('redmine@somenet.foo'))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and email_addresses.address in ? );"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 AND (journals.id > 1) ORDER BY journals.id ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( ( journals.journalized_id = ? and journals.journalized_type = ? ) and journals.id > 3 ) ORDER BY journals.id ASC;",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? ) and journals_new.id > 3 ) ORDER BY journals_new.id ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 25 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 3 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 6 AND projects.rgt > 7 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 6 AND projects.rgt < 7 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions.sharing in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('john.doe@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 98;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 98;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (users.status <> 0) AND \"users\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status != 0 ) and users.id = ? ) LIMIT 67;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.status != 0 ) and users_new.id = ? ) LIMIT 67;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 26) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 48;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 48;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 56 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 24 AND versions.sharing = 'tree') OR (projects.lft < 18 AND projects.rgt > 19 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 18 AND projects.rgt < 19 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 24 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 18 and projects.rgt > 19 ) and versions.sharing in ? ) ) or ( ( projects.lft > 18 and projects.rgt < 19 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 22;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 24 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 18 and projects.rgt > 19 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 18 and projects.rgt < 19 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 22;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 75 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 75 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 21) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND (LOWER(users.lastname) = LOWER('Group 34')) ORDER BY \"users\".\"id\" ASC LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.lastname = 'Group 34' ) ORDER BY users.id ASC LIMIT 56;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.lastname = 'Group 34' ) ORDER BY users_new.id ASC LIMIT 56;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 65 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 89;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 89;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 67 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 3;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 3;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@example.org')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 26;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 26;"
        }
    },
    {
        "src": "SELECT \"imports\".* FROM \"imports\" WHERE \"imports\".\"type\" = $1 AND \"imports\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "imports.id",
            "imports.type"
        ],
        "setup_query": [
            "SELECT imports.id FROM imports ORDER BY RANDOM() LIMIT 1;",
            "SELECT imports.type FROM imports ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "imports.type": [
                "IssueImport",
                "TimeEntryImport",
                "UserImport"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( imports.* ) FROM imports WHERE ( imports.type = ? and imports.id = ? ) LIMIT 32;",
            "after": "SELECT ( imports_new.* ) FROM imports_new WHERE ( imports_new.type_int = ? and imports_new.id = ? ) LIMIT 32;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 1) LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 ) LIMIT 45;",
            "after": "SELECT users_new.id, 1 FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 ) LIMIT 45;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 32 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 32 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 58 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"visible\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.visible"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.visible FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.visible = ? );",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.visible = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND (LOWER(users.lastname) = LOWER('Group 36')) ORDER BY \"users\".\"id\" ASC LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.lastname = 'Group 36' ) ORDER BY users.id ASC LIMIT 96;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.lastname = 'Group 36' ) ORDER BY users_new.id ASC LIMIT 96;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('invalid@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 68;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 68;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND \"users\".\"type\" = $5 ORDER BY \"users\".\"type\" ASC, \"users\".\"lastname\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.type = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.type_int = ? );"
        }
    },
    {
        "src": "SELECT \"queries\".* FROM \"queries\" WHERE \"queries\".\"type\" = $1 AND \"queries\".\"project_id\" IS NULL AND \"queries\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "queries.id",
            "queries.type"
        ],
        "setup_query": [
            "SELECT queries.id FROM queries ORDER BY RANDOM() LIMIT 1;",
            "SELECT queries.type FROM queries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "queries.type": [
                "IssueQuery",
                "ProjectQuery",
                "TimeEntryQuery"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( queries.* ) FROM queries WHERE ( ( queries.type = ? and queries.project_id IS NULL ) and queries.id = ? ) LIMIT 45;",
            "after": "SELECT ( queries_new.* ) FROM queries_new WHERE ( ( queries_new.type_int = ? and queries_new.project_id IS NULL ) and queries_new.id = ? ) LIMIT 45;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND \"users\".\"admin\" = $4 AND (id <> 1) LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "users.admin"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.admin FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE ( ( ( users.type in ? and users.status = ? ) and users.admin = ? ) and users.id != 3 ) LIMIT 71;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE ( ( ( users_new.type_int in ? and users_new.status = ? ) and users_new.admin = ? ) and users_new.id != 3 ) LIMIT 71;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) ORDER BY \"users\".\"id\" DESC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ? ORDER BY users.id DESC LIMIT 76;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ? ORDER BY users_new.id DESC LIMIT 76;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND \"users\".\"login\" = $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.login = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and users_new.login = ? );"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? );",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"settings\" WHERE \"settings\".\"name\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "settings.name"
        ],
        "setup_query": [
            "SELECT settings.name FROM settings ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "settings.name": []
        },
        "experiment_query": {
            "before": "SELECT settings.id, 1 FROM settings WHERE settings.name = ? LIMIT 4;",
            "after": "SELECT settings_new.id, 1 FROM settings_new WHERE settings_new.name_int = ? LIMIT 4;"
        }
    },
    {
        "src": "SELECT \"queries\".* FROM \"queries\" WHERE \"queries\".\"type\" = $1 ORDER BY \"queries\".\"id\" DESC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "queries.type"
        ],
        "setup_query": [
            "SELECT queries.type FROM queries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "queries.type": [
                "IssueQuery",
                "ProjectQuery",
                "TimeEntryQuery"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( queries.* ) FROM queries WHERE queries.type = ? ORDER BY queries.id DESC LIMIT 2;",
            "after": "SELECT ( queries_new.* ) FROM queries_new WHERE queries_new.type_int = ? ORDER BY queries_new.id DESC LIMIT 2;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('anotheraddress@foo.bar')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 63;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 63;"
        }
    },
    {
        "src": "SELECT \"users\".\"id\" FROM \"users\" WHERE \"users\".\"type\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, users.id FROM users WHERE users.type = ? LIMIT 100;",
            "after": "SELECT users_new.id, users_new.id FROM users_new WHERE users_new.type_int = ? LIMIT 100;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 41 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"id\" IN ($2, $3)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.id"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.id FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.id in ? );",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.id in ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.project_id = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.project_id = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (id <> 4) ORDER BY \"enumerations\".\"position\" ASC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.id != 3 ) ORDER BY enumerations.position ASC LIMIT 55;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.id != 3 ) ORDER BY enumerations_new.position ASC LIMIT 55;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"login\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = ? ) LIMIT 75;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = ? ) LIMIT 75;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 42) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 3 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 6 AND projects.rgt > 7 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 6 AND projects.rgt < 7 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions.sharing in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 32;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 32;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 37 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 73;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 73;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.status = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 63) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 ORDER BY \"custom_fields\".\"id\" DESC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE custom_fields.type = ? ORDER BY custom_fields.id DESC LIMIT 11;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE custom_fields_new.type_int = ? ORDER BY custom_fields_new.id DESC LIMIT 11;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 3) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 17;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 17;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 41) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 50) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 49 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 49 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1 AND \"versions\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? ) and versions.id = ? ) LIMIT 45;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? ) and versions_new.id = ? ) LIMIT 45;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1 AND \"versions\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? ) and versions.id = ? ) LIMIT 45;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? ) and versions_new.id = ? ) LIMIT 45;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 23 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 12 AND projects.rgt > 13 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 12 AND projects.rgt < 13 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 12 and projects.rgt > 13 ) and versions.sharing in ? ) ) or ( ( projects.lft > 12 and projects.rgt < 13 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 56;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 12 and projects.rgt > 13 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 12 and projects.rgt < 13 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 56;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 21 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 21 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 6)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"watchable_type\" = $1 AND \"watchers\".\"watchable_id\" IN ($2, $3, $4) LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( watchers.watchable_type = ? and watchers.watchable_id in ? ) LIMIT 15;",
            "after": "SELECT watchers_new.id, 1 FROM watchers_new WHERE ( watchers_new.watchable_type_int = ? and watchers_new.watchable_id in ? ) LIMIT 15;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE custom_fields.type = ?;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE custom_fields_new.type_int = ?;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 52 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 52 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 8) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 64 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 15 AND projects.rgt <= 16 AND versions.sharing = 'tree') OR (projects.lft < 15 AND projects.rgt > 16 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 15 AND projects.rgt < 16 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 64 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 15 AND projects.rgt <= 16 AND versions.sharing = 'tree') OR (projects.lft < 15 AND projects.rgt > 16 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 15 AND projects.rgt < 16 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"members\".* FROM \"members\" INNER JOIN \"users\" ON \"users\".\"id\" = \"members\".\"user_id\" WHERE \"members\".\"project_id\" = $1 AND \"users\".\"type\" IN ($2, $3)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "members.project_id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT members.project_id FROM members ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( members.* ) FROM members INNER JOIN users ON (users.id = members.user_id) WHERE ( members.project_id = ? and users.type in ? );",
            "after": "SELECT ( members.* ) FROM members INNER JOIN users_new ON (users_new.id = members.user_id) WHERE ( members.project_id = ? and users_new.type_int in ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 39 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 44 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 44 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'admin') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'admin' ) LIMIT 16;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'admin' ) LIMIT 16;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND LOWER(\"users\".\"lastname\") = LOWER($5) AND \"users\".\"id\" != $6 LIMIT $7",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id",
            "users.lastname"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.lastname FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE ( ( users.type in ? and users.lastname = ? ) and users.id != ? ) LIMIT 59;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE ( ( users_new.type_int in ? and users_new.lastname = ? ) and users_new.id != ? ) LIMIT 59;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 55 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 22 AND versions.sharing = 'tree') OR (projects.lft < 17 AND projects.rgt > 18 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 17 AND projects.rgt < 18 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 22 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 17 and projects.rgt > 18 ) and versions.sharing in ? ) ) or ( ( projects.lft > 17 and projects.rgt < 18 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 54;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 22 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 17 and projects.rgt > 18 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 17 and projects.rgt < 18 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 54;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 AND (LOWER(enumerations.name) = LOWER('Design')) ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.name = 'Design' ) ORDER BY enumerations.position ASC LIMIT 21;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.name = 'Design' ) ORDER BY enumerations_new.position ASC LIMIT 21;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 14 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 8 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 8 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 8 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 8 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 8 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 8 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 45;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 8 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 8 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 8 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 45;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ? ORDER BY users.id ASC LIMIT 87;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ? ORDER BY users_new.id ASC LIMIT 87;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND LOWER(\"users\".\"lastname\") = LOWER($5) LIMIT $6",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.lastname"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.lastname FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE ( users.type in ? and users.lastname = ? ) LIMIT 4;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE ( users_new.type_int in ? and users_new.lastname = ? ) LIMIT 4;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 21 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 2) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 25 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 25 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 49 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 5 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 2 AND projects.rgt > 5 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 2 AND projects.rgt < 5 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions.sharing in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 63;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 2 and projects.rgt > 5 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 2 and projects.rgt < 5 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 63;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 36 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 36 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"visible\" = $2 AND \"custom_fields\".\"is_filter\" = $3 ORDER BY \"custom_fields\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.is_filter",
            "custom_fields.type",
            "custom_fields.visible"
        ],
        "setup_query": [
            "SELECT custom_fields.is_filter FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.visible FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( ( custom_fields.type = ? and custom_fields.visible = ? ) and custom_fields.is_filter = ? ) ORDER BY custom_fields.position ASC;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( ( custom_fields_new.type_int = ? and custom_fields_new.visible = ? ) and custom_fields_new.is_filter = ? ) ORDER BY custom_fields_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 40) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'foobar') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'foobar' ) LIMIT 20;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'foobar' ) LIMIT 20;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"visible\" = $2 AND \"custom_fields\".\"is_for_all\" = $3 ORDER BY \"custom_fields\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.is_for_all",
            "custom_fields.type",
            "custom_fields.visible"
        ],
        "setup_query": [
            "SELECT custom_fields.is_for_all FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.visible FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( ( custom_fields.type = ? and custom_fields.visible = ? ) and custom_fields.is_for_all = ? ) ORDER BY custom_fields.position ASC;",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( ( custom_fields_new.type_int = ? and custom_fields_new.visible = ? ) and custom_fields_new.is_for_all = ? ) ORDER BY custom_fields_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 2 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 11 AND projects.rgt > 12 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 11 AND projects.rgt < 12 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 2 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 11 AND projects.rgt <= 12 AND versions.sharing = 'tree') OR (projects.lft < 11 AND projects.rgt > 12 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 11 AND projects.rgt < 12 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 11 and projects.rgt <= 12 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 11 and projects.rgt > 12 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 11 and projects.rgt < 12 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 81 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 81 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"name\" = $2 ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.name"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.name = ? ) ORDER BY enumerations.position ASC LIMIT 64;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.name = ? ) ORDER BY enumerations_new.position ASC LIMIT 64;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" IS NULL LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( enumerations.type = ? and enumerations.project_id IS NULL ) LIMIT 72;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.project_id IS NULL ) LIMIT 72;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 9 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"watchable_type\" = $1 AND \"watchers\".\"watchable_id\" IN ($2, $3, $4) AND \"watchers\".\"user_id\" = $5 LIMIT $6",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.user_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.user_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( ( watchers.watchable_type = ? and watchers.watchable_id in ? ) and watchers.user_id = ? ) LIMIT 76;",
            "after": "SELECT watchers_new.id, 1 FROM watchers_new WHERE ( ( watchers_new.watchable_type_int = ? and watchers_new.watchable_id in ? ) and watchers_new.user_id = ? ) LIMIT 76;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 25 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 25 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"admin\" = $3 AND \"users\".\"status\" = $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.admin",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.admin FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.admin = ? ) and users.status = ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.admin = ? ) and users_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 ORDER BY \"enumerations\".\"position\" ASC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE enumerations.type = ? ORDER BY enumerations.position ASC LIMIT 6;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE enumerations_new.type_int = ? ORDER BY enumerations_new.position ASC LIMIT 6;"
        }
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY \"journals\".\"created_on\" ASC, \"journals\".\"id\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                "Issue"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? );",
            "after": "SELECT ( journals_new.* ) FROM journals_new WHERE ( journals_new.journalized_id = ? and journals_new.journalized_type_int = ? );"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'daf07a510db673fd37516204133ae6db63a03b62') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'daf07a510db673fd37516204133ae6db63a03b62' ) LIMIT 63;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = 'daf07a510db673fd37516204133ae6db63a03b62' ) LIMIT 63;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 50 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 50 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 38 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 38 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE enumerations.type = ? ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE enumerations_new.type_int = ? ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (users.status <> 0) AND \"users\".\"status\" = $3 ORDER BY login ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status != 0 ) and users.status = ? ) ORDER BY users.login ASC;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.status != 0 ) and users_new.status = ? ) ORDER BY users_new.login ASC;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"identity_url\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.identity_url"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.identity_url FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.identity_url = ? ) LIMIT 24;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.identity_url = ? ) LIMIT 24;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2, $3, $4) AND \"users\".\"id\" = $5 LIMIT $6",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.id = ? ) LIMIT 55;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.id = ? ) LIMIT 55;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 3 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 6 AND projects.rgt > 7 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 6 AND projects.rgt < 7 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions.sharing in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 3 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 6 AND projects.rgt > 7 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 6 AND projects.rgt < 7 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions.sharing in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 51 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 17;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 17;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" = $1 AND \"users\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type = ? and users.id = ? ) LIMIT 55;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int = ? and users_new.id = ? ) LIMIT 55;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"auth_source_id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.auth_source_id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.auth_source_id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, 1 FROM users WHERE ( users.type in ? and users.auth_source_id = ? ) LIMIT 36;",
            "after": "SELECT users_new.id, 1 FROM users_new WHERE ( users_new.type_int in ? and users_new.auth_source_id = ? ) LIMIT 36;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 7) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 34;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 34;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '?') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '?' ) LIMIT 4;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = '?' ) LIMIT 4;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 67 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@example.com')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 17;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 17;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 AND (LOWER(enumerations.name) = LOWER('QA')) ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.name = 'QA' ) ORDER BY enumerations.position ASC LIMIT 23;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.name = 'QA' ) ORDER BY enumerations_new.position ASC LIMIT 23;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? ) LIMIT 95;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? ) LIMIT 95;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? ) LIMIT 95;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? ) LIMIT 95;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 14 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 16 AND versions.sharing = 'tree') OR (projects.lft < 14 AND projects.rgt > 15 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 14 AND projects.rgt < 15 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 16 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 14 and projects.rgt > 15 ) and versions.sharing in ? ) ) or ( ( projects.lft > 14 and projects.rgt < 15 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 60;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 16 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 14 and projects.rgt > 15 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 14 and projects.rgt < 15 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 60;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"project_id\" = $2 AND \"enumerations\".\"id\" = $3 ORDER BY \"enumerations\".\"position\" ASC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.project_id"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.project_id FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and enumerations.project_id = ? ) and enumerations.id = ? ) ORDER BY enumerations.position ASC LIMIT 13;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and enumerations_new.project_id = ? ) and enumerations_new.id = ? ) ORDER BY enumerations_new.position ASC LIMIT 13;"
        }
    },
    {
        "src": "SELECT \"members\".* FROM \"members\" INNER JOIN \"users\" ON \"users\".\"id\" = \"members\".\"user_id\" WHERE \"members\".\"project_id\" = $1 AND \"users\".\"type\" = $2 AND \"users\".\"status\" = $3 AND \"users\".\"status\" = $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "members.project_id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT members.project_id FROM members ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( members.* ) FROM members INNER JOIN users ON (users.id = members.user_id) WHERE ( ( ( members.project_id = ? and users.type = ? ) and users.status = ? ) and users.status = ? );",
            "after": "SELECT ( members.* ) FROM members INNER JOIN users_new ON (users_new.id = members.user_id) WHERE ( ( ( members.project_id = ? and users_new.type_int = ? ) and users_new.status = ? ) and users_new.status = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"members\" ON \"members\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (members.project_id = 1) ORDER BY users.firstname, users.lastname, users.id",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN members ON (members.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and members.project_id = 3 );",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN members ON (members.user_id = users_new.id) WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and members.project_id = 3 );"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 1 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 10 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 10 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 10 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 10 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT \"auth_sources\".* FROM \"auth_sources\" WHERE \"auth_sources\".\"type\" = $1 AND \"auth_sources\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "auth_sources.id",
            "auth_sources.type"
        ],
        "setup_query": [
            "SELECT auth_sources.id FROM auth_sources ORDER BY RANDOM() LIMIT 1;",
            "SELECT auth_sources.type FROM auth_sources ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "auth_sources.type": [
                "AuthSourceLdap"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( auth_sources.* ) FROM auth_sources WHERE ( auth_sources.type = ? and auth_sources.id = ? ) LIMIT 91;",
            "after": "SELECT ( auth_sources_new.* ) FROM auth_sources_new WHERE ( auth_sources_new.type_int = ? and auth_sources_new.id = ? ) LIMIT 91;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 57 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 38 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 53 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 18 AND versions.sharing = 'tree') OR (projects.lft < 15 AND projects.rgt > 16 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 15 AND projects.rgt < 16 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 18 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 50;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 18 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 50;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND \"users\".\"id\" = $4 AND \"users\".\"type\" = $5 LIMIT $6",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( ( users.type in ? and users.status = ? ) and users.id = ? ) and users.type = ? ) LIMIT 50;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( ( users_new.type_int in ? and users_new.status = ? ) and users_new.id = ? ) and users_new.type_int = ? ) LIMIT 50;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 7 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 65;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 65;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 44) AND \"enumerations\".\"active\" = $2 ORDER BY \"enumerations\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) ORDER BY enumerations.position ASC;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) ORDER BY enumerations_new.position ASC;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"user_id\" = $1 AND \"watchers\".\"watchable_type\" = $2 AND \"watchers\".\"watchable_id\" IS NULL LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.user_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.user_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( ( watchers.user_id = ? and watchers.watchable_type = ? ) and watchers.watchable_id IS NULL ) LIMIT 62;",
            "after": "SELECT watchers_new.id, 1 FROM watchers_new WHERE ( ( watchers_new.user_id = ? and watchers_new.watchable_type_int = ? ) and watchers_new.watchable_id IS NULL ) LIMIT 62;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 60 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id",
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.id = ? ) LIMIT 51;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.id = ? ) LIMIT 51;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"position\" = $2 ORDER BY \"enumerations\".\"position\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.position",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.position FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( enumerations.type = ? and enumerations.position = ? ) ORDER BY enumerations.position ASC LIMIT 66;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.position = ? ) ORDER BY enumerations_new.position ASC LIMIT 66;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 63 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 8;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 8;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 7 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 7 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('newuser@foo.bar')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 33;",
            "after": "SELECT DISTINCT ( users_new.* ) FROM users_new INNER JOIN email_addresses ON (email_addresses.user_id = users_new.id) WHERE ( users_new.type_int in ? and email_addresses.address in ? ) ORDER BY users_new.id ASC LIMIT 33;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 11 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"auth_sources\".* FROM \"auth_sources\" WHERE \"auth_sources\".\"type\" = $1 ORDER BY id DESC LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "auth_sources.type"
        ],
        "setup_query": [
            "SELECT auth_sources.type FROM auth_sources ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "auth_sources.type": [
                "AuthSourceLdap"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( auth_sources.* ) FROM auth_sources WHERE auth_sources.type = ? ORDER BY auth_sources.id DESC LIMIT 88;",
            "after": "SELECT ( auth_sources_new.* ) FROM auth_sources_new WHERE auth_sources_new.type_int = ? ORDER BY auth_sources_new.id DESC LIMIT 88;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 64;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 64;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 15 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 77 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 2 AND versions.sharing = 'tree') OR (projects.lft < 1 AND projects.rgt > 2 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 1 AND projects.rgt < 2 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions.sharing in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 2 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 1 and projects.rgt > 2 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 1 and projects.rgt < 2 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 20) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) LIMIT 71;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) LIMIT 71;"
        }
    },
    {
        "src": "SELECT \"users\".\"id\" FROM \"users\" INNER JOIN \"watchers\" ON \"users\".\"id\" = \"watchers\".\"user_id\" WHERE \"watchers\".\"watchable_id\" = $1 AND \"watchers\".\"watchable_type\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT users.id, users.id FROM users INNER JOIN watchers ON (users.id = watchers.user_id) WHERE ( watchers.watchable_id = ? and watchers.watchable_type = ? );",
            "after": "SELECT users.id, users.id FROM users INNER JOIN watchers_new ON (users.id = watchers_new.user_id) WHERE ( watchers_new.watchable_id = ? and watchers_new.watchable_type_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"name\" = $1 AND \"enumerations\".\"type\" = $2 AND \"enumerations\".\"project_id\" IS NULL LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.name"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( enumerations.name = ? and enumerations.type = ? ) and enumerations.project_id IS NULL ) LIMIT 61;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( enumerations_new.name = ? and enumerations_new.type_int = ? ) and enumerations_new.project_id IS NULL ) LIMIT 61;"
        }
    },
    {
        "src": "SELECT \"enumerations\".* FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 AND \"enumerations\".\"id\" = $3 ORDER BY \"enumerations\".\"position\" ASC LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( enumerations.* ) FROM enumerations WHERE ( ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) and enumerations.id = ? ) ORDER BY enumerations.position ASC LIMIT 39;",
            "after": "SELECT ( enumerations_new.* ) FROM enumerations_new WHERE ( ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) and enumerations_new.id = ? ) ORDER BY enumerations_new.position ASC LIMIT 39;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"watchable_type\" = $1 AND \"watchers\".\"watchable_id\" IN ($2, $3) LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                "Board",
                "EnabledModule",
                "Issue",
                "Message",
                "News",
                "Wiki",
                "WikiPage"
            ]
        },
        "experiment_query": {
            "before": "SELECT watchers.id, 1 FROM watchers WHERE ( watchers.watchable_type = ? and watchers.watchable_id in ? ) LIMIT 87;",
            "after": "SELECT watchers_new.id, 1 FROM watchers_new WHERE ( watchers_new.watchable_type_int = ? and watchers_new.watchable_id in ? ) LIMIT 87;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 17 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT \"custom_fields\".\"id\" FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 ORDER BY \"custom_fields\".\"position\" ASC",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT custom_fields.id, custom_fields.id FROM custom_fields WHERE custom_fields.type = ? ORDER BY custom_fields.position ASC;",
            "after": "SELECT custom_fields_new.id, custom_fields_new.id FROM custom_fields_new WHERE custom_fields_new.type_int = ? ORDER BY custom_fields_new.position ASC;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 8 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 15 AND projects.rgt <= 16 AND versions.sharing = 'tree') OR (projects.lft < 15 AND projects.rgt > 16 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 15 AND projects.rgt < 16 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 8 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 15 AND projects.rgt <= 16 AND versions.sharing = 'tree') OR (projects.lft < 15 AND projects.rgt > 16 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 15 AND projects.rgt < 16 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 15 and projects.rgt <= 16 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 15 and projects.rgt > 16 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 15 and projects.rgt < 16 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND \"enumerations\".\"is_default\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.is_default",
            "enumerations.type"
        ],
        "setup_query": [
            "SELECT enumerations.is_default FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( enumerations.type = ? and enumerations.is_default = ? ) LIMIT 35;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( enumerations_new.type_int = ? and enumerations_new.is_default = ? ) LIMIT 35;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND \"users\".\"id\" = $4 LIMIT $5",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.status",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.id = ? ) LIMIT 86;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( ( users_new.type_int in ? and users_new.status = ? ) and users_new.id = ? ) LIMIT 86;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) ORDER BY id DESC LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE users.type in ? ORDER BY users.id DESC LIMIT 25;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE users_new.type_int in ? ORDER BY users_new.id DESC LIMIT 25;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) LIMIT 99;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( enumerations_new.type_int = ? and ( enumerations_new.project_id IS NULL or enumerations_new.project_id = 3 ) ) and enumerations_new.active = ? ) LIMIT 99;"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 16 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) and versions_new.status = ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 16 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy')))) AND \"versions\".\"status\" = $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing",
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                "open",
                "locked",
                "closed"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) ) and versions.status = ? );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing = 'hierarchy' ) ) ) ) and versions_new.status_int = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 3 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 1 AND projects.rgt <= 10 AND versions.sharing = 'tree') OR (projects.lft < 6 AND projects.rgt > 7 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 6 AND projects.rgt < 7 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions.sharing in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 28;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 1 and projects.rgt <= 10 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 6 and projects.rgt > 7 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 6 and projects.rgt < 7 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 28;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"id\" IN ($3, $4, $5)",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type",
            "users.id"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.id in ? );",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.id in ? );"
        }
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 45 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 14 AND versions.sharing = 'tree') OR (projects.lft < 13 AND projects.rgt > 14 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 13 AND projects.rgt < 14 AND versions.sharing = 'hierarchy'))))",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( versions.* ) FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions.sharing in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions.sharing = 'hierarchy' ) ) ) );",
            "after": "SELECT ( versions_new.* ) FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 14 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 13 and projects.rgt > 14 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 13 and projects.rgt < 14 ) and versions_new.sharing_int = 'hierarchy' ) ) ) );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"name\" = $1 AND \"enumerations\".\"id\" != $2 AND \"enumerations\".\"type\" = $3 AND \"enumerations\".\"project_id\" IS NULL LIMIT $4",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.name"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                "DocumentCategory",
                "IssuePriority",
                "TimeEntryActivity"
            ]
        },
        "experiment_query": {
            "before": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.name = ? and enumerations.id != ? ) and enumerations.type = ? ) and enumerations.project_id IS NULL ) LIMIT 61;",
            "after": "SELECT enumerations_new.id, 1 FROM enumerations_new WHERE ( ( ( enumerations_new.name = ? and enumerations_new.id != ? ) and enumerations_new.type_int = ? ) and enumerations_new.project_id IS NULL ) LIMIT 61;"
        }
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '?a?b?c?d?e test') LIMIT $3",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                "AnonymousUser"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '?a?b?c?d?e test' ) LIMIT 52;",
            "after": "SELECT ( users_new.* ) FROM users_new WHERE ( users_new.type_int in ? and users_new.login = '?a?b?c?d?e test' ) LIMIT 52;"
        }
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"id\" = $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.id"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.id FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                "DocumentCategoryCustomField",
                "DocumentCustomField",
                "GroupCustomField",
                "IssueCustomField",
                "IssuePriorityCustomField",
                "ProjectCustomField",
                "TimeEntryActivityCustomField",
                "TimeEntryCustomField",
                "UserCustomField",
                "VersionCustomField"
            ]
        },
        "experiment_query": {
            "before": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.id = ? );",
            "after": "SELECT ( custom_fields_new.* ) FROM custom_fields_new WHERE ( custom_fields_new.type_int = ? and custom_fields_new.id = ? );"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.status <> 9 AND versions.sharing = 'system') AND \"versions\".\"id\" = $1 LIMIT $2",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.id"
        ],
        "setup_query": [
            "SELECT versions.id FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( ( projects.status != 9 and versions.sharing = 'system' ) and versions.id = ? ) LIMIT 67;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( ( projects.status != 9 and versions_new.sharing_int = 'system' ) and versions_new.id = ? ) LIMIT 67;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 52 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 16 AND versions.sharing = 'tree') OR (projects.lft < 14 AND projects.rgt > 15 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 14 AND projects.rgt < 15 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "string_to_int",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                "none",
                "descendants",
                "hierarchy",
                "tree",
                "system"
            ]
        },
        "experiment_query": {
            "before": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 16 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 14 and projects.rgt > 15 ) and versions.sharing in ? ) ) or ( ( projects.lft > 14 and projects.rgt < 15 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 5;",
            "after": "SELECT versions_new.id, 1 FROM versions_new INNER JOIN projects ON (projects.id = versions_new.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions_new.sharing_int = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 16 ) and versions_new.sharing_int = 'tree' ) ) or ( ( projects.lft < 14 and projects.rgt > 15 ) and versions_new.sharing_int in ? ) ) or ( ( projects.lft > 14 and projects.rgt < 15 ) and versions_new.sharing_int = 'hierarchy' ) ) ) ) LIMIT 5;"
        }
    },
    {
        "src": "SELECT \"issue_statuses\".* FROM \"issue_statuses\" WHERE (default_done_ratio >= 0)",
        "rewrite_type": "numerical_remove_predicate",
        "setup_fields": [],
        "setup_query": [],
        "experiment_query": {
            "before": "SELECT ( issue_statuses.* ) FROM issue_statuses WHERE issue_statuses.default_done_ratio >= 0;",
            "after": "SELECT ( issue_statuses.* ) FROM issue_statuses WHERE issue_statuses.default_done_ratio >= 0;"
        }
    },
    {
        "src": "SELECT 1 AS one FROM \"repositories\" WHERE \"repositories\".\"identifier\" = $1 AND \"repositories\".\"id\" != $2 AND \"repositories\".\"project_id\" = $3 LIMIT $4",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "repositories.project_id",
            "repositories.identifier",
            "repositories.id"
        ],
        "setup_query": [
            "SELECT repositories.project_id FROM repositories ORDER BY RANDOM() LIMIT 1;",
            "SELECT repositories.identifier FROM repositories ORDER BY RANDOM() LIMIT 1;",
            "SELECT repositories.id FROM repositories ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "repositories.identifier": ""
        },
        "experiment_query": "SELECT repositories.id, 1 FROM repositories WHERE ( ( repositories.identifier = ? and repositories.id != ? ) and repositories.project_id = ? ) LIMIT 83;"
    },
    {
        "src": "SELECT \"email_addresses\".* FROM \"email_addresses\" WHERE \"email_addresses\".\"address\" = $1",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT ( email_addresses.* ) FROM email_addresses WHERE email_addresses.address = ?;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '1710ec44ca59418837e1aebc9cfd9b5137d9506d') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '1710ec44ca59418837e1aebc9cfd9b5137d9506d' ) LIMIT 67;"
    },
    {
        "src": "SELECT 1 AS one FROM \"wiki_pages\" WHERE LOWER(\"wiki_pages\".\"title\") = LOWER($1) AND \"wiki_pages\".\"wiki_id\" IS NULL LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.title"
        ],
        "setup_query": [
            "SELECT wiki_pages.title FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( wiki_pages.title = ? and wiki_pages.wiki_id IS NULL ) LIMIT 37;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('testuser@example.org'))",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('dlopper@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 55;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"login\" = $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = ? );"
    },
    {
        "src": "SELECT 1 AS one FROM \"email_addresses\" WHERE LOWER(\"email_addresses\".\"address\") = LOWER($1) LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT email_addresses.id, 1 FROM email_addresses WHERE email_addresses.address = ? LIMIT 64;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '4653f594ea9f52648876463d1bfe2e849916da5f') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '4653f594ea9f52648876463d1bfe2e849916da5f' ) LIMIT 74;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(login) = 'admin') LIMIT $4",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.status"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.login = 'admin' ) LIMIT 39;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'psmith') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'psmith' ) LIMIT 5;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'cool_user') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'cool_user' ) LIMIT 36;"
    },
    {
        "src": "SELECT 1 AS one FROM \"wiki_pages\" WHERE LOWER(\"wiki_pages\".\"title\") = LOWER($1) AND \"wiki_pages\".\"wiki_id\" = $2 LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.title",
            "wiki_pages.wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_pages.title FROM wiki_pages ORDER BY RANDOM() LIMIT 1;",
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( wiki_pages.title = ? and wiki_pages.wiki_id = ? ) LIMIT 86;"
    },
    {
        "src": "SELECT \"wiki_pages\".* FROM \"wiki_pages\" WHERE \"wiki_pages\".\"wiki_id\" = $1 AND (LOWER(wiki_pages.title) LIKE LOWER('%Page_with_an_inline_image%')) ORDER BY \"wiki_pages\".\"id\" DESC LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT ( wiki_pages.* ) FROM wiki_pages WHERE ( wiki_pages.wiki_id = ? and wiki_pages.title like '%Page_with_an_inline_image%' ) ORDER BY wiki_pages.id DESC LIMIT 48;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@bar.net')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 2;"
    },
    {
        "src": "SELECT \"projects\".* FROM \"projects\" WHERE \"projects\".\"identifier\" = $1 LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "projects.identifier"
        ],
        "setup_query": [
            "SELECT projects.identifier FROM projects ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "projects.identifier": ""
        },
        "experiment_query": "SELECT ( projects.* ) FROM projects WHERE projects.identifier = ? LIMIT 44;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'foo') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'foo' ) LIMIT 73;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'john') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'john' ) LIMIT 78;"
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND LOWER(\"users\".\"login\") = LOWER($3) LIMIT $4",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT users.id, 1 FROM users WHERE ( users.type in ? and users.login = ? ) LIMIT 34;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('r@mycompanyname.com'))",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
    },
    {
        "src": "SELECT 1 AS one FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND LOWER(\"users\".\"login\") = LOWER($3) AND \"users\".\"id\" != $4 LIMIT $5",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.id",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.id FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT users.id, 1 FROM users WHERE ( ( users.type in ? and users.login = ? ) and users.id != ? ) LIMIT 50;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '29f6e57f5704082c88aa01e8c4ab8fe6f02870ca') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '29f6e57f5704082c88aa01e8c4ab8fe6f02870ca' ) LIMIT 81;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'edavis') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'edavis' ) LIMIT 26;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('jdoe@example.net')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 88;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('jsmith@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 25;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('redmine@somenet.foo','dlopper@somenet.foo'))",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'unnamed') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'unnamed' ) LIMIT 26;"
    },
    {
        "src": "SELECT \"wiki_pages\".* FROM \"wiki_pages\" WHERE \"wiki_pages\".\"wiki_id\" = $1 AND (LOWER(wiki_pages.title) LIKE LOWER('%pAgE%')) ORDER BY \"wiki_pages\".\"id\" DESC LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT ( wiki_pages.* ) FROM wiki_pages WHERE ( wiki_pages.wiki_id = ? and wiki_pages.title like '%pAgE%' ) ORDER BY wiki_pages.id DESC LIMIT 30;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND (LOWER(email_addresses.address) IN ('redmine@somenet.foo'))",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.status",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( ( users.type in ? and users.status = ? ) and email_addresses.address in ? );"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('john.doe@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 98;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@example.org')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 26;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('invalid@somenet.foo')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 68;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"status\" = $3 AND \"users\".\"login\" = $4",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.status",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.status FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( ( users.type in ? and users.status = ? ) and users.login = ? );"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('anotheraddress@foo.bar')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 63;"
    },
    {
        "src": "SELECT \"wiki_pages\".* FROM \"wiki_pages\" WHERE \"wiki_pages\".\"wiki_id\" = $1 AND \"wiki_pages\".\"title\" = $2 LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.title",
            "wiki_pages.wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_pages.title FROM wiki_pages ORDER BY RANDOM() LIMIT 1;",
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT ( wiki_pages.* ) FROM wiki_pages WHERE ( wiki_pages.wiki_id = ? and wiki_pages.title = ? ) LIMIT 16;"
    },
    {
        "src": "SELECT 1 AS one FROM \"projects\" WHERE \"projects\".\"identifier\" = $1 LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "projects.identifier"
        ],
        "setup_query": [
            "SELECT projects.identifier FROM projects ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "projects.identifier": ""
        },
        "experiment_query": "SELECT projects.id, 1 FROM projects WHERE projects.identifier = ? LIMIT 73;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND \"users\".\"login\" = $3 LIMIT $4",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "users.login"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT users.login FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = ? ) LIMIT 75;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'admin') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'admin' ) LIMIT 16;"
    },
    {
        "src": "SELECT 1 AS one FROM \"email_addresses\" WHERE LOWER(\"email_addresses\".\"address\") = LOWER($1) AND \"email_addresses\".\"id\" != $2 LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "email_addresses.address",
            "email_addresses.id"
        ],
        "setup_query": [
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.id FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT email_addresses.id, 1 FROM email_addresses WHERE ( email_addresses.address = ? and email_addresses.id != ? ) LIMIT 39;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'foobar') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'foobar' ) LIMIT 20;"
    },
    {
        "src": "SELECT 1 AS one FROM \"wiki_pages\" WHERE \"wiki_pages\".\"title\" IS NULL AND \"wiki_pages\".\"wiki_id\" = $1 LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( wiki_pages.title IS NULL and wiki_pages.wiki_id = ? ) LIMIT 84;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = 'daf07a510db673fd37516204133ae6db63a03b62') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = 'daf07a510db673fd37516204133ae6db63a03b62' ) LIMIT 63;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '?') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '?' ) LIMIT 4;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('foo@example.com')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 17;"
    },
    {
        "src": "SELECT \"repositories\".* FROM \"repositories\" WHERE \"repositories\".\"project_id\" = $1 AND \"repositories\".\"identifier\" = $2 LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "repositories.identifier",
            "repositories.project_id"
        ],
        "setup_query": [
            "SELECT repositories.identifier FROM repositories ORDER BY RANDOM() LIMIT 1;",
            "SELECT repositories.project_id FROM repositories ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "repositories.identifier": ""
        },
        "experiment_query": "SELECT ( repositories.* ) FROM repositories WHERE ( repositories.project_id = ? and repositories.identifier = ? ) LIMIT 72;"
    },
    {
        "src": "SELECT DISTINCT \"users\".* FROM \"users\" INNER JOIN \"email_addresses\" ON \"email_addresses\".\"user_id\" = \"users\".\"id\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(email_addresses.address) IN ('newuser@foo.bar')) ORDER BY \"users\".\"id\" ASC LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type",
            "email_addresses.address"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": ""
        },
        "experiment_query": "SELECT DISTINCT ( users.* ) FROM users INNER JOIN email_addresses ON (email_addresses.user_id = users.id) WHERE ( users.type in ? and email_addresses.address in ? ) ORDER BY users.id ASC LIMIT 33;"
    },
    {
        "src": "SELECT 1 AS one FROM \"repositories\" WHERE \"repositories\".\"identifier\" = $1 AND \"repositories\".\"project_id\" = $2 LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "repositories.project_id",
            "repositories.identifier"
        ],
        "setup_query": [
            "SELECT repositories.project_id FROM repositories ORDER BY RANDOM() LIMIT 1;",
            "SELECT repositories.identifier FROM repositories ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "repositories.identifier": ""
        },
        "experiment_query": "SELECT repositories.id, 1 FROM repositories WHERE ( repositories.identifier = ? and repositories.project_id = ? ) LIMIT 16;"
    },
    {
        "src": "SELECT \"wiki_pages\".* FROM \"wiki_pages\" WHERE \"wiki_pages\".\"title\" = $1 LIMIT $2",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.title"
        ],
        "setup_query": [
            "SELECT wiki_pages.title FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT ( wiki_pages.* ) FROM wiki_pages WHERE wiki_pages.title = ? LIMIT 12;"
    },
    {
        "src": "SELECT 1 AS one FROM \"wiki_pages\" WHERE LOWER(\"wiki_pages\".\"title\") = LOWER($1) AND \"wiki_pages\".\"id\" != $2 AND \"wiki_pages\".\"wiki_id\" = $3 LIMIT $4",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "wiki_pages.title",
            "wiki_pages.wiki_id",
            "wiki_pages.id"
        ],
        "setup_query": [
            "SELECT wiki_pages.title FROM wiki_pages ORDER BY RANDOM() LIMIT 1;",
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;",
            "SELECT wiki_pages.id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": ""
        },
        "experiment_query": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( ( wiki_pages.title = ? and wiki_pages.id != ? ) and wiki_pages.wiki_id = ? ) LIMIT 55;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '?a?b?c?d?e test') LIMIT $3",
        "rewrite_type": "strprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": ""
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '?a?b?c?d?e test' ) LIMIT 52;"
    },
    {
        "src": "SELECT 1 AS one FROM \"versions\" INNER JOIN \"projects\" ON \"projects\".\"id\" = \"versions\".\"project_id\" WHERE (projects.id = 52 OR (projects.status <> 9 AND ( versions.sharing = 'system' OR (projects.lft >= 13 AND projects.rgt <= 16 AND versions.sharing = 'tree') OR (projects.lft < 14 AND projects.rgt > 15 AND versions.sharing IN ('hierarchy', 'descendants')) OR (projects.lft > 14 AND projects.rgt < 15 AND versions.sharing = 'hierarchy')))) LIMIT $1",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "versions.sharing"
        ],
        "setup_query": [
            "SELECT versions.sharing FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.sharing": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT versions.id, 1 FROM versions INNER JOIN projects ON (projects.id = versions.project_id) WHERE ( projects.id = 3 or ( projects.status != 9 and ( ( ( versions.sharing = 'system' or ( ( projects.lft >= 13 and projects.rgt <= 16 ) and versions.sharing = 'tree' ) ) or ( ( projects.lft < 14 and projects.rgt > 15 ) and versions.sharing in ? ) ) or ( ( projects.lft > 14 and projects.rgt < 15 ) and versions.sharing = 'hierarchy' ) ) ) ) LIMIT 5;"
    },
    {
        "src": "SELECT \"wiki_redirects\".* FROM \"wiki_redirects\" WHERE \"wiki_redirects\".\"wiki_id\" = $1 AND (LOWER(title) = LOWER('Page')) ORDER BY \"wiki_redirects\".\"id\" ASC LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "wiki_redirects.wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_redirects.wiki_id FROM wiki_redirects ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_redirects.title": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( wiki_redirects.* ) FROM wiki_redirects WHERE ( wiki_redirects.wiki_id = ? and wiki_redirects.title = 'Page' ) ORDER BY wiki_redirects.id ASC LIMIT 4;"
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = $1 AND \"custom_fields\".\"id\" = $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "custom_fields.type",
            "custom_fields.id"
        ],
        "setup_query": [
            "SELECT custom_fields.type FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_fields.id FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.type": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( custom_fields.* ) FROM custom_fields WHERE ( custom_fields.type = ? and custom_fields.id = ? );"
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"type\" = $1 AND (enumerations.project_id IS NULL OR enumerations.project_id = 1) AND \"enumerations\".\"active\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "enumerations.type",
            "enumerations.active"
        ],
        "setup_query": [
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.active FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( enumerations.type = ? and ( enumerations.project_id IS NULL or enumerations.project_id = 3 ) ) and enumerations.active = ? ) LIMIT 99;"
    },
    {
        "src": "SELECT \"tokens\".* FROM \"tokens\" WHERE \"tokens\".\"user_id\" = $1 AND \"tokens\".\"action\" = $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "tokens.user_id",
            "tokens.action"
        ],
        "setup_query": [
            "SELECT tokens.user_id FROM tokens ORDER BY RANDOM() LIMIT 1;",
            "SELECT tokens.action FROM tokens ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "tokens.action": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( tokens.* ) FROM tokens WHERE ( tokens.user_id = ? and tokens.action = ? );"
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"name\" = $1 AND \"enumerations\".\"id\" != $2 AND \"enumerations\".\"type\" = $3 AND \"enumerations\".\"project_id\" IS NULL LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.name"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.name": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.name = ? and enumerations.id != ? ) and enumerations.type = ? ) and enumerations.project_id IS NULL ) LIMIT 61;"
    },
    {
        "src": "SELECT 1 AS one FROM \"enumerations\" WHERE \"enumerations\".\"name\" = $1 AND \"enumerations\".\"id\" != $2 AND \"enumerations\".\"type\" = $3 AND \"enumerations\".\"project_id\" IS NULL LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "enumerations.id",
            "enumerations.type",
            "enumerations.name"
        ],
        "setup_query": [
            "SELECT enumerations.id FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.type FROM enumerations ORDER BY RANDOM() LIMIT 1;",
            "SELECT enumerations.name FROM enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enumerations.type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT enumerations.id, 1 FROM enumerations WHERE ( ( ( enumerations.name = ? and enumerations.id != ? ) and enumerations.type = ? ) and enumerations.project_id IS NULL ) LIMIT 61;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '?a?b?c?d?e test') LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '?a?b?c?d?e test' ) LIMIT 52;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '?a?b?c?d?e test') LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '?a?b?c?d?e test' ) LIMIT 52;"
    },
    {
        "src": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"type\" IN ($1, $2) AND (LOWER(login) = '?a?b?c?d?e test') LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "users.type"
        ],
        "setup_query": [
            "SELECT users.type FROM users ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "users.login": [
                null,
                60.0
            ]
        },
        "experiment_query": "SELECT ( users.* ) FROM users WHERE ( users.type in ? and users.login = '?a?b?c?d?e test' ) LIMIT 52;"
    },
    {
        "src": "SELECT \"issue_relations\".* FROM \"issue_relations\" WHERE \"issue_relations\".\"issue_from_id\" = $1 AND \"issue_relations\".\"issue_to_id\" = $2 AND \"issue_relations\".\"delay\" = $3 AND \"issue_relations\".\"relation_type\" = $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "issue_relations.delay",
            "issue_relations.issue_to_id",
            "issue_relations.relation_type",
            "issue_relations.issue_from_id"
        ],
        "setup_query": [
            "SELECT issue_relations.delay FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_to_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.relation_type FROM issue_relations ORDER BY RANDOM() LIMIT 1;",
            "SELECT issue_relations.issue_from_id FROM issue_relations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "issue_relations.relation_type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( issue_relations.* ) FROM issue_relations WHERE ( ( ( issue_relations.issue_from_id = ? and issue_relations.issue_to_id = ? ) and issue_relations.delay = ? ) and issue_relations.relation_type = ? );"
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE \"attachments\".\"container_type\" = $1 AND \"attachments\".\"container_id\" IN ($2, $3, $4, $5, $6, $7, $8) ORDER BY attachments.created_on ASC, attachments.id ASC",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "attachments.container_type",
            "attachments.container_id"
        ],
        "setup_query": [
            "SELECT attachments.container_type FROM attachments ORDER BY RANDOM() LIMIT 1;",
            "SELECT attachments.container_id FROM attachments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "attachments.container_type": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.container_type = ? and attachments.container_id in ? );"
    },
    {
        "src": "SELECT \"journal_details\".* FROM \"journal_details\" WHERE \"journal_details\".\"journal_id\" = $1 AND \"journal_details\".\"prop_key\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "journal_details.journal_id",
            "journal_details.prop_key"
        ],
        "setup_query": [
            "SELECT journal_details.journal_id FROM journal_details ORDER BY RANDOM() LIMIT 1;",
            "SELECT journal_details.prop_key FROM journal_details ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journal_details.prop_key": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( journal_details.* ) FROM journal_details WHERE ( journal_details.journal_id = ? and journal_details.prop_key = ? ) LIMIT 55;"
    },
    {
        "src": "SELECT 1 AS one FROM \"repositories\" WHERE \"repositories\".\"identifier\" = $1 AND \"repositories\".\"project_id\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "repositories.project_id",
            "repositories.identifier"
        ],
        "setup_query": [
            "SELECT repositories.project_id FROM repositories ORDER BY RANDOM() LIMIT 1;",
            "SELECT repositories.identifier FROM repositories ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "repositories.identifier": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT repositories.id, 1 FROM repositories WHERE ( repositories.identifier = ? and repositories.project_id = ? ) LIMIT 16;"
    },
    {
        "src": "SELECT \"issue_categories\".* FROM \"issue_categories\" WHERE \"issue_categories\".\"project_id\" = $1 AND (LOWER(issue_categories.name) = LOWER('Printing')) ORDER BY \"issue_categories\".\"name\" ASC LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "issue_categories.project_id"
        ],
        "setup_query": [
            "SELECT issue_categories.project_id FROM issue_categories ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "issue_categories.name": [
                null,
                60.0
            ]
        },
        "experiment_query": "SELECT ( issue_categories.* ) FROM issue_categories WHERE ( issue_categories.project_id = ? and issue_categories.name = 'Printing' ) ORDER BY issue_categories.name ASC LIMIT 31;"
    },
    {
        "src": "SELECT 1 AS one FROM \"email_addresses\" WHERE LOWER(\"email_addresses\".\"address\") = LOWER($1) AND \"email_addresses\".\"id\" != $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "email_addresses.address",
            "email_addresses.id"
        ],
        "setup_query": [
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.id FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT email_addresses.id, 1 FROM email_addresses WHERE ( email_addresses.address = ? and email_addresses.id != ? ) LIMIT 39;"
    },
    {
        "src": "SELECT 1 AS one FROM \"email_addresses\" WHERE LOWER(\"email_addresses\".\"address\") = LOWER($1) AND \"email_addresses\".\"id\" != $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "email_addresses.address",
            "email_addresses.id"
        ],
        "setup_query": [
            "SELECT email_addresses.address FROM email_addresses ORDER BY RANDOM() LIMIT 1;",
            "SELECT email_addresses.id FROM email_addresses ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "email_addresses.address": [
                null,
                0.0
            ]
        },
        "experiment_query": "SELECT email_addresses.id, 1 FROM email_addresses WHERE ( email_addresses.address = ? and email_addresses.id != ? ) LIMIT 39;"
    },
    {
        "src": "SELECT 1 AS one FROM \"wiki_pages\" WHERE LOWER(\"wiki_pages\".\"title\") = LOWER($1) AND \"wiki_pages\".\"id\" != $2 AND \"wiki_pages\".\"wiki_id\" = $3 LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "wiki_pages.title",
            "wiki_pages.wiki_id",
            "wiki_pages.id"
        ],
        "setup_query": [
            "SELECT wiki_pages.title FROM wiki_pages ORDER BY RANDOM() LIMIT 1;",
            "SELECT wiki_pages.wiki_id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;",
            "SELECT wiki_pages.id FROM wiki_pages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_pages.title": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT wiki_pages.id, 1 FROM wiki_pages WHERE ( ( wiki_pages.title = ? and wiki_pages.id != ? ) and wiki_pages.wiki_id = ? ) LIMIT 55;"
    },
    {
        "src": "SELECT \"custom_field_enumerations\".* FROM \"custom_field_enumerations\" WHERE \"custom_field_enumerations\".\"custom_field_id\" = $1 AND (LOWER(name) LIKE LOWER('foo, bar')) ORDER BY \"custom_field_enumerations\".\"position\" ASC LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "custom_field_enumerations.custom_field_id"
        ],
        "setup_query": [
            "SELECT custom_field_enumerations.custom_field_id FROM custom_field_enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_field_enumerations.name": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( custom_field_enumerations.* ) FROM custom_field_enumerations WHERE ( custom_field_enumerations.custom_field_id = ? and custom_field_enumerations.name like 'foo, bar' ) ORDER BY custom_field_enumerations.position ASC LIMIT 73;"
    },
    {
        "src": "SELECT \"custom_field_enumerations\".* FROM \"custom_field_enumerations\" WHERE \"custom_field_enumerations\".\"custom_field_id\" = $1 AND (LOWER(name) LIKE LOWER('foo, bar')) ORDER BY \"custom_field_enumerations\".\"position\" ASC LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "custom_field_enumerations.custom_field_id"
        ],
        "setup_query": [
            "SELECT custom_field_enumerations.custom_field_id FROM custom_field_enumerations ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_field_enumerations.name": [
                null,
                60.0
            ]
        },
        "experiment_query": "SELECT ( custom_field_enumerations.* ) FROM custom_field_enumerations WHERE ( custom_field_enumerations.custom_field_id = ? and custom_field_enumerations.name like 'foo, bar' ) ORDER BY custom_field_enumerations.position ASC LIMIT 73;"
    },
    {
        "src": "SELECT \"journals\".* FROM \"journals\" WHERE \"journals\".\"journalized_id\" = $1 AND \"journals\".\"journalized_type\" = $2 ORDER BY \"journals\".\"created_on\" ASC, \"journals\".\"id\" ASC",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "journals.journalized_type",
            "journals.journalized_id"
        ],
        "setup_query": [
            "SELECT journals.journalized_type FROM journals ORDER BY RANDOM() LIMIT 1;",
            "SELECT journals.journalized_id FROM journals ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "journals.journalized_type": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( journals.* ) FROM journals WHERE ( journals.journalized_id = ? and journals.journalized_type = ? );"
    },
    {
        "src": "SELECT 1 AS one FROM \"attachments\" WHERE (disk_filename = '101123161450_testfile_1.png' AND id <> 16) LIMIT $1",
        "rewrite_type": "lenprecheck",
        "setup_fields": [],
        "setup_query": [],
        "constraint": {
            "attachments.disk_filename": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT attachments.id, 1 FROM attachments WHERE ( attachments.disk_filename = '101123161450_testfile_1.png' and attachments.id != 3 ) LIMIT 34;"
    },
    {
        "src": "SELECT \"custom_values\".* FROM \"custom_values\" WHERE \"custom_values\".\"customized_id\" = $1 AND \"custom_values\".\"customized_type\" = $2 ORDER BY \"custom_values\".\"id\" ASC LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "custom_values.customized_id",
            "custom_values.customized_type"
        ],
        "setup_query": [
            "SELECT custom_values.customized_id FROM custom_values ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_values.customized_type FROM custom_values ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_values.customized_type": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( custom_values.* ) FROM custom_values WHERE ( custom_values.customized_id = ? and custom_values.customized_type = ? ) ORDER BY custom_values.id ASC LIMIT 43;"
    },
    {
        "src": "SELECT \"time_entries\".* FROM \"time_entries\" WHERE \"time_entries\".\"issue_id\" = $1 AND \"time_entries\".\"comments\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "time_entries.comments",
            "time_entries.issue_id"
        ],
        "setup_query": [
            "SELECT time_entries.comments FROM time_entries ORDER BY RANDOM() LIMIT 1;",
            "SELECT time_entries.issue_id FROM time_entries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "time_entries.comments": [
                null,
                1024.0
            ]
        },
        "experiment_query": "SELECT ( time_entries.* ) FROM time_entries WHERE ( time_entries.issue_id = ? and time_entries.comments = ? ) LIMIT 61;"
    },
    {
        "src": "SELECT 1 AS one FROM \"watchers\" WHERE \"watchers\".\"watchable_type\" = $1 AND \"watchers\".\"watchable_id\" IN ($2, $3) LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "watchers.watchable_id",
            "watchers.watchable_type"
        ],
        "setup_query": [
            "SELECT watchers.watchable_id FROM watchers ORDER BY RANDOM() LIMIT 1;",
            "SELECT watchers.watchable_type FROM watchers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "watchers.watchable_type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT watchers.id, 1 FROM watchers WHERE ( watchers.watchable_type = ? and watchers.watchable_id in ? ) LIMIT 87;"
    },
    {
        "src": "SELECT \"issue_statuses\".* FROM \"issue_statuses\" WHERE (LOWER(issue_statuses.name) = LOWER('Resolved')) ORDER BY \"issue_statuses\".\"id\" ASC LIMIT $1",
        "rewrite_type": "lenprecheck",
        "setup_fields": [],
        "setup_query": [],
        "constraint": {
            "issue_statuses.name": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( issue_statuses.* ) FROM issue_statuses WHERE issue_statuses.name = 'Resolved' ORDER BY issue_statuses.id ASC LIMIT 73;"
    },
    {
        "src": "SELECT \"changesets\".* FROM \"changesets\" WHERE \"changesets\".\"repository_id\" = $1 AND \"changesets\".\"revision\" = $2 ORDER BY changesets.committed_on DESC, changesets.id DESC LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "changesets.revision",
            "changesets.repository_id"
        ],
        "setup_query": [
            "SELECT changesets.revision FROM changesets ORDER BY RANDOM() LIMIT 1;",
            "SELECT changesets.repository_id FROM changesets ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "changesets.revision": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( changesets.* ) FROM changesets WHERE ( changesets.repository_id = ? and changesets.revision = ? ) LIMIT 58;"
    },
    {
        "src": "SELECT 1 AS one FROM \"auth_sources\" WHERE \"auth_sources\".\"name\" = $1 AND \"auth_sources\".\"id\" != $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "auth_sources.id",
            "auth_sources.name"
        ],
        "setup_query": [
            "SELECT auth_sources.id FROM auth_sources ORDER BY RANDOM() LIMIT 1;",
            "SELECT auth_sources.name FROM auth_sources ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "auth_sources.name": [
                null,
                60.0
            ]
        },
        "experiment_query": "SELECT auth_sources.id, 1 FROM auth_sources WHERE ( auth_sources.name = ? and auth_sources.id != ? ) LIMIT 49;"
    },
    {
        "src": "SELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"commented_id\" = $1 AND \"comments\".\"commented_type\" = $2 AND \"comments\".\"id\" = $3 ORDER BY created_on LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "comments.commented_id",
            "comments.id",
            "comments.commented_type"
        ],
        "setup_query": [
            "SELECT comments.commented_id FROM comments ORDER BY RANDOM() LIMIT 1;",
            "SELECT comments.id FROM comments ORDER BY RANDOM() LIMIT 1;",
            "SELECT comments.commented_type FROM comments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "comments.commented_type": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( comments.* ) FROM comments WHERE ( ( comments.commented_id = ? and comments.commented_type = ? ) and comments.id = ? ) LIMIT 56;"
    },
    {
        "src": "SELECT \"custom_fields\".* FROM \"custom_fields\" WHERE \"custom_fields\".\"name\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "custom_fields.name"
        ],
        "setup_query": [
            "SELECT custom_fields.name FROM custom_fields ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.name": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( custom_fields.* ) FROM custom_fields WHERE custom_fields.name = ? LIMIT 83;"
    },
    {
        "src": "SELECT 1 AS one FROM \"trackers\" WHERE \"trackers\".\"name\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "trackers.name"
        ],
        "setup_query": [
            "SELECT trackers.name FROM trackers ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "trackers.name": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT trackers.id, 1 FROM trackers WHERE trackers.name = ? LIMIT 1;"
    },
    {
        "src": "SELECT \"import_items\".* FROM \"import_items\" WHERE \"import_items\".\"import_id\" = $1 AND \"import_items\".\"unique_id\" = $2 ORDER BY \"import_items\".\"id\" ASC LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "import_items.unique_id",
            "import_items.import_id"
        ],
        "setup_query": [
            "SELECT import_items.unique_id FROM import_items ORDER BY RANDOM() LIMIT 1;",
            "SELECT import_items.import_id FROM import_items ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "import_items.unique_id": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( import_items.* ) FROM import_items WHERE ( import_items.import_id = ? and import_items.unique_id = ? ) ORDER BY import_items.id ASC LIMIT 2;"
    },
    {
        "src": "SELECT 1 AS one FROM \"settings\" WHERE \"settings\".\"name\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "settings.name"
        ],
        "setup_query": [
            "SELECT settings.name FROM settings ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "settings.name": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT settings.id, 1 FROM settings WHERE settings.name = ? LIMIT 4;"
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" WHERE \"versions\".\"project_id\" = $1 AND \"versions\".\"name\" = $2 ORDER BY \"versions\".\"id\" ASC LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "versions.name",
            "versions.project_id"
        ],
        "setup_query": [
            "SELECT versions.name FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.project_id FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.name": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( versions.* ) FROM versions WHERE ( versions.project_id = ? and versions.name = ? ) ORDER BY versions.id ASC LIMIT 94;"
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" WHERE \"versions\".\"project_id\" = $1 AND \"versions\".\"name\" = $2 ORDER BY \"versions\".\"id\" ASC LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "versions.name",
            "versions.project_id"
        ],
        "setup_query": [
            "SELECT versions.name FROM versions ORDER BY RANDOM() LIMIT 1;",
            "SELECT versions.project_id FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.name": [
                null,
                60.0
            ]
        },
        "experiment_query": "SELECT ( versions.* ) FROM versions WHERE ( versions.project_id = ? and versions.name = ? ) ORDER BY versions.id ASC LIMIT 94;"
    },
    {
        "src": "SELECT \"versions\".* FROM \"versions\" WHERE \"versions\".\"status\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "versions.status"
        ],
        "setup_query": [
            "SELECT versions.status FROM versions ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "versions.status": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( versions.* ) FROM versions WHERE versions.status = ? LIMIT 23;"
    },
    {
        "src": "SELECT \"imports\".* FROM \"imports\" WHERE \"imports\".\"user_id\" = $1 AND \"imports\".\"filename\" = $2 ORDER BY \"imports\".\"id\" ASC LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "imports.user_id",
            "imports.filename"
        ],
        "setup_query": [
            "SELECT imports.user_id FROM imports ORDER BY RANDOM() LIMIT 1;",
            "SELECT imports.filename FROM imports ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "imports.filename": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( imports.* ) FROM imports WHERE ( imports.user_id = ? and imports.filename = ? ) ORDER BY imports.id ASC LIMIT 98;"
    },
    {
        "src": "SELECT 1 AS one FROM \"projects\" WHERE \"projects\".\"identifier\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "projects.identifier"
        ],
        "setup_query": [
            "SELECT projects.identifier FROM projects ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "projects.identifier": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT projects.id, 1 FROM projects WHERE projects.identifier = ? LIMIT 73;"
    },
    {
        "src": "SELECT 1 AS one FROM \"projects\" WHERE \"projects\".\"identifier\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "projects.identifier"
        ],
        "setup_query": [
            "SELECT projects.identifier FROM projects ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "projects.identifier": [
                null,
                100.0
            ]
        },
        "experiment_query": "SELECT projects.id, 1 FROM projects WHERE projects.identifier = ? LIMIT 73;"
    },
    {
        "src": "SELECT \"messages\".* FROM \"messages\" WHERE \"messages\".\"subject\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "messages.subject"
        ],
        "setup_query": [
            "SELECT messages.subject FROM messages ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "messages.subject": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( messages.* ) FROM messages WHERE messages.subject = ? LIMIT 78;"
    },
    {
        "src": "SELECT 1 AS one FROM \"custom_values\" INNER JOIN \"custom_fields\" ON \"custom_fields\".\"id\" = \"custom_values\".\"custom_field_id\" WHERE \"custom_values\".\"value\" = $1 AND \"custom_fields\".\"field_format\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "custom_fields.field_format",
            "custom_values.value"
        ],
        "setup_query": [
            "SELECT custom_fields.field_format FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_values.value FROM custom_values ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_fields.field_format": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT custom_values.id, 1 FROM custom_values INNER JOIN custom_fields ON (custom_fields.id = custom_values.custom_field_id) WHERE ( custom_values.value = ? and custom_fields.field_format = ? ) LIMIT 59;"
    },
    {
        "src": "SELECT 1 AS one FROM \"custom_values\" INNER JOIN \"custom_fields\" ON \"custom_fields\".\"id\" = \"custom_values\".\"custom_field_id\" WHERE \"custom_values\".\"value\" = $1 AND \"custom_fields\".\"field_format\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "custom_fields.field_format",
            "custom_values.value"
        ],
        "setup_query": [
            "SELECT custom_fields.field_format FROM custom_fields ORDER BY RANDOM() LIMIT 1;",
            "SELECT custom_values.value FROM custom_values ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "custom_values.value": [
                null,
                65535.0
            ]
        },
        "experiment_query": "SELECT custom_values.id, 1 FROM custom_values INNER JOIN custom_fields ON (custom_fields.id = custom_values.custom_field_id) WHERE ( custom_values.value = ? and custom_fields.field_format = ? ) LIMIT 59;"
    },
    {
        "src": "SELECT \"issues\".* FROM \"issues\" WHERE \"issues\".\"subject\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "issues.subject"
        ],
        "setup_query": [
            "SELECT issues.subject FROM issues ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "issues.subject": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( issues.* ) FROM issues WHERE issues.subject = ? LIMIT 45;"
    },
    {
        "src": "SELECT \"queries\".* FROM \"queries\" WHERE \"queries\".\"type\" = $1 ORDER BY \"queries\".\"id\" DESC LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "queries.type"
        ],
        "setup_query": [
            "SELECT queries.type FROM queries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "queries.type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( queries.* ) FROM queries WHERE queries.type = ? ORDER BY queries.id DESC LIMIT 2;"
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE (disk_directory IS NULL OR disk_directory = '') ORDER BY \"attachments\".\"id\" ASC LIMIT $1",
        "rewrite_type": "lenprecheck",
        "setup_fields": [],
        "setup_query": [],
        "constraint": {
            "attachments.disk_directory": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( attachments.* ) FROM attachments WHERE ( attachments.disk_directory IS NULL or attachments.disk_directory = '' ) ORDER BY attachments.id ASC LIMIT 100;"
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE \"attachments\".\"digest\" = $1 AND \"attachments\".\"filesize\" = $2 AND \"attachments\".\"disk_filename\" != $3 ORDER BY \"attachments\".\"id\" DESC LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "attachments.disk_filename",
            "attachments.filesize",
            "attachments.digest"
        ],
        "setup_query": [
            "SELECT attachments.disk_filename FROM attachments ORDER BY RANDOM() LIMIT 1;",
            "SELECT attachments.filesize FROM attachments ORDER BY RANDOM() LIMIT 1;",
            "SELECT attachments.digest FROM attachments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "attachments.disk_filename": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( attachments.* ) FROM attachments WHERE ( ( attachments.digest = ? and attachments.filesize = ? ) and attachments.disk_filename != ? ) ORDER BY attachments.id DESC LIMIT 93;"
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE \"attachments\".\"digest\" = $1 AND \"attachments\".\"filesize\" = $2 AND \"attachments\".\"disk_filename\" != $3 ORDER BY \"attachments\".\"id\" DESC LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "attachments.disk_filename",
            "attachments.filesize",
            "attachments.digest"
        ],
        "setup_query": [
            "SELECT attachments.disk_filename FROM attachments ORDER BY RANDOM() LIMIT 1;",
            "SELECT attachments.filesize FROM attachments ORDER BY RANDOM() LIMIT 1;",
            "SELECT attachments.digest FROM attachments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "attachments.filesize": [
                null,
                8.0
            ]
        },
        "experiment_query": "SELECT ( attachments.* ) FROM attachments WHERE ( ( attachments.digest = ? and attachments.filesize = ? ) and attachments.disk_filename != ? ) ORDER BY attachments.id DESC LIMIT 93;"
    },
    {
        "src": "SELECT \"attachments\".* FROM \"attachments\" WHERE \"attachments\".\"digest\" = $1 AND \"attachments\".\"filesize\" = $2 AND \"attachments\".\"disk_filename\" != $3 ORDER BY \"attachments\".\"id\" DESC LIMIT $4",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "attachments.disk_filename",
            "attachments.filesize",
            "attachments.digest"
        ],
        "setup_query": [
            "SELECT attachments.disk_filename FROM attachments ORDER BY RANDOM() LIMIT 1;",
            "SELECT attachments.filesize FROM attachments ORDER BY RANDOM() LIMIT 1;",
            "SELECT attachments.digest FROM attachments ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "attachments.digest": [
                null,
                64.0
            ]
        },
        "experiment_query": "SELECT ( attachments.* ) FROM attachments WHERE ( ( attachments.digest = ? and attachments.filesize = ? ) and attachments.disk_filename != ? ) ORDER BY attachments.id DESC LIMIT 93;"
    },
    {
        "src": "SELECT 1 AS one FROM \"roles\" WHERE \"roles\".\"name\" = $1 AND \"roles\".\"id\" != $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "roles.name",
            "roles.id"
        ],
        "setup_query": [
            "SELECT roles.name FROM roles ORDER BY RANDOM() LIMIT 1;",
            "SELECT roles.id FROM roles ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "roles.name": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT roles.id, 1 FROM roles WHERE ( roles.name = ? and roles.id != ? ) LIMIT 4;"
    },
    {
        "src": "SELECT \"documents\".* FROM \"documents\" WHERE \"documents\".\"project_id\" = $1 AND \"documents\".\"title\" = $2 ORDER BY \"documents\".\"id\" ASC LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "documents.title",
            "documents.project_id"
        ],
        "setup_query": [
            "SELECT documents.title FROM documents ORDER BY RANDOM() LIMIT 1;",
            "SELECT documents.project_id FROM documents ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "documents.title": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( documents.* ) FROM documents WHERE ( documents.project_id = ? and documents.title = ? ) ORDER BY documents.id ASC LIMIT 17;"
    },
    {
        "src": "SELECT \"imports\".* FROM \"imports\" WHERE \"imports\".\"type\" = $1 AND \"imports\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "imports.id",
            "imports.type"
        ],
        "setup_query": [
            "SELECT imports.id FROM imports ORDER BY RANDOM() LIMIT 1;",
            "SELECT imports.type FROM imports ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "imports.type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( imports.* ) FROM imports WHERE ( imports.type = ? and imports.id = ? ) LIMIT 32;"
    },
    {
        "src": "SELECT \"news\".* FROM \"news\" WHERE \"news\".\"title\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "news.title"
        ],
        "setup_query": [
            "SELECT news.title FROM news ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "news.title": [
                null,
                60.0
            ]
        },
        "experiment_query": "SELECT ( news.* ) FROM news WHERE news.title = ? LIMIT 4;"
    },
    {
        "src": "SELECT \"projects\".* FROM \"projects\" WHERE \"projects\".\"name\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "projects.name"
        ],
        "setup_query": [
            "SELECT projects.name FROM projects ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "projects.name": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( projects.* ) FROM projects WHERE projects.name = ? LIMIT 80;"
    },
    {
        "src": "SELECT 1 AS one FROM \"tokens\" WHERE \"tokens\".\"value\" = $1 AND \"tokens\".\"id\" != $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "tokens.value",
            "tokens.id"
        ],
        "setup_query": [
            "SELECT tokens.value FROM tokens ORDER BY RANDOM() LIMIT 1;",
            "SELECT tokens.id FROM tokens ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "tokens.value": [
                null,
                40.0
            ]
        },
        "experiment_query": "SELECT tokens.id, 1 FROM tokens WHERE ( tokens.value = ? and tokens.id != ? ) LIMIT 54;"
    },
    {
        "src": "SELECT \"wiki_redirects\".* FROM \"wiki_redirects\" WHERE \"wiki_redirects\".\"redirects_to\" = $1 AND \"wiki_redirects\".\"redirects_to_wiki_id\" = $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "wiki_redirects.redirects_to",
            "wiki_redirects.redirects_to_wiki_id"
        ],
        "setup_query": [
            "SELECT wiki_redirects.redirects_to FROM wiki_redirects ORDER BY RANDOM() LIMIT 1;",
            "SELECT wiki_redirects.redirects_to_wiki_id FROM wiki_redirects ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "wiki_redirects.redirects_to": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( wiki_redirects.* ) FROM wiki_redirects WHERE ( wiki_redirects.redirects_to = ? and wiki_redirects.redirects_to_wiki_id = ? );"
    },
    {
        "src": "SELECT \"repositories\".* FROM \"repositories\" WHERE \"repositories\".\"type\" = $1 AND \"repositories\".\"id\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "repositories.id",
            "repositories.type"
        ],
        "setup_query": [
            "SELECT repositories.id FROM repositories ORDER BY RANDOM() LIMIT 1;",
            "SELECT repositories.type FROM repositories ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "repositories.type": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( repositories.* ) FROM repositories WHERE ( repositories.type = ? and repositories.id = ? ) LIMIT 40;"
    },
    {
        "src": "SELECT 1 AS one FROM \"changesets\" WHERE \"changesets\".\"scmid\" = $1 AND \"changesets\".\"repository_id\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "changesets.scmid",
            "changesets.repository_id"
        ],
        "setup_query": [
            "SELECT changesets.scmid FROM changesets ORDER BY RANDOM() LIMIT 1;",
            "SELECT changesets.repository_id FROM changesets ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "changesets.scmid": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT changesets.id, 1 FROM changesets WHERE ( changesets.scmid = ? and changesets.repository_id = ? ) LIMIT 26;"
    },
    {
        "src": "SELECT \"auth_sources\".* FROM \"auth_sources\" WHERE \"auth_sources\".\"type\" = $1 ORDER BY id DESC LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "auth_sources.type"
        ],
        "setup_query": [
            "SELECT auth_sources.type FROM auth_sources ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "auth_sources.type": [
                null,
                30.0
            ]
        },
        "experiment_query": "SELECT ( auth_sources.* ) FROM auth_sources WHERE auth_sources.type = ? ORDER BY auth_sources.id DESC LIMIT 88;"
    },
    {
        "src": "SELECT 1 AS one FROM \"enabled_modules\" WHERE \"enabled_modules\".\"name\" = $1 AND \"enabled_modules\".\"project_id\" = $2 LIMIT $3",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "enabled_modules.project_id",
            "enabled_modules.name"
        ],
        "setup_query": [
            "SELECT enabled_modules.project_id FROM enabled_modules ORDER BY RANDOM() LIMIT 1;",
            "SELECT enabled_modules.name FROM enabled_modules ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "enabled_modules.name": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT enabled_modules.id, 1 FROM enabled_modules WHERE ( enabled_modules.name = ? and enabled_modules.project_id = ? ) LIMIT 58;"
    },
    {
        "src": "SELECT \"queries\".* FROM \"queries\" WHERE \"queries\".\"name\" = $1 LIMIT $2",
        "rewrite_type": "lenprecheck",
        "setup_fields": [
            "queries.name"
        ],
        "setup_query": [
            "SELECT queries.name FROM queries ORDER BY RANDOM() LIMIT 1;"
        ],
        "constraint": {
            "queries.name": [
                null,
                255.0
            ]
        },
        "experiment_query": "SELECT ( queries.* ) FROM queries WHERE queries.name = ? LIMIT 49;"
    }
]