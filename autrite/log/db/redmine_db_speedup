{"before": 0.03500000000000001, "after": 0.03560000000000001, "sql": "SELECT email_addresses.address FROM email_addresses WHERE email_addresses.user_id = 195", "before_plan": [["Index Scan using index_email_addresses_on_user_id on email_addresses  (cost=0.28..8.30 rows=1 width=31)"], ["  Index Cond: (user_id = 195)"]], "after_plan": [["Index Scan using unique_table_email_addresses_field_user_id_cond_none on email_addresses  (cost=0.28..8.30 rows=1 width=31)"], ["  Index Cond: (user_id = 195)"]]}
{"before": 0.04559999999999999, "after": 0.04239999999999999, "sql": "SELECT changesets.* FROM changesets WHERE id > 100 AND repository_id = 10 ORDER BY id ASC LIMIT 4", "before_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id > 100)"]], "after_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id > 100)"]]}
{"before": 0.04349999999999999, "after": 0.039799999999999995, "sql": "SELECT changesets.* FROM changesets WHERE id > 109 AND repository_id = 10 ORDER BY id ASC LIMIT 6", "before_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id > 109)"]], "after_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id > 109)"]]}
{"before": 0.04259999999999999, "after": 0.0417, "sql": "SELECT changesets.* FROM changesets WHERE id > 101 AND repository_id = 10 ORDER BY id ASC LIMIT 4", "before_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id > 101)"]], "after_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id > 101)"]]}
{"before": 0.042899999999999994, "after": 0.038599999999999995, "sql": "SELECT changesets.* FROM changesets WHERE id < 102 AND repository_id = 10 ORDER BY id DESC LIMIT 1", "before_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id DESC"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id < 102)"]], "after_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id DESC"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id < 102)"]]}
{"before": 0.041999999999999996, "after": 0.038799999999999994, "sql": "SELECT changesets.* FROM changesets WHERE id < 100 AND repository_id = 10 ORDER BY id DESC LIMIT 6", "before_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id DESC"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id < 100)"]], "after_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: id DESC"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: (id < 100)"]]}
{"before": 0.08109999999999998, "after": 0.0658, "sql": "SELECT DISTINCT changesets.committer, changesets.user_id FROM changesets WHERE changesets.repository_id = 7642", "before_plan": [["Unique  (cost=8.31..8.32 rows=1 width=133)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=133)"], ["        Sort Key: committer, user_id"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=133)"], ["              Index Cond: (repository_id = 7642)"]], "after_plan": [["Unique  (cost=8.31..8.32 rows=1 width=133)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=133)"], ["        Sort Key: committer, user_id"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=133)"], ["              Index Cond: (repository_id = 7642)"]]}
{"before": 0.07899999999999999, "after": 0.07379999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'UserCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=275.92..275.93 rows=2 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..275.91 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'UserCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=2 width=0)"], ["              Index Cond: ((type)::text = 'UserCustomField'::text)"]], "after_plan": [["Sort  (cost=15.80..15.80 rows=2 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..15.79 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'UserCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=2 width=0)"], ["              Index Cond: ((type)::text = 'UserCustomField'::text)"]]}
{"before": 0.06470000000000001, "after": 0.06400000000000002, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'GroupCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'GroupCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'GroupCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'GroupCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'GroupCustomField'::text)"]]}
{"before": 0.07219999999999999, "after": 0.06999999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'ProjectCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'ProjectCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'ProjectCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'ProjectCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'ProjectCustomField'::text)"]]}
{"before": 0.0659, "after": 0.06559999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'VersionCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'VersionCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'VersionCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'VersionCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'VersionCustomField'::text)"]]}
{"before": 0.0658, "after": 0.06570000000000001, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'DocumentCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'DocumentCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'DocumentCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'DocumentCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'DocumentCustomField'::text)"]]}
{"before": 0.0722, "after": 0.06770000000000001, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'TimeEntryCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'TimeEntryCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'TimeEntryCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'TimeEntryCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'TimeEntryCustomField'::text)"]]}
{"before": 0.08599999999999998, "after": 0.0788, "sql": "SELECT committer, user_id, COUNT(*) AS count FROM changesets WHERE repository_id = 10 GROUP BY committer, user_id", "before_plan": [["GroupAggregate  (cost=8.31..8.34 rows=1 width=141)"], ["  Group Key: committer, user_id"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=133)"], ["        Sort Key: committer, user_id"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=133)"], ["              Index Cond: (repository_id = 10)"]], "after_plan": [["GroupAggregate  (cost=8.31..8.34 rows=1 width=141)"], ["  Group Key: committer, user_id"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=133)"], ["        Sort Key: committer, user_id"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=133)"], ["              Index Cond: (repository_id = 10)"]]}
{"before": 0.0627, "after": 0.06239999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'EnumerationCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'EnumerationCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'EnumerationCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'EnumerationCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'EnumerationCustomField'::text)"]]}
{"before": 0.0676, "after": 0.06670000000000001, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'IssuePriorityCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'IssuePriorityCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'IssuePriorityCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'IssuePriorityCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'IssuePriorityCustomField'::text)"]]}
{"before": 0.06480000000000001, "after": 0.0632, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'GroupAnonymousCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'GroupAnonymousCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'GroupAnonymousCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'GroupAnonymousCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'GroupAnonymousCustomField'::text)"]]}
{"before": 0.0655, "after": 0.0638, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'GroupNonMemberCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'GroupNonMemberCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'GroupNonMemberCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'GroupNonMemberCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'GroupNonMemberCustomField'::text)"]]}
{"before": 0.0638, "after": 0.06459999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'DocumentCategoryCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'DocumentCategoryCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'DocumentCategoryCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'DocumentCategoryCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'DocumentCategoryCustomField'::text)"]]}
{"before": 0.0725, "after": 0.0699, "sql": "SELECT custom_fields.* FROM custom_fields WHERE type = 'TimeEntryActivityCustomField' ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=272.37..272.37 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..272.36 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'TimeEntryActivityCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'TimeEntryActivityCustomField'::text)"]], "after_plan": [["Sort  (cost=12.24..12.25 rows=1 width=137)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..12.23 rows=1 width=137)"], ["        Recheck Cond: ((type)::text = 'TimeEntryActivityCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=1 width=0)"], ["              Index Cond: ((type)::text = 'TimeEntryActivityCustomField'::text)"]]}
{"before": 0.1359, "after": 0.08409999999999998, "sql": "SELECT COUNT(*) FROM changes INNER JOIN changesets ON changes.changeset_id = changesets.id WHERE changesets.repository_id = 8058", "before_plan": [["Aggregate  (cost=16.65..16.66 rows=1 width=8)"], ["  ->  Nested Loop  (cost=0.57..16.64 rows=1 width=0)"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=4)"], ["              Index Cond: (repository_id = 8058)"], ["        ->  Index Only Scan using changesets_changeset_id on changes  (cost=0.29..8.32 rows=2 width=4)"], ["              Index Cond: (changeset_id = changesets.id)"]], "after_plan": [["Aggregate  (cost=16.65..16.66 rows=1 width=8)"], ["  ->  Nested Loop  (cost=0.57..16.64 rows=1 width=0)"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=4)"], ["              Index Cond: (repository_id = 8058)"], ["        ->  Index Only Scan using changesets_changeset_id on changes  (cost=0.29..8.32 rows=2 width=4)"], ["              Index Cond: (changeset_id = changesets.id)"]]}
{"before": 0.03470000000000001, "after": 0.03250000000000001, "sql": "SELECT email_addresses.address FROM email_addresses WHERE email_addresses.user_id = 1972 AND (is_default = True OR notify = True)", "before_plan": [["Index Scan using index_email_addresses_on_user_id on email_addresses  (cost=0.28..8.30 rows=1 width=31)"], ["  Index Cond: (user_id = 1972)"], ["  Filter: (is_default OR notify)"]], "after_plan": [["Index Scan using unique_table_email_addresses_field_user_id_cond_none on email_addresses  (cost=0.28..8.30 rows=1 width=31)"], ["  Index Cond: (user_id = 1972)"], ["  Filter: (is_default OR notify)"]]}
{"before": 0.0617, "after": 0.05950000000000001, "sql": "SELECT custom_fields.name FROM custom_fields WHERE custom_fields.type IN ('UserCustomField') ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=275.92..275.93 rows=2 width=15)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..275.91 rows=2 width=15)"], ["        Recheck Cond: ((type)::text = 'UserCustomField'::text)"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=2 width=0)"], ["              Index Cond: ((type)::text = 'UserCustomField'::text)"]], "after_plan": [["Sort  (cost=15.80..15.80 rows=2 width=15)"], ["  Sort Key: \"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..15.79 rows=2 width=15)"], ["        Recheck Cond: ((type)::text = 'UserCustomField'::text)"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=2 width=0)"], ["              Index Cond: ((type)::text = 'UserCustomField'::text)"]]}
{"before": 0.08350000000000003, "after": 0.04669999999999999, "sql": "SELECT changesets.* FROM changesets WHERE changesets.repository_id = 12115 ORDER BY changesets.committed_on DESC, changesets.id DESC", "before_plan": [["Sort  (cost=8.31..8.32 rows=1 width=453)"], ["  Sort Key: committed_on DESC, id DESC"], ["  ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["        Index Cond: (repository_id = 12115)"]], "after_plan": [["Sort  (cost=8.31..8.32 rows=1 width=453)"], ["  Sort Key: committed_on DESC, id DESC"], ["  ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["        Index Cond: (repository_id = 12115)"]]}
{"before": 0.0392, "after": 0.0393, "sql": "SELECT email_addresses.address FROM email_addresses WHERE email_addresses.user_id IN (4953, 1320) AND (is_default = True OR notify = True)", "before_plan": [["Index Scan using index_email_addresses_on_user_id on email_addresses  (cost=0.28..12.60 rows=2 width=31)"], ["  Index Cond: (user_id = ANY ('{4953,1320}'::integer[]))"], ["  Filter: (is_default OR notify)"]], "after_plan": [["Index Scan using unique_table_email_addresses_field_user_id_cond_none on email_addresses  (cost=0.28..12.60 rows=2 width=31)"], ["  Index Cond: (user_id = ANY ('{4953,1320}'::integer[]))"], ["  Filter: (is_default OR notify)"]]}
{"before": 0.06900000000000002, "after": 0.0648, "sql": "SELECT members.* FROM members INNER JOIN projects ON projects.id = members.project_id WHERE members.user_id = 4642 AND projects.status <> 1", "before_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=21)"], ["  ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=21)"], ["        Index Cond: (user_id = 4642)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: (status <> 1)"]], "after_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=21)"], ["  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=21)"], ["        Index Cond: (user_id = 4642)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: (status <> 1)"]]}
{"before": 0.06100000000000001, "after": 0.06000000000000001, "sql": "SELECT projects.* FROM projects INNER JOIN members ON projects.id = members.project_id WHERE members.user_id = 543 AND projects.status <> 9", "before_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=395)"], ["  ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 543)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=395)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: (status <> 9)"]], "after_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=395)"], ["  ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 543)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=395)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: (status <> 9)"]]}
{"before": 0.0632, "after": 0.05920000000000001, "sql": "SELECT projects.id FROM projects INNER JOIN members ON projects.id = members.project_id WHERE members.user_id = 5105 AND projects.status <> 1", "before_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["  ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 5105)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: (status <> 1)"]], "after_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["  ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 5105)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: (status <> 1)"]]}
{"before": 0.04659999999999999, "after": 0.04739999999999999, "sql": "SELECT issues.* FROM issues INNER JOIN watchers ON watchers.watchable_id = issues.id AND watchers.watchable_type = 'Message' WHERE watchers.user_id = 1", "before_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=262)"], ["  ->  Index Scan using watchers_user_id_type on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["        Index Cond: ((user_id = 1) AND ((watchable_type)::text = 'Message'::text))"], ["  ->  Index Scan using issues_pkey on issues  (cost=0.29..8.30 rows=1 width=262)"], ["        Index Cond: (id = watchers.watchable_id)"]], "after_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=262)"], ["  ->  Index Only Scan using unique_table_watchers_field_user_id_watchable_type_watchable_id on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["        Index Cond: ((user_id = 1) AND (watchable_type = 'Message'::text))"], ["  ->  Index Scan using issues_pkey on issues  (cost=0.29..8.30 rows=1 width=262)"], ["        Index Cond: (id = watchers.watchable_id)"]]}
{"before": 0.0645, "after": 0.053799999999999994, "sql": "SELECT 1 AS one FROM members INNER JOIN projects ON projects.id = members.project_id WHERE members.user_id = 3932 AND projects.status <> 9 LIMIT 5", "before_plan": [["Limit  (cost=0.57..16.61 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["        ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (user_id = 3932)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 9)"]], "after_plan": [["Limit  (cost=0.57..16.61 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["        ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (user_id = 3932)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 9)"]]}
{"before": 0.060300000000000006, "after": 0.054799999999999995, "sql": "SELECT 1 AS one FROM projects INNER JOIN members ON projects.id = members.project_id WHERE members.user_id = 850 AND projects.status <> 1 LIMIT 6", "before_plan": [["Limit  (cost=0.57..16.61 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["        ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (user_id = 850)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 1)"]], "after_plan": [["Limit  (cost=0.57..16.61 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["        ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (user_id = 850)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 1)"]]}
{"before": 0.07580000000000002, "after": 0.04389999999999999, "sql": "SELECT changesets.* FROM changesets WHERE changesets.repository_id = 1380 ORDER BY changesets.committed_on DESC, changesets.id DESC LIMIT 10 OFFSET 1", "before_plan": [["Limit  (cost=8.32..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: committed_on DESC, id DESC"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 1380)"]], "after_plan": [["Limit  (cost=8.32..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: committed_on DESC, id DESC"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 1380)"]]}
{"before": 0.0551, "after": 0.056600000000000004, "sql": "SELECT email_addresses.address FROM email_addresses WHERE email_addresses.user_id = 729 AND email_addresses.is_default = False ORDER BY email_addresses.id ASC", "before_plan": [["Sort  (cost=8.31..8.32 rows=1 width=35)"], ["  Sort Key: id"], ["  ->  Index Scan using index_email_addresses_on_user_id on email_addresses  (cost=0.28..8.30 rows=1 width=35)"], ["        Index Cond: (user_id = 729)"], ["        Filter: (NOT is_default)"]], "after_plan": [["Sort  (cost=8.31..8.32 rows=1 width=35)"], ["  Sort Key: id"], ["  ->  Index Scan using unique_table_email_addresses_field_user_id_cond_none on email_addresses  (cost=0.28..8.30 rows=1 width=35)"], ["        Index Cond: (user_id = 729)"], ["        Filter: (NOT is_default)"]]}
{"before": 0.044, "after": 0.029100000000000004, "sql": "SELECT issue_categories.* FROM issue_categories WHERE issue_categories.project_id = 6405 AND issue_categories.name = 'mlzfsjnwbtqukozknqmwvrcpbcshftliychyouljotoewdu' ORDER BY issue_categories.name ASC LIMIT 5", "before_plan": [["Limit  (cost=4.30..11.43 rows=1 width=43)"], ["  ->  Bitmap Heap Scan on issue_categories  (cost=4.30..11.43 rows=1 width=43)"], ["        Recheck Cond: (project_id = 6405)"], ["        Filter: ((name)::text = 'mlzfsjnwbtqukozknqmwvrcpbcshftliychyouljotoewdu'::text)"], ["        ->  Bitmap Index Scan on issue_categories_project_id  (cost=0.00..4.30 rows=2 width=0)"], ["              Index Cond: (project_id = 6405)"]], "after_plan": [["Limit  (cost=0.29..8.30 rows=1 width=43)"], ["  ->  Index Scan using unique_table_issue_categories_field_name_project_id_cond_none on issue_categories  (cost=0.29..8.30 rows=1 width=43)"], ["        Index Cond: (((name)::text = 'mlzfsjnwbtqukozknqmwvrcpbcshftliychyouljotoewdu'::text) AND (project_id = 6405))"]]}
{"before": 1.3408000000000002, "after": 1.9542000000000002, "sql": "SELECT versions.id FROM projects INNER JOIN versions ON versions.project_id = projects.id WHERE projects.lft >= 2 AND projects.rgt <= 5 ORDER BY projects.lft ASC", "before_plan": [["Sort  (cost=376.42..376.43 rows=1 width=8)"], ["  Sort Key: projects.lft"], ["  ->  Hash Join  (cost=12.33..376.41 rows=1 width=8)"], ["        Hash Cond: (versions.project_id = projects.id)"], ["        ->  Seq Scan on versions  (cost=0.00..347.84 rows=6184 width=8)"], ["        ->  Hash  (cost=12.30..12.30 rows=2 width=8)"], ["              ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..12.30 rows=2 width=8)"], ["                    Index Cond: (rgt <= 5)"], ["                    Filter: (lft >= 2)"]], "after_plan": [["Sort  (cost=297.68..297.68 rows=1 width=8)"], ["  Sort Key: projects.lft"], ["  ->  Nested Loop  (cost=0.57..297.67 rows=1 width=8)"], ["        ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..12.30 rows=2 width=8)"], ["              Index Cond: (rgt <= 5)"], ["              Filter: (lft >= 2)"], ["        ->  Index Scan using unique_table_versions_field_name_project_id_cond_none on versions  (cost=0.28..142.67 rows=1 width=8)"], ["              Index Cond: (project_id = projects.id)"]]}
{"before": 1.3461, "after": 1.0127000000000002, "sql": "SELECT versions.id FROM projects INNER JOIN versions ON versions.project_id = projects.id WHERE projects.lft >= 6 AND projects.rgt <= 7 ORDER BY projects.lft ASC", "before_plan": [["Sort  (cost=380.44..380.44 rows=2 width=8)"], ["  Sort Key: projects.lft"], ["  ->  Hash Join  (cost=16.34..380.43 rows=2 width=8)"], ["        Hash Cond: (versions.project_id = projects.id)"], ["        ->  Seq Scan on versions  (cost=0.00..347.84 rows=6184 width=8)"], ["        ->  Hash  (cost=16.30..16.30 rows=3 width=8)"], ["              ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..16.30 rows=3 width=8)"], ["                    Index Cond: (rgt <= 7)"], ["                    Filter: (lft >= 6)"]], "after_plan": [["Sort  (cost=352.36..352.37 rows=2 width=8)"], ["  Sort Key: projects.lft"], ["  ->  Nested Loop  (cost=0.57..352.35 rows=2 width=8)"], ["        ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..16.30 rows=3 width=8)"], ["              Index Cond: (rgt <= 7)"], ["              Filter: (lft >= 6)"], ["        ->  Index Scan using unique_table_versions_field_name_project_id_cond_none on versions  (cost=0.28..112.01 rows=1 width=8)"], ["              Index Cond: (project_id = projects.id)"]]}
{"before": 0.0686, "after": 0.06780000000000001, "sql": "SELECT members.* FROM members INNER JOIN projects ON projects.id = members.project_id WHERE members.user_id = 4196 AND projects.status <> 1 AND projects.status <> 9", "before_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=21)"], ["  ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=21)"], ["        Index Cond: (user_id = 4196)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: ((status <> 1) AND (status <> 9))"]], "after_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=21)"], ["  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=21)"], ["        Index Cond: (user_id = 4196)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: ((status <> 1) AND (status <> 9))"]]}
{"before": 0.06599999999999999, "after": 0.071, "sql": "SELECT member_roles.* FROM member_roles INNER JOIN members ON members.id = member_roles.member_id WHERE members.user_id = 8 AND member_roles.inherited_from IN (6, 7)", "before_plan": [["Nested Loop  (cost=4.58..23.68 rows=1 width=16)"], ["  Join Filter: (member_roles.member_id = members.id)"], ["  ->  Index Scan using index_member_roles_on_inherited_from on member_roles  (cost=0.28..12.60 rows=2 width=16)"], ["        Index Cond: (inherited_from = ANY ('{6,7}'::integer[]))"], ["  ->  Materialize  (cost=4.30..11.02 rows=2 width=4)"], ["        ->  Bitmap Heap Scan on members  (cost=4.30..11.01 rows=2 width=4)"], ["              Recheck Cond: (user_id = 8)"], ["              ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=2 width=0)"], ["                    Index Cond: (user_id = 8)"]], "after_plan": [["Nested Loop  (cost=4.58..23.68 rows=1 width=16)"], ["  Join Filter: (member_roles.member_id = members.id)"], ["  ->  Index Scan using index_member_roles_on_inherited_from on member_roles  (cost=0.28..12.60 rows=2 width=16)"], ["        Index Cond: (inherited_from = ANY ('{6,7}'::integer[]))"], ["  ->  Materialize  (cost=4.30..11.02 rows=2 width=4)"], ["        ->  Bitmap Heap Scan on members  (cost=4.30..11.01 rows=2 width=4)"], ["              Recheck Cond: (user_id = 8)"], ["              ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=2 width=0)"], ["                    Index Cond: (user_id = 8)"]]}
{"before": 0.08490000000000003, "after": 0.03949999999999999, "sql": "SELECT changesets.* FROM changesets WHERE changesets.repository_id = 5629 AND changesets.revision = 'ihcywnmuuwfvngnutnsmioslwjemnvmclhdjllgdnotsgkydrmbfxyqhbswbxbkxilpoknynwoxjgukwijtdjnzihqe' ORDER BY changesets.committed_on DESC, changesets.id DESC LIMIT 7", "before_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: committed_on DESC, id DESC"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: (repository_id = 5629)"], ["              Filter: ((revision)::text = 'ihcywnmuuwfvngnutnsmioslwjemnvmclhdjllgdnotsgkydrmbfxyqhbswbxbkxilpoknynwoxjgukwijtdjnzihqe'::text)"]], "after_plan": [["Limit  (cost=8.31..8.32 rows=1 width=453)"], ["  ->  Sort  (cost=8.31..8.32 rows=1 width=453)"], ["        Sort Key: committed_on DESC, id DESC"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["              Index Cond: ((repository_id = 5629) AND ((revision)::text = 'ihcywnmuuwfvngnutnsmioslwjemnvmclhdjllgdnotsgkydrmbfxyqhbswbxbkxilpoknynwoxjgukwijtdjnzihqe'::text))"]]}
{"before": 0.0504, "after": 0.053200000000000004, "sql": "SELECT member_roles.* FROM member_roles INNER JOIN members ON members.id = member_roles.member_id WHERE members.user_id = 8 AND member_roles.inherited_from IN (87, 89)", "before_plan": [["Nested Loop  (cost=4.58..23.68 rows=1 width=16)"], ["  Join Filter: (member_roles.member_id = members.id)"], ["  ->  Index Scan using index_member_roles_on_inherited_from on member_roles  (cost=0.28..12.60 rows=2 width=16)"], ["        Index Cond: (inherited_from = ANY ('{87,89}'::integer[]))"], ["  ->  Materialize  (cost=4.30..11.02 rows=2 width=4)"], ["        ->  Bitmap Heap Scan on members  (cost=4.30..11.01 rows=2 width=4)"], ["              Recheck Cond: (user_id = 8)"], ["              ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=2 width=0)"], ["                    Index Cond: (user_id = 8)"]], "after_plan": [["Nested Loop  (cost=4.58..23.68 rows=1 width=16)"], ["  Join Filter: (member_roles.member_id = members.id)"], ["  ->  Index Scan using index_member_roles_on_inherited_from on member_roles  (cost=0.28..12.60 rows=2 width=16)"], ["        Index Cond: (inherited_from = ANY ('{87,89}'::integer[]))"], ["  ->  Materialize  (cost=4.30..11.02 rows=2 width=4)"], ["        ->  Bitmap Heap Scan on members  (cost=4.30..11.01 rows=2 width=4)"], ["              Recheck Cond: (user_id = 8)"], ["              ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=2 width=0)"], ["                    Index Cond: (user_id = 8)"]]}
{"before": 0.0641, "after": 0.0637, "sql": "SELECT 1 AS one FROM projects INNER JOIN members ON projects.id = members.project_id WHERE members.user_id = 3176 AND projects.status <> 1 AND projects.id = 380 LIMIT 1", "before_plan": [["Limit  (cost=0.57..16.62 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.57..16.62 rows=1 width=4)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (id = 380)"], ["              Filter: (status <> 1)"], ["        ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: ((user_id = 3176) AND (project_id = 380))"]], "after_plan": [["Limit  (cost=0.57..16.62 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.57..16.62 rows=1 width=4)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (id = 380)"], ["              Filter: (status <> 1)"], ["        ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: ((user_id = 3176) AND (project_id = 380))"]]}
{"before": 0.027800000000000002, "after": 0.030400000000000003, "sql": "SELECT member_roles.* FROM member_roles INNER JOIN members ON members.id = member_roles.member_id WHERE members.user_id = 9 AND member_roles.inherited_from IN (87, 89)", "before_plan": [["Nested Loop  (cost=0.56..16.61 rows=1 width=16)"], ["  ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 9)"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=16)"], ["        Index Cond: (member_id = members.id)"], ["        Filter: (inherited_from = ANY ('{87,89}'::integer[]))"]], "after_plan": [["Nested Loop  (cost=0.56..16.61 rows=1 width=16)"], ["  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 9)"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=16)"], ["        Index Cond: (member_id = members.id)"], ["        Filter: (inherited_from = ANY ('{87,89}'::integer[]))"]]}
{"before": 0.3753, "after": 1.1986999999999999, "sql": "SELECT 1 AS one FROM versions INNER JOIN projects ON projects.id = versions.project_id WHERE projects.lft >= 1 AND projects.rgt <= 10 AND projects.status <> 9 LIMIT 5", "before_plan": [["Limit  (cost=20.36..384.44 rows=2 width=4)"], ["  ->  Hash Join  (cost=20.36..384.44 rows=2 width=4)"], ["        Hash Cond: (versions.project_id = projects.id)"], ["        ->  Seq Scan on versions  (cost=0.00..347.84 rows=6184 width=4)"], ["        ->  Hash  (cost=20.32..20.32 rows=3 width=4)"], ["              ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..20.32 rows=3 width=4)"], ["                    Index Cond: (rgt <= 10)"], ["                    Filter: ((lft >= 1) AND (status <> 9))"]], "after_plan": [["Limit  (cost=0.57..356.37 rows=2 width=4)"], ["  ->  Nested Loop  (cost=0.57..356.37 rows=2 width=4)"], ["        ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..20.32 rows=3 width=4)"], ["              Index Cond: (rgt <= 10)"], ["              Filter: ((lft >= 1) AND (status <> 9))"], ["        ->  Index Only Scan using unique_table_versions_field_name_project_id_cond_none on versions  (cost=0.28..112.01 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"]]}
{"before": 0.05189999999999999, "after": 0.05519999999999999, "sql": "SELECT projects.* FROM projects INNER JOIN members ON projects.id = members.project_id WHERE members.user_id = 3450 AND projects.status <> 5 ORDER BY projects.id ASC LIMIT 7", "before_plan": [["Limit  (cost=0.57..16.61 rows=1 width=395)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=395)"], ["        ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (user_id = 3450)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=395)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 5)"]], "after_plan": [["Limit  (cost=0.57..16.61 rows=1 width=395)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=395)"], ["        ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (user_id = 3450)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=395)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 5)"]]}
{"before": 16.8131, "after": 18.4513, "sql": "SELECT COUNT(*) FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13))", "before_plan": [["Aggregate  (cost=11694.69..11694.70 rows=1 width=8)"], ["  ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=0)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Aggregate  (cost=11694.69..11694.70 rows=1 width=8)"], ["  ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=0)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 16.9214, "after": 18.014000000000003, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13))", "before_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=395)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=395)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 16.2511, "after": 16.5972, "sql": "SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13))", "before_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 16.641799999999996, "after": 16.6372, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (89, 12))", "before_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=395)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{89,12}'::integer[]))"]], "after_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=395)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{89,12}'::integer[]))"]]}
{"before": 16.9585, "after": 17.315800000000003, "sql": "SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (89, 12))", "before_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{89,12}'::integer[]))"]], "after_plan": [["Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{89,12}'::integer[]))"]]}
{"before": 32.1704, "after": 25.851399999999995, "sql": "SELECT projects.* FROM projects WHERE projects.status = 5 AND projects.id IN (SELECT em.project_id FROM enabled_modules AS em WHERE em.name = 'repository') ORDER BY projects.identifier", "before_plan": [["Sort  (cost=13972.25..13980.47 rows=3288 width=395)"], ["  Sort Key: projects.identifier"], ["  ->  Hash Semi Join  (cost=1966.79..13780.18 rows=3288 width=395)"], ["        Hash Cond: (projects.id = em.project_id)"], ["        ->  Seq Scan on projects  (cost=0.00..11653.00 rows=3326 width=395)"], ["              Filter: (status = 5)"], ["        ->  Hash  (cost=1838.58..1838.58 rows=10257 width=4)"], ["              ->  Seq Scan on enabled_modules em  (cost=0.00..1838.58 rows=10257 width=4)"], ["                    Filter: ((name)::text = 'repository'::text)"]], "after_plan": [["Sort  (cost=12668.17..12676.70 rows=3411 width=395)"], ["  Sort Key: projects.identifier"], ["  ->  Hash Join  (cost=806.28..12468.01 rows=3411 width=395)"], ["        Hash Cond: (projects.id = em.project_id)"], ["        ->  Seq Scan on projects  (cost=0.00..11653.00 rows=3326 width=395)"], ["              Filter: (status = 5)"], ["        ->  Hash  (cost=678.07..678.07 rows=10257 width=4)"], ["              ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules em  (cost=0.42..678.07 rows=10257 width=4)"], ["                    Index Cond: (name = 'repository'::text)"]]}
{"before": 0.11439999999999999, "after": 0.1165, "sql": "SELECT committer, user_id, COUNT(*) AS count FROM changes INNER JOIN changesets ON changesets.id = changes.changeset_id WHERE changesets.repository_id = 10 GROUP BY committer, user_id", "before_plan": [["GroupAggregate  (cost=16.65..16.68 rows=1 width=141)"], ["  Group Key: changesets.committer, changesets.user_id"], ["  ->  Sort  (cost=16.65..16.66 rows=1 width=133)"], ["        Sort Key: changesets.committer, changesets.user_id"], ["        ->  Nested Loop  (cost=0.57..16.64 rows=1 width=133)"], ["              ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=137)"], ["                    Index Cond: (repository_id = 10)"], ["              ->  Index Only Scan using changesets_changeset_id on changes  (cost=0.29..8.32 rows=2 width=4)"], ["                    Index Cond: (changeset_id = changesets.id)"]], "after_plan": [["GroupAggregate  (cost=16.65..16.68 rows=1 width=141)"], ["  Group Key: changesets.committer, changesets.user_id"], ["  ->  Sort  (cost=16.65..16.66 rows=1 width=133)"], ["        Sort Key: changesets.committer, changesets.user_id"], ["        ->  Nested Loop  (cost=0.57..16.64 rows=1 width=133)"], ["              ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=137)"], ["                    Index Cond: (repository_id = 10)"], ["              ->  Index Only Scan using changesets_changeset_id on changes  (cost=0.29..8.32 rows=2 width=4)"], ["                    Index Cond: (changeset_id = changesets.id)"]]}
{"before": 0.9671, "after": 0.24350000000000005, "sql": "SELECT versions.* FROM versions WHERE versions.project_id = 2400 ORDER BY (CASE WHEN versions.effective_date IS NULL THEN 1 ELSE 0 END), versions.effective_date, versions.name, versions.id", "before_plan": [["Sort  (cost=363.31..363.31 rows=1 width=360)"], ["  Sort Key: (CASE WHEN (effective_date IS NULL) THEN 1 ELSE 0 END), effective_date, name, id"], ["  ->  Seq Scan on versions  (cost=0.00..363.30 rows=1 width=360)"], ["        Filter: (project_id = 2400)"]], "after_plan": [["Sort  (cost=234.68..234.69 rows=1 width=360)"], ["  Sort Key: (CASE WHEN (effective_date IS NULL) THEN 1 ELSE 0 END), effective_date, name, id"], ["  ->  Index Scan using unique_table_versions_field_name_project_id_cond_none on versions  (cost=0.28..234.67 rows=1 width=360)"], ["        Index Cond: (project_id = 2400)"]]}
{"before": 0.04939999999999999, "after": 0.04489999999999999, "sql": "SELECT projects.* FROM projects WHERE projects.id = 4984 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (7, 12))", "before_plan": [["Index Scan using projects_pkey on projects  (cost=12.89..20.91 rows=1 width=395)"], ["  Index Cond: (id = 4984)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{7,12}'::integer[]))"]], "after_plan": [["Index Scan using projects_pkey on projects  (cost=12.89..20.91 rows=1 width=395)"], ["  Index Cond: (id = 4984)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{7,12}'::integer[]))"]]}
{"before": 0.07469999999999999, "after": 0.0732, "sql": "SELECT members.* FROM members INNER JOIN projects ON projects.id = members.project_id WHERE members.user_id = 2635 AND projects.status <> 1 AND members.project_id = 6446 ORDER BY members.id ASC LIMIT 5", "before_plan": [["Limit  (cost=16.63..16.63 rows=1 width=21)"], ["  ->  Sort  (cost=16.63..16.63 rows=1 width=21)"], ["        Sort Key: members.id"], ["        ->  Nested Loop  (cost=0.57..16.62 rows=1 width=21)"], ["              ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=21)"], ["                    Index Cond: ((user_id = 2635) AND (project_id = 6446))"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = 6446)"], ["                    Filter: (status <> 1)"]], "after_plan": [["Limit  (cost=16.63..16.63 rows=1 width=21)"], ["  ->  Sort  (cost=16.63..16.63 rows=1 width=21)"], ["        Sort Key: members.id"], ["        ->  Nested Loop  (cost=0.57..16.62 rows=1 width=21)"], ["              ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=21)"], ["                    Index Cond: ((user_id = 2635) AND (project_id = 6446))"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = 6446)"], ["                    Filter: (status <> 1)"]]}
{"before": 0.06420000000000001, "after": 0.06520000000000001, "sql": "SELECT members.* FROM members INNER JOIN projects ON projects.id = members.project_id WHERE members.user_id = 2973 AND projects.status <> 1 AND members.project_id IS NULL ORDER BY members.id ASC LIMIT 5", "before_plan": [["Limit  (cost=16.62..16.62 rows=1 width=21)"], ["  ->  Sort  (cost=16.62..16.62 rows=1 width=21)"], ["        Sort Key: members.id"], ["        ->  Nested Loop  (cost=0.57..16.61 rows=1 width=21)"], ["              ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=21)"], ["                    Index Cond: ((user_id = 2973) AND (project_id IS NULL))"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 1)"]], "after_plan": [["Limit  (cost=16.62..16.62 rows=1 width=21)"], ["  ->  Sort  (cost=16.62..16.62 rows=1 width=21)"], ["        Sort Key: members.id"], ["        ->  Nested Loop  (cost=0.57..16.61 rows=1 width=21)"], ["              ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=21)"], ["                    Index Cond: ((user_id = 2973) AND (project_id IS NULL))"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 1)"]]}
{"before": 0.08719999999999997, "after": 0.0712, "sql": "SELECT COUNT(*) AS count_all, changesets.commit_date AS changesets_commit_date FROM changesets WHERE repository_id = 10 AND commit_date BETWEEN '2008-10-01' AND '2009-09-20' GROUP BY changesets.commit_date", "before_plan": [["GroupAggregate  (cost=8.32..8.34 rows=1 width=12)"], ["  Group Key: commit_date"], ["  ->  Sort  (cost=8.32..8.32 rows=1 width=4)"], ["        Sort Key: commit_date"], ["        ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: ((commit_date >= '2008-10-01'::date) AND (commit_date <= '2009-09-20'::date))"]], "after_plan": [["GroupAggregate  (cost=8.32..8.34 rows=1 width=12)"], ["  Group Key: commit_date"], ["  ->  Sort  (cost=8.32..8.32 rows=1 width=4)"], ["        Sort Key: commit_date"], ["        ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.31 rows=1 width=4)"], ["              Index Cond: (repository_id = 10)"], ["              Filter: ((commit_date >= '2008-10-01'::date) AND (commit_date <= '2009-09-20'::date))"]]}
{"before": 16.676, "after": 17.2797, "sql": "SELECT COUNT(*) FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND projects.status IN ('1')", "before_plan": [["Aggregate  (cost=11716.96..11716.97 rows=1 width=8)"], ["  ->  Seq Scan on projects  (cost=12.61..11715.60 rows=541 width=0)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Aggregate  (cost=11716.96..11716.97 rows=1 width=8)"], ["  ->  Seq Scan on projects  (cost=12.61..11715.60 rows=541 width=0)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.059800000000000006, "after": 0.0531, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND projects.id = 1052 LIMIT 10", "before_plan": [["Limit  (cost=12.89..20.91 rows=1 width=395)"], ["  ->  Index Scan using projects_pkey on projects  (cost=12.89..20.91 rows=1 width=395)"], ["        Index Cond: (id = 1052)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Limit  (cost=12.89..20.91 rows=1 width=395)"], ["  ->  Index Scan using projects_pkey on projects  (cost=12.89..20.91 rows=1 width=395)"], ["        Index Cond: (id = 1052)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.07250000000000001, "after": 0.07110000000000001, "sql": "SELECT trackers.* FROM trackers INNER JOIN projects_trackers ON trackers.id = projects_trackers.tracker_id WHERE projects_trackers.project_id = 4207 AND trackers.name = 'yzeaurgvhvep' ORDER BY trackers.position ASC LIMIT 8", "before_plan": [["Limit  (cost=41.28..41.29 rows=1 width=164)"], ["  ->  Sort  (cost=41.28..41.29 rows=1 width=164)"], ["        Sort Key: trackers.\"position\""], ["        ->  Nested Loop  (cost=0.57..41.27 rows=1 width=164)"], ["              ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..8.34 rows=3 width=4)"], ["                    Index Cond: (project_id = 4207)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..8.30 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"], ["                    Filter: ((name)::text = 'yzeaurgvhvep'::text)"]], "after_plan": [["Limit  (cost=16.69..16.70 rows=1 width=164)"], ["  ->  Sort  (cost=16.69..16.70 rows=1 width=164)"], ["        Sort Key: trackers.\"position\""], ["        ->  Nested Loop  (cost=0.57..16.68 rows=1 width=164)"], ["              Join Filter: (trackers.id = projects_trackers.tracker_id)"], ["              ->  Index Scan using unique_table_trackers_field_name_cond_none on trackers  (cost=0.29..8.30 rows=1 width=164)"], ["                    Index Cond: ((name)::text = 'yzeaurgvhvep'::text)"], ["              ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..8.34 rows=3 width=4)"], ["                    Index Cond: (project_id = 4207)"]]}
{"before": 16.567500000000003, "after": 0.05219999999999999, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND projects.identifier = 'cmprnbbvtcsbwfuuroonhogzfpnlbubqtefkkrmclseiujovtzxoznpopibytmbqounotipabomxdqvblys' LIMIT 6", "before_plan": [["Limit  (cost=12.61..11715.60 rows=1 width=395)"], ["  ->  Seq Scan on projects  (cost=12.61..11715.60 rows=1 width=395)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND ((identifier)::text = 'cmprnbbvtcsbwfuuroonhogzfpnlbubqtefkkrmclseiujovtzxoznpopibytmbqounotipabomxdqvblys'::text))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Limit  (cost=13.02..21.04 rows=1 width=395)"], ["  ->  Index Scan using unique_table_projects_field_identifier_cond_none on projects  (cost=13.02..21.04 rows=1 width=395)"], ["        Index Cond: ((identifier)::text = 'cmprnbbvtcsbwfuuroonhogzfpnlbubqtefkkrmclseiujovtzxoznpopibytmbqounotipabomxdqvblys'::text)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.0672, "after": 0.0601, "sql": "SELECT projects.id, projects.name, projects.identifier, projects.lft, projects.rgt FROM projects INNER JOIN members ON projects.id = members.project_id WHERE members.user_id = 27 AND projects.status <> 1 AND projects.status = 1", "before_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=194)"], ["  ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 27)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=194)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: ((status <> 1) AND (status = 1))"]], "after_plan": [["Nested Loop  (cost=0.57..16.61 rows=1 width=194)"], ["  ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=4)"], ["        Index Cond: (user_id = 27)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=194)"], ["        Index Cond: (id = members.project_id)"], ["        Filter: ((status <> 1) AND (status = 1))"]]}
{"before": 3.0913000000000004, "after": 3.0789999999999997, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND users.status = 1 AND LOWER(email_addresses.address) IN ('redmine@somenet.foo')", "before_plan": [["Unique  (cost=316.09..316.14 rows=1 width=580)"], ["  ->  Sort  (cost=316.09..316.09 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.62..316.08 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=28 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 1)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                          Filter: (lower((address)::text) = 'redmine@somenet.foo'::text)"]], "after_plan": [["Unique  (cost=316.05..316.10 rows=1 width=580)"], ["  ->  Sort  (cost=316.05..316.05 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.62..316.04 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=28 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 1)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                          Filter: (lower((address)::text) = 'redmine@somenet.foo'::text)"]]}
{"before": 3.0635000000000003, "after": 3.0485000000000007, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND users.status = 2 AND LOWER(email_addresses.address) IN ('r@mycompanyname.com')", "before_plan": [["Unique  (cost=316.09..316.15 rows=1 width=580)"], ["  ->  Sort  (cost=316.09..316.10 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.62..316.08 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=29 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 2)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                          Filter: (lower((address)::text) = 'r@mycompanyname.com'::text)"]], "after_plan": [["Unique  (cost=316.05..316.11 rows=1 width=580)"], ["  ->  Sort  (cost=316.05..316.06 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.62..316.04 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=29 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 2)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                          Filter: (lower((address)::text) = 'r@mycompanyname.com'::text)"]]}
{"before": 0.09629999999999998, "after": 0.08839999999999998, "sql": "SELECT 1 AS one FROM projects WHERE projects.lft > 1 AND projects.rgt < 10 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) LIMIT 2", "before_plan": [["Limit  (cost=12.89..28.93 rows=1 width=4)"], ["  ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..28.93 rows=1 width=4)"], ["        Index Cond: (rgt < 10)"], ["        Filter: (is_public AND (lft > 1) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Limit  (cost=12.89..28.93 rows=1 width=4)"], ["  ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..28.93 rows=1 width=4)"], ["        Index Cond: (rgt < 10)"], ["        Filter: (is_public AND (lft > 1) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 3.0845, "after": 3.0512000000000006, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND users.status = 2 AND LOWER(email_addresses.address) IN ('testuser@example.org')", "before_plan": [["Unique  (cost=316.09..316.15 rows=1 width=580)"], ["  ->  Sort  (cost=316.09..316.10 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.62..316.08 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=29 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 2)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                          Filter: (lower((address)::text) = 'testuser@example.org'::text)"]], "after_plan": [["Unique  (cost=316.05..316.11 rows=1 width=580)"], ["  ->  Sort  (cost=316.05..316.06 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.62..316.04 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=29 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 2)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                          Filter: (lower((address)::text) = 'testuser@example.org'::text)"]]}
{"before": 4.5723, "after": 4.566, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('foo@bar.net') ORDER BY users.id ASC LIMIT 4", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'foo@bar.net'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'foo@bar.net'::text)"]]}
{"before": 4.3468, "after": 4.3733, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('newuser@foo.bar') ORDER BY users.id ASC LIMIT 10", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'newuser@foo.bar'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'newuser@foo.bar'::text)"]]}
{"before": 18.0103, "after": 18.2335, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND projects.status IN ('1') ORDER BY projects.lft ASC", "before_plan": [["Sort  (cost=11740.17..11741.52 rows=541 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Seq Scan on projects  (cost=12.61..11715.60 rows=541 width=395)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Sort  (cost=11740.17..11741.52 rows=541 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Seq Scan on projects  (cost=12.61..11715.60 rows=541 width=395)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 4.555299999999999, "after": 4.5424999999999995, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('foo@example.org') ORDER BY users.id ASC LIMIT 2", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'foo@example.org'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'foo@example.org'::text)"]]}
{"before": 4.3227, "after": 4.3478, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('foo@example.com') ORDER BY users.id ASC LIMIT 7", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'foo@example.com'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'foo@example.com'::text)"]]}
{"before": 4.277000000000001, "after": 4.3164, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('jdoe@example.net') ORDER BY users.id ASC LIMIT 2", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'jdoe@example.net'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'jdoe@example.net'::text)"]]}
{"before": 4.4886, "after": 4.3100000000000005, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('jsmith@somenet.foo') ORDER BY users.id ASC LIMIT 10", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'jsmith@somenet.foo'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'jsmith@somenet.foo'::text)"]]}
{"before": 4.366, "after": 4.3065, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('dlopper@somenet.foo') ORDER BY users.id ASC LIMIT 6", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'dlopper@somenet.foo'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'dlopper@somenet.foo'::text)"]]}
{"before": 4.2848999999999995, "after": 4.3173, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('invalid@somenet.foo') ORDER BY users.id ASC LIMIT 4", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'invalid@somenet.foo'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'invalid@somenet.foo'::text)"]]}
{"before": 4.270599999999999, "after": 4.3239, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('john.doe@somenet.foo') ORDER BY users.id ASC LIMIT 5", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'john.doe@somenet.foo'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'john.doe@somenet.foo'::text)"]]}
{"before": 4.262, "after": 4.3092999999999995, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND LOWER(email_addresses.address) IN ('anotheraddress@foo.bar') ORDER BY users.id ASC LIMIT 8", "before_plan": [["Limit  (cost=316.06..316.12 rows=1 width=580)"], ["  ->  Unique  (cost=316.06..316.12 rows=1 width=580)"], ["        ->  Sort  (cost=316.06..316.07 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..316.05 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'anotheraddress@foo.bar'::text)"]], "after_plan": [["Limit  (cost=315.99..316.05 rows=1 width=580)"], ["  ->  Unique  (cost=315.99..316.05 rows=1 width=580)"], ["        ->  Sort  (cost=315.99..315.99 rows=1 width=580)"], ["              Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.status, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["              ->  Hash Join  (cost=157.62..315.98 rows=1 width=580)"], ["                    Hash Cond: (users.id = email_addresses.user_id)"], ["                    ->  Bitmap Heap Scan on users  (cost=9.00..167.20 rows=57 width=580)"], ["                          Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                          ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                                Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    ->  Hash  (cost=148.27..148.27 rows=28 width=4)"], ["                          ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=28 width=4)"], ["                                Filter: (lower((address)::text) = 'anotheraddress@foo.bar'::text)"]]}
{"before": 0.08089999999999999, "after": 0.07749999999999999, "sql": "SELECT 1 AS one FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE members.user_id = 2623 AND projects.status <> 9 AND member_roles.role_id IN (1, 2) LIMIT 7", "before_plan": [["Limit  (cost=0.85..24.92 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.85..24.92 rows=1 width=4)"], ["        ->  Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["              ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                    Index Cond: (user_id = 2623)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"], ["        ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (member_id = members.id)"], ["              Filter: (role_id = ANY ('{1,2}'::integer[]))"]], "after_plan": [["Limit  (cost=0.85..24.92 rows=1 width=4)"], ["  ->  Nested Loop  (cost=0.85..24.92 rows=1 width=4)"], ["        ->  Nested Loop  (cost=0.57..16.61 rows=1 width=4)"], ["              ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                    Index Cond: (user_id = 2623)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"], ["        ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=4)"], ["              Index Cond: (member_id = members.id)"], ["              Filter: (role_id = ANY ('{1,2}'::integer[]))"]]}
{"before": 0.0696, "after": 0.06910000000000001, "sql": "SELECT projects.* FROM projects INNER JOIN wikis ON wikis.project_id = projects.id WHERE projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'wiki') IS NOT NULL AND projects.id IN (1, 5)", "before_plan": [["Nested Loop  (cost=0.57..37.93 rows=1 width=395)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..33.61 rows=1 width=395)"], ["        Index Cond: (id = ANY ('{1,5}'::integer[]))"], ["        Filter: ((status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'wiki'::text)"], ["  ->  Index Only Scan using wikis_project_id on wikis  (cost=0.29..4.30 rows=1 width=4)"], ["        Index Cond: (project_id = projects.id)"]], "after_plan": [["Nested Loop  (cost=0.57..37.92 rows=1 width=395)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..33.61 rows=1 width=395)"], ["        Index Cond: (id = ANY ('{1,5}'::integer[]))"], ["        Filter: ((status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'wiki'::text)"], ["  ->  Index Only Scan using unique_table_wikis_field_project_id_cond_none on wikis  (cost=0.29..4.30 rows=1 width=4)"], ["        Index Cond: (project_id = projects.id)"]]}
{"before": 0.22490000000000002, "after": 0.23270000000000005, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 6 AND projects.rgt > 7 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..33.06 rows=1 width=395)"], ["  Index Cond: (lft < 6)"], ["  Filter: (is_public AND (rgt > 7) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..33.06 rows=1 width=395)"], ["  Index Cond: (lft < 6)"], ["  Filter: (is_public AND (rgt > 7) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.25759999999999994, "after": 0.2727, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 8 AND projects.rgt > 9 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..41.06 rows=1 width=395)"], ["  Index Cond: (lft < 8)"], ["  Filter: (is_public AND (rgt > 9) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..41.06 rows=1 width=395)"], ["  Index Cond: (lft < 8)"], ["  Filter: (is_public AND (rgt > 9) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.22980000000000006, "after": 0.23090000000000002, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 6 AND projects.rgt > 7 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (7, 12)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..33.06 rows=1 width=395)"], ["  Index Cond: (lft < 6)"], ["  Filter: (is_public AND (rgt > 7) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{7,12}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..33.06 rows=1 width=395)"], ["  Index Cond: (lft < 6)"], ["  Filter: (is_public AND (rgt > 7) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{7,12}'::integer[]))"]]}
{"before": 0.1622, "after": 0.1581, "sql": "SELECT projects.* FROM projects WHERE projects.lft > 1 AND projects.rgt < 10 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Sort  (cost=28.94..28.95 rows=1 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..28.93 rows=1 width=395)"], ["        Index Cond: (rgt < 10)"], ["        Filter: (is_public AND (lft > 1) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Sort  (cost=28.94..28.95 rows=1 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..28.93 rows=1 width=395)"], ["        Index Cond: (rgt < 10)"], ["        Filter: (is_public AND (lft > 1) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.36439999999999995, "after": 0.36739999999999995, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 12 AND projects.rgt > 13 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..53.07 rows=1 width=395)"], ["  Index Cond: (lft < 12)"], ["  Filter: (is_public AND (rgt > 13) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..53.07 rows=1 width=395)"], ["  Index Cond: (lft < 12)"], ["  Filter: (is_public AND (rgt > 13) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.39740000000000003, "after": 0.40360000000000007, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 14 AND projects.rgt > 15 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..57.08 rows=1 width=395)"], ["  Index Cond: (lft < 14)"], ["  Filter: (is_public AND (rgt > 15) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..57.08 rows=1 width=395)"], ["  Index Cond: (lft < 14)"], ["  Filter: (is_public AND (rgt > 15) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.40099999999999997, "after": 0.4124, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 17 AND projects.rgt > 18 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..65.09 rows=1 width=395)"], ["  Index Cond: (lft < 17)"], ["  Filter: (is_public AND (rgt > 18) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..65.09 rows=1 width=395)"], ["  Index Cond: (lft < 17)"], ["  Filter: (is_public AND (rgt > 18) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.4239, "after": 0.4311999999999999, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 18 AND projects.rgt > 19 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..73.09 rows=1 width=395)"], ["  Index Cond: (lft < 18)"], ["  Filter: (is_public AND (rgt > 19) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..73.09 rows=1 width=395)"], ["  Index Cond: (lft < 18)"], ["  Filter: (is_public AND (rgt > 19) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.4102, "after": 0.41640000000000005, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 16 AND projects.rgt > 17 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..65.09 rows=1 width=395)"], ["  Index Cond: (lft < 16)"], ["  Filter: (is_public AND (rgt > 17) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..65.09 rows=1 width=395)"], ["  Index Cond: (lft < 16)"], ["  Filter: (is_public AND (rgt > 17) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.4159, "after": 0.4081, "sql": "SELECT projects.* FROM projects WHERE projects.lft < 15 AND projects.rgt > 16 AND projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) ORDER BY projects.lft ASC", "before_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..57.08 rows=1 width=395)"], ["  Index Cond: (lft < 15)"], ["  Filter: (is_public AND (rgt > 16) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Index Scan using index_projects_on_lft on projects  (cost=13.02..57.08 rows=1 width=395)"], ["  Index Cond: (lft < 15)"], ["  Filter: (is_public AND (rgt > 16) AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 4.881099999999999, "after": 4.857899999999999, "sql": "SELECT DISTINCT users.* FROM users INNER JOIN email_addresses ON email_addresses.user_id = users.id WHERE users.type IN ('User', 'AnonymousUser') AND users.status = 2 AND LOWER(email_addresses.address) IN ('redmine@somenet.foo', 'dlopper@somenet.foo')", "before_plan": [["Unique  (cost=316.46..316.51 rows=1 width=580)"], ["  ->  Sort  (cost=316.46..316.46 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.98..316.45 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=29 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 2)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=57 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=57 width=4)"], ["                          Filter: (lower((address)::text) = ANY ('{redmine@somenet.foo,dlopper@somenet.foo}'::text[]))"]], "after_plan": [["Unique  (cost=316.41..316.47 rows=1 width=580)"], ["  ->  Sort  (cost=316.41..316.42 rows=1 width=580)"], ["        Sort Key: users.id, users.login, users.hashed_password, users.firstname, users.lastname, users.admin, users.last_login_on, users.language, users.auth_source_id, users.created_on, users.updated_on, users.type, users.identity_url, users.mail_notification, users.salt, users.must_change_passwd, users.passwd_changed_on, users.twofa_scheme, users.twofa_totp_key, users.twofa_totp_last_used_at"], ["        ->  Hash Join  (cost=157.98..316.40 rows=1 width=580)"], ["              Hash Cond: (users.id = email_addresses.user_id)"], ["              ->  Bitmap Heap Scan on users  (cost=8.99..167.34 rows=29 width=580)"], ["                    Recheck Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["                    Filter: (status = 2)"], ["                    ->  Bitmap Index Scan on index_users_on_type  (cost=0.00..8.98 rows=57 width=0)"], ["                          Index Cond: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"], ["              ->  Hash  (cost=148.27..148.27 rows=57 width=4)"], ["                    ->  Seq Scan on email_addresses  (cost=0.00..148.27 rows=57 width=4)"], ["                          Filter: (lower((address)::text) = ANY ('{redmine@somenet.foo,dlopper@somenet.foo}'::text[]))"]]}
{"before": 0.09529999999999998, "after": 0.09689999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 5)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 5)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 5)"]]}
{"before": 0.09559999999999999, "after": 0.09409999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 1)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 1)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 1)"]]}
{"before": 0.09429999999999998, "after": 0.09499999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 3)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 3)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 3)"]]}
{"before": 0.09329999999999998, "after": 0.09419999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 4)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 4)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 4)"]]}
{"before": 0.09289999999999998, "after": 0.09619999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 8)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 8)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 8)"]]}
{"before": 0.09459999999999999, "after": 0.09469999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 2)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"]]}
{"before": 0.09659999999999999, "after": 0.09669999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 6)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 6)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 6)"]]}
{"before": 0.09709999999999999, "after": 0.09739999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 9)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 9)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 9)"]]}
{"before": 0.09309999999999999, "after": 0.09699999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 7)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 7)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 7)"]]}
{"before": 0.09279999999999998, "after": 0.09419999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 20)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 20)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 20)"]]}
{"before": 0.09529999999999998, "after": 0.09709999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 50)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 50)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 50)"]]}
{"before": 0.09279999999999998, "after": 0.09449999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 36)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 36)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 36)"]]}
{"before": 0.09379999999999998, "after": 0.09519999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 67)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 67)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 67)"]]}
{"before": 0.09829999999999998, "after": 0.09659999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 38)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 38)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 38)"]]}
{"before": 0.09359999999999999, "after": 0.09509999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 11)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 11)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 11)"]]}
{"before": 0.09649999999999999, "after": 0.09639999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 48)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 48)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 48)"]]}
{"before": 0.09299999999999999, "after": 0.09549999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 56)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 56)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 56)"]]}
{"before": 0.09549999999999999, "after": 0.09409999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 18)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 18)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 18)"]]}
{"before": 0.09359999999999999, "after": 0.09699999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 51)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 51)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 51)"]]}
{"before": 0.09249999999999999, "after": 0.09419999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 26)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 26)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 26)"]]}
{"before": 0.09399999999999999, "after": 0.09369999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 31)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 31)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 31)"]]}
{"before": 0.09349999999999999, "after": 0.09499999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 17)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 17)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 17)"]]}
{"before": 0.09409999999999999, "after": 0.09409999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 43)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 43)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 43)"]]}
{"before": 0.09569999999999998, "after": 0.09629999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 37)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 37)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 37)"]]}
{"before": 0.09299999999999999, "after": 0.09469999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 64)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 64)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 64)"]]}
{"before": 0.09509999999999999, "after": 0.09439999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 27)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 27)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 27)"]]}
{"before": 0.09419999999999998, "after": 0.09539999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 21)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 21)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 21)"]]}
{"before": 0.09249999999999999, "after": 0.09379999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 58)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 58)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 58)"]]}
{"before": 0.09299999999999999, "after": 0.09469999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 22)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 22)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 22)"]]}
{"before": 0.09579999999999998, "after": 0.09409999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 29)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 29)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 29)"]]}
{"before": 0.09369999999999998, "after": 0.09709999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 46)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 46)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 46)"]]}
{"before": 0.09429999999999998, "after": 0.09379999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 44)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 44)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 44)"]]}
{"before": 0.09529999999999998, "after": 0.09529999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 19)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 19)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 19)"]]}
{"before": 0.09359999999999999, "after": 0.09479999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 41)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 41)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 41)"]]}
{"before": 0.09899999999999999, "after": 0.09409999999999999, "sql": "SELECT COUNT(*) AS count_all, commit_date AS commit_date FROM changes INNER JOIN changesets ON changesets.id = changes.changeset_id WHERE changesets.repository_id = 10 AND changesets.commit_date BETWEEN '2008-10-01' AND '2009-09-20' GROUP BY commit_date", "before_plan": [["GroupAggregate  (cost=16.66..16.68 rows=1 width=12)"], ["  Group Key: changesets.commit_date"], ["  ->  Sort  (cost=16.66..16.66 rows=1 width=4)"], ["        Sort Key: changesets.commit_date"], ["        ->  Nested Loop  (cost=0.57..16.65 rows=1 width=4)"], ["              ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.31 rows=1 width=8)"], ["                    Index Cond: (repository_id = 10)"], ["                    Filter: ((commit_date >= '2008-10-01'::date) AND (commit_date <= '2009-09-20'::date))"], ["              ->  Index Only Scan using changesets_changeset_id on changes  (cost=0.29..8.32 rows=2 width=4)"], ["                    Index Cond: (changeset_id = changesets.id)"]], "after_plan": [["GroupAggregate  (cost=16.66..16.68 rows=1 width=12)"], ["  Group Key: changesets.commit_date"], ["  ->  Sort  (cost=16.66..16.66 rows=1 width=4)"], ["        Sort Key: changesets.commit_date"], ["        ->  Nested Loop  (cost=0.57..16.65 rows=1 width=4)"], ["              ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.31 rows=1 width=8)"], ["                    Index Cond: (repository_id = 10)"], ["                    Filter: ((commit_date >= '2008-10-01'::date) AND (commit_date <= '2009-09-20'::date))"], ["              ->  Index Only Scan using changesets_changeset_id on changes  (cost=0.29..8.32 rows=2 width=4)"], ["                    Index Cond: (changeset_id = changesets.id)"]]}
{"before": 0.09529999999999998, "after": 0.09489999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 35)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 35)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 35)"]]}
{"before": 0.09539999999999998, "after": 0.09399999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 28)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 28)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 28)"]]}
{"before": 0.09379999999999998, "after": 0.09359999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 14)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]]}
{"before": 0.09359999999999999, "after": 0.09489999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 34)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 34)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 34)"]]}
{"before": 0.09479999999999998, "after": 0.09419999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 49)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 49)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 49)"]]}
{"before": 0.09249999999999999, "after": 0.09409999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 52)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 52)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 52)"]]}
{"before": 0.09299999999999999, "after": 0.09659999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 65)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 65)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 65)"]]}
{"before": 0.09369999999999998, "after": 0.10029999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 33)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 33)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 33)"]]}
{"before": 0.09289999999999998, "after": 0.09479999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 66)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 66)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 66)"]]}
{"before": 0.09269999999999998, "after": 0.09419999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 72)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 72)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 72)"]]}
{"before": 0.09529999999999998, "after": 0.09489999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 71)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 71)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 71)"]]}
{"before": 17.2917, "after": 17.795899999999996, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND projects.status IN ('1') ORDER BY projects.created_on DESC LIMIT 6", "before_plan": [["Limit  (cost=11725.30..11725.32 rows=6 width=395)"], ["  ->  Sort  (cost=11725.30..11726.65 rows=541 width=395)"], ["        Sort Key: projects.created_on DESC"], ["        ->  Seq Scan on projects  (cost=12.61..11715.60 rows=541 width=395)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Limit  (cost=11725.30..11725.32 rows=6 width=395)"], ["  ->  Sort  (cost=11725.30..11726.65 rows=541 width=395)"], ["        Sort Key: projects.created_on DESC"], ["        ->  Seq Scan on projects  (cost=12.61..11715.60 rows=541 width=395)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.09519999999999998, "after": 0.09599999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 62)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 62)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 62)"]]}
{"before": 0.09499999999999999, "after": 0.09659999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 40)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 40)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 40)"]]}
{"before": 0.09289999999999998, "after": 0.09489999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 10)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 10)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 10)"]]}
{"before": 0.09309999999999999, "after": 0.09559999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 23)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 23)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 23)"]]}
{"before": 0.09329999999999998, "after": 0.09459999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 42)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 42)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 42)"]]}
{"before": 0.09459999999999999, "after": 0.09399999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 12)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]]}
{"before": 0.09589999999999999, "after": 0.09599999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 24)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 24)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 24)"]]}
{"before": 0.09539999999999998, "after": 0.09459999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 54)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 54)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 54)"]]}
{"before": 0.09279999999999998, "after": 0.09429999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 45)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 45)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 45)"]]}
{"before": 0.09269999999999998, "after": 0.09429999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 30)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 30)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 30)"]]}
{"before": 0.09269999999999998, "after": 0.09849999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 53)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 53)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 53)"]]}
{"before": 0.09299999999999999, "after": 0.09819999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 16)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 16)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 16)"]]}
{"before": 0.09559999999999999, "after": 0.09459999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 32)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 32)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 32)"]]}
{"before": 0.09429999999999998, "after": 0.09599999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 13)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]]}
{"before": 0.09289999999999998, "after": 0.09629999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 15)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 15)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 15)"]]}
{"before": 0.09329999999999998, "after": 0.09529999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 25)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 25)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 25)"]]}
{"before": 0.09359999999999999, "after": 0.09689999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 39)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 39)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 39)"]]}
{"before": 0.09299999999999999, "after": 0.09389999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 201)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 201)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 201)"]]}
{"before": 0.09519999999999998, "after": 0.09509999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 202)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 202)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR (hashed SubPlan 1))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 202)"]]}
{"before": 24.1214, "after": 24.4062, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND (LOWER(identifier) LIKE LOWER('%coo%') OR LOWER(name) LIKE LOWER('%coo%'))", "before_plan": [["Seq Scan on projects  (cost=12.61..11790.60 rows=128 width=395)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND ((lower((identifier)::text) ~~ '%coo%'::text) OR (lower((name)::text) ~~ '%coo%'::text)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Seq Scan on projects  (cost=12.61..11790.60 rows=128 width=395)"], ["  Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND ((lower((identifier)::text) ~~ '%coo%'::text) OR (lower((name)::text) ~~ '%coo%'::text)))"], ["  SubPlan 1"], ["    ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["          Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.1226, "after": 0.11800000000000002, "sql": "SELECT projects.* FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND projects.status IN ('1') ORDER BY projects.lft ASC LIMIT 7 OFFSET 1", "before_plan": [["Limit  (cost=106.40..760.11 rows=7 width=395)"], ["  ->  Index Scan using index_projects_on_lft on projects  (cost=13.02..50535.48 rows=541 width=395)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["        SubPlan 1"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]], "after_plan": [["Limit  (cost=106.40..760.11 rows=7 width=395)"], ["  ->  Index Scan using index_projects_on_lft on projects  (cost=13.02..50535.48 rows=541 width=395)"], ["        Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)) AND (status = 1))"], ["        SubPlan 1"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"]]}
{"before": 0.1667, "after": 0.15830000000000002, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 5", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 5)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 5)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.16750000000000004, "after": 0.1596, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 3", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 3)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 3)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1708, "after": 0.1669, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 1", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 1)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 1)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.14010000000000003, "after": 0.13620000000000002, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 9", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 9)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 9)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.18449999999999997, "after": 0.1789, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 2", "before_plan": [["Unique  (cost=57.73..57.79 rows=2 width=745)"], ["  ->  Sort  (cost=57.73..57.74 rows=2 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=5.13..57.72 rows=2 width=745)"], ["              ->  Nested Loop  (cost=4.87..55.48 rows=2 width=4)"], ["                    ->  Nested Loop  (cost=4.59..38.86 rows=2 width=4)"], ["                          ->  Bitmap Heap Scan on members  (cost=4.31..13.94 rows=3 width=8)"], ["                                Recheck Cond: (user_id = 2)"], ["                                ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=3 width=0)"], ["                                      Index Cond: (user_id = 2)"], ["                          ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                                Index Cond: (id = members.project_id)"], ["                                Filter: (status <> 9)"], ["                    ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                          Index Cond: (member_id = members.id)"], ["              ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                    Index Cond: (id = member_roles.role_id)"]], "after_plan": [["Unique  (cost=57.73..57.79 rows=2 width=745)"], ["  ->  Sort  (cost=57.73..57.74 rows=2 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=5.13..57.72 rows=2 width=745)"], ["              ->  Nested Loop  (cost=4.87..55.48 rows=2 width=4)"], ["                    ->  Nested Loop  (cost=4.59..38.86 rows=2 width=4)"], ["                          ->  Bitmap Heap Scan on members  (cost=4.31..13.94 rows=3 width=8)"], ["                                Recheck Cond: (user_id = 2)"], ["                                ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=3 width=0)"], ["                                      Index Cond: (user_id = 2)"], ["                          ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                                Index Cond: (id = members.project_id)"], ["                                Filter: (status <> 9)"], ["                    ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                          Index Cond: (member_id = members.id)"], ["              ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                    Index Cond: (id = member_roles.role_id)"]]}
{"before": 0.14009999999999997, "after": 0.13440000000000002, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 4", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 4)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 4)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.13820000000000005, "after": 0.1315, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 6", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 6)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 6)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1416, "after": 0.1322, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 7", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 7)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 7)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1748, "after": 0.18109999999999998, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 74", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 74)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 74)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1739, "after": 0.1692, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 96", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 96)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 96)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1692, "after": 0.1643, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 28", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 28)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 28)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.186, "after": 0.17779999999999999, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 65", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 65)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 65)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.16599999999999998, "after": 0.1605, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 59", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 59)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 59)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1691, "after": 0.1627, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 69", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 69)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 69)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.17050000000000004, "after": 0.1644, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 29", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 29)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 29)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1748, "after": 0.1637, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 73", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 73)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 73)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.16909999999999997, "after": 0.1687, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 64", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 64)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 64)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.17840000000000003, "after": 0.1659, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 142", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 142)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 142)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1794, "after": 0.1683, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 117", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 117)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 117)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.16979999999999998, "after": 0.1645, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 118", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 118)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 118)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1744, "after": 0.1673, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 115", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 115)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 115)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1737, "after": 0.16839999999999997, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 102", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 102)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 102)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1853, "after": 0.176, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 116", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 116)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 116)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.17379999999999998, "after": 0.16599999999999998, "sql": "SELECT DISTINCT roles.* FROM roles INNER JOIN member_roles ON member_roles.role_id = roles.id INNER JOIN members ON members.id = member_roles.member_id INNER JOIN projects ON projects.id = members.project_id WHERE projects.status <> 9 AND members.user_id = 129", "before_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 129)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]], "after_plan": [["Unique  (cost=26.17..26.21 rows=1 width=745)"], ["  ->  Sort  (cost=26.17..26.18 rows=1 width=745)"], ["        Sort Key: roles.id, roles.name, roles.\"position\", roles.assignable, roles.builtin, roles.permissions, roles.issues_visibility, roles.users_visibility, roles.time_entries_visibility, roles.all_roles_managed, roles.settings"], ["        ->  Nested Loop  (cost=1.11..26.16 rows=1 width=745)"], ["              ->  Nested Loop  (cost=0.82..17.86 rows=1 width=749)"], ["                    ->  Nested Loop  (cost=0.56..16.61 rows=1 width=8)"], ["                          ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (user_id = 129)"], ["                          ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["                                Index Cond: (member_id = members.id)"], ["                    ->  Index Scan using roles_pkey on roles  (cost=0.26..1.00 rows=1 width=745)"], ["                          Index Cond: (id = member_roles.role_id)"], ["              ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=4)"], ["                    Index Cond: (id = members.project_id)"], ["                    Filter: (status <> 9)"]]}
{"before": 0.1006, "after": 0.10500000000000001, "sql": "SELECT custom_fields.id, role_id FROM custom_fields INNER JOIN custom_fields_roles ON custom_fields_roles.custom_field_id = custom_fields.id INNER JOIN roles ON roles.id = custom_fields_roles.role_id WHERE custom_fields.type IN ('IssueCustomField') AND custom_fields.visible = True", "before_plan": [["Merge Join  (cost=287.22..288.08 rows=5 width=8)"], ["  Merge Cond: (custom_fields_roles.custom_field_id = custom_fields.id)"], ["  ->  Nested Loop  (cost=0.54..2913.82 rows=29983 width=8)"], ["        Join Filter: (custom_fields_roles.role_id = roles.id)"], ["        ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles  (cost=0.29..838.59 rows=29983 width=8)"], ["        ->  Materialize  (cost=0.26..126.36 rows=5 width=4)"], ["              ->  Index Only Scan using roles_pkey on roles  (cost=0.26..126.33 rows=5 width=4)"], ["  ->  Sort  (cost=286.67..286.68 rows=5 width=4)"], ["        Sort Key: custom_fields.id"], ["        ->  Bitmap Heap Scan on custom_fields  (cost=268.34..286.61 rows=5 width=4)"], ["              Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["              Filter: visible"], ["              ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["                    Index Cond: ((type)::text = 'IssueCustomField'::text)"]], "after_plan": [["Merge Join  (cost=27.09..27.96 rows=5 width=8)"], ["  Merge Cond: (custom_fields_roles.custom_field_id = custom_fields.id)"], ["  ->  Nested Loop  (cost=0.54..2913.82 rows=29983 width=8)"], ["        Join Filter: (custom_fields_roles.role_id = roles.id)"], ["        ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles  (cost=0.29..838.59 rows=29983 width=8)"], ["        ->  Materialize  (cost=0.26..126.36 rows=5 width=4)"], ["              ->  Index Only Scan using roles_pkey on roles  (cost=0.26..126.33 rows=5 width=4)"], ["  ->  Sort  (cost=26.54..26.55 rows=5 width=4)"], ["        Sort Key: custom_fields.id"], ["        ->  Bitmap Heap Scan on custom_fields  (cost=8.22..26.48 rows=5 width=4)"], ["              Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["              Filter: visible"], ["              ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["                    Index Cond: ((type)::text = 'IssueCustomField'::text)"]]}
{"before": 0.10049999999999999, "after": 0.09469999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 9)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 9)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 9)"]]}
{"before": 0.09889999999999999, "after": 0.09599999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 3)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 3)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 3)"]]}
{"before": 0.09819999999999998, "after": 0.09429999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 1)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 1)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 1)"]]}
{"before": 0.09889999999999999, "after": 0.09659999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 7)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 7)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 7)"]]}
{"before": 0.09669999999999998, "after": 0.09419999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 13)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]]}
{"before": 0.09829999999999998, "after": 0.09599999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 15)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 15)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 15)"]]}
{"before": 0.09699999999999999, "after": 0.09439999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 11)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 11)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 11)"]]}
{"before": 0.09769999999999998, "after": 0.09699999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 14)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]]}
{"before": 0.09739999999999999, "after": 0.09539999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 12)) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.91..339.92 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]], "after_plan": [["Sort  (cost=79.79..79.80 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]]}
{"before": 0.08609999999999998, "after": 0.0822, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 54)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 54)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 54)"]]}
{"before": 0.09539999999999998, "after": 0.09309999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 34)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 34)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 34)"]]}
{"before": 0.08349999999999999, "after": 0.0853, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 53)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 53)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 53)"]]}
{"before": 0.08549999999999999, "after": 0.08559999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 56)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 56)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 56)"]]}
{"before": 0.08569999999999998, "after": 0.0818, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 45)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 45)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 45)"]]}
{"before": 0.09759999999999999, "after": 0.09309999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 62)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 62)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 62)"]]}
{"before": 0.09729999999999998, "after": 0.09259999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 41)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 41)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 41)"]]}
{"before": 0.09529999999999998, "after": 0.09549999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 29)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 29)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 29)"]]}
{"before": 0.09799999999999999, "after": 0.09309999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 19)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 19)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 19)"]]}
{"before": 0.08319999999999998, "after": 0.08249999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 30)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 30)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 30)"]]}
{"before": 0.086, "after": 0.0822, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 32)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 32)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 32)"]]}
{"before": 0.08459999999999998, "after": 0.0841, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 36)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 36)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 36)"]]}
{"before": 0.09799999999999999, "after": 0.09589999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 22)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 22)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 22)"]]}
{"before": 0.08299999999999999, "after": 0.08309999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 27)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 27)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 27)"]]}
{"before": 0.08299999999999999, "after": 0.08209999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 33)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 33)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 33)"]]}
{"before": 0.09459999999999999, "after": 0.09299999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 26)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 26)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 26)"]]}
{"before": 0.09629999999999998, "after": 0.09369999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 48)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 48)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 48)"]]}
{"before": 0.09569999999999998, "after": 0.09529999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 38)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 38)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 38)"]]}
{"before": 0.09579999999999998, "after": 0.09509999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 13)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]]}
{"before": 0.0865, "after": 0.08209999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 18)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 18)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 18)"]]}
{"before": 0.08449999999999999, "after": 0.08449999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 58)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 58)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 58)"]]}
{"before": 0.09529999999999998, "after": 0.09309999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 14)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]]}
{"before": 0.09579999999999998, "after": 0.09429999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 16)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 16)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 16)"]]}
{"before": 0.09759999999999999, "after": 0.09379999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 28)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 28)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 28)"]]}
{"before": 0.08379999999999999, "after": 0.0849, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 39)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 39)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 39)"]]}
{"before": 0.09509999999999999, "after": 0.09369999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 46)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 46)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 46)"]]}
{"before": 0.09519999999999998, "after": 0.09529999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 12)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]]}
{"before": 0.18960000000000002, "after": 0.1665, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (2, 12))) AND enabled_modules.name = 'boards' LIMIT 7", "before_plan": [["Limit  (cost=12.94..78.51 rows=7 width=4)"], ["  ->  Nested Loop  (cost=12.94..15712.23 rows=1676 width=4)"], ["        ->  Seq Scan on projects  (cost=12.64..11690.65 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.63 rows=4 width=4)"], ["                      Index Cond: (user_id = ANY ('{2,12}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'boards'::text)"]], "after_plan": [["Limit  (cost=13.06..73.04 rows=7 width=4)"], ["  ->  Nested Loop  (cost=13.06..14373.96 rows=1676 width=4)"], ["        ->  Seq Scan on projects  (cost=12.64..11690.65 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.63 rows=4 width=4)"], ["                      Index Cond: (user_id = ANY ('{2,12}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'boards'::text) AND (project_id = projects.id))"]]}
{"before": 0.119, "after": 0.1177, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 8 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.16..59.81 rows=2 width=12)"], ["  ->  Nested Loop  (cost=8.87..43.19 rows=2 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.59..18.23 rows=3 width=12)"], ["              Recheck Cond: ((user_id = 8) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.59..8.59 rows=3 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=2 width=0)"], ["                          Index Cond: (user_id = 8)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 8) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.16..59.81 rows=2 width=12)"], ["  ->  Nested Loop  (cost=8.87..43.19 rows=2 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.59..18.23 rows=3 width=12)"], ["              Recheck Cond: ((user_id = 8) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.59..8.59 rows=3 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=2 width=0)"], ["                          Index Cond: (user_id = 8)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 8) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1083, "after": 0.10469999999999999, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 3 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 3) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 3)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 3) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 3) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 3)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 3) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.06359999999999999, "after": 0.07150000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 6 OR projects.is_public = True AND members.user_id = 13)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 6) OR (user_id = 13))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 6)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 13)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 6) OR (is_public AND (members.user_id = 13))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 6) OR (user_id = 13))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 6)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 13)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 6) OR (is_public AND (members.user_id = 13))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1278, "after": 0.12250000000000001, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (7, 12))) AND enabled_modules.name = 'time_tracking' LIMIT 2", "before_plan": [["Limit  (cost=12.90..31.73 rows=2 width=4)"], ["  ->  Nested Loop  (cost=12.90..15712.19 rows=1667 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'time_tracking'::text)"]], "after_plan": [["Limit  (cost=13.02..30.25 rows=2 width=4)"], ["  ->  Nested Loop  (cost=13.02..14373.92 rows=1667 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'time_tracking'::text) AND (project_id = projects.id))"]]}
{"before": 0.1155, "after": 0.1147, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 2 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.16..70.86 rows=2 width=12)"], ["  ->  Nested Loop  (cost=8.88..54.24 rows=2 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.60..20.95 rows=4 width=12)"], ["              Recheck Cond: ((user_id = 2) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.60..8.60 rows=4 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=3 width=0)"], ["                          Index Cond: (user_id = 2)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 2) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.16..70.86 rows=2 width=12)"], ["  ->  Nested Loop  (cost=8.88..54.24 rows=2 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.60..20.95 rows=4 width=12)"], ["              Recheck Cond: ((user_id = 2) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.60..8.60 rows=4 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=3 width=0)"], ["                          Index Cond: (user_id = 2)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 2) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1478, "after": 0.1346, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13))) AND enabled_modules.name = 'gantt' LIMIT 4", "before_plan": [["Limit  (cost=12.90..52.02 rows=4 width=4)"], ["  ->  Nested Loop  (cost=12.90..15712.19 rows=1605 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{6,13}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'gantt'::text)"]], "after_plan": [["Limit  (cost=13.02..48.81 rows=4 width=4)"], ["  ->  Nested Loop  (cost=13.02..14373.92 rows=1605 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{6,13}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'gantt'::text) AND (project_id = projects.id))"]]}
{"before": 0.1907, "after": 0.1699, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (4, 12))) AND enabled_modules.name = 'time_tracking' LIMIT 8", "before_plan": [["Limit  (cost=12.90..88.24 rows=8 width=4)"], ["  ->  Nested Loop  (cost=12.90..15712.19 rows=1667 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{4,12}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'time_tracking'::text)"]], "after_plan": [["Limit  (cost=13.02..81.94 rows=8 width=4)"], ["  ->  Nested Loop  (cost=13.02..14373.92 rows=1667 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{4,12}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'time_tracking'::text) AND (project_id = projects.id))"]]}
{"before": 0.16, "after": 0.1487, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (9, 12))) AND enabled_modules.name = 'issue_tracking' LIMIT 5", "before_plan": [["Limit  (cost=12.90..62.24 rows=5 width=4)"], ["  ->  Nested Loop  (cost=12.90..15712.19 rows=1591 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{9,12}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'issue_tracking'::text)"]], "after_plan": [["Limit  (cost=13.02..58.15 rows=5 width=4)"], ["  ->  Nested Loop  (cost=13.02..14373.92 rows=1591 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{9,12}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'issue_tracking'::text) AND (project_id = projects.id))"]]}
{"before": 0.088, "after": 0.08969999999999997, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 9 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 9) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 9)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 9) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 9) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 9)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 9) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11210000000000002, "after": 0.11000000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 1 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 1) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 1)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 1) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 1) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 1)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 1) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.09109999999999999, "after": 0.08859999999999998, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 7 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 7) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 7)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 7) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 7) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 7)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 7) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.08509999999999998, "after": 0.08899999999999998, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 4 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 4) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 4)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 4) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 4) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 4)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 4) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11039999999999998, "after": 0.11300000000000002, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 54 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 54) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 54)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 54) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 54) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 54)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 54) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11560000000000001, "after": 0.11910000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 65 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 65) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 65)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 65) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 65) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 65)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 65) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.17639999999999997, "after": 0.1611, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (74, 12))) AND enabled_modules.name = 'documents' LIMIT 6", "before_plan": [["Limit  (cost=12.90..71.70 rows=6 width=4)"], ["  ->  Nested Loop  (cost=12.90..15712.19 rows=1602 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{74,12}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'documents'::text)"]], "after_plan": [["Limit  (cost=13.02..66.81 rows=6 width=4)"], ["  ->  Nested Loop  (cost=13.02..14373.92 rows=1602 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{74,12}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'documents'::text) AND (project_id = projects.id))"]]}
{"before": 0.1092, "after": 0.1177, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 29 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 29) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 29)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 29) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 29) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 29)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 29) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11199999999999999, "after": 0.1167, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 95 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 95) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 95)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 95) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 95) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 95)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 95) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.10500000000000001, "after": 0.1045, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 36 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 36) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 36)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 36) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 36) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 36)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 36) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11699999999999999, "after": 0.11940000000000002, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 89 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 89) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 89)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 89) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 89) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 89)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 89) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1102, "after": 0.11170000000000002, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 96 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 96) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 96)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 96) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 96) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 96)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 96) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11420000000000001, "after": 0.11300000000000002, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 73 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 73) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 73)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 73) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 73) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 73)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 73) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11779999999999999, "after": 0.1222, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 85 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 85) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 85)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 85) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 85) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 85)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 85) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.10729999999999999, "after": 0.11229999999999998, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 35 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 35) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 35)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 35) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 35) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 35)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 35) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1014, "after": 0.1066, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 41 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 41) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 41)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 41) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 41) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 41)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 41) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1061, "after": 0.1075, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 37 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 37) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 37)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 37) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 37) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 37)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 37) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11939999999999999, "after": 0.11950000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 30 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 30) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 30)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 30) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 30) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 30)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 30) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1028, "after": 0.1034, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 59 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 59) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 59)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 59) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 59) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 59)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 59) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11069999999999999, "after": 0.1122, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 69 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 69) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 69)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 69) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 69) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 69)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 69) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.10029999999999999, "after": 0.1062, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 39 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 39) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 39)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 39) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 39) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 39)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 39) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1055, "after": 0.1101, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 56 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 56) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 56)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 56) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 56) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 56)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 56) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.2071, "after": 0.1768, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (65, 12))) AND enabled_modules.name = 'wiki' LIMIT 9", "before_plan": [["Limit  (cost=12.90..99.69 rows=9 width=4)"], ["  ->  Nested Loop  (cost=12.90..15712.19 rows=1628 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{65,12}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'wiki'::text)"]], "after_plan": [["Limit  (cost=13.02..92.41 rows=9 width=4)"], ["  ->  Nested Loop  (cost=13.02..14373.92 rows=1628 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{65,12}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'wiki'::text) AND (project_id = projects.id))"]]}
{"before": 0.12160000000000001, "after": 0.11979999999999999, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 24 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 24) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 24)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 24) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 24) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 24)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 24) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1095, "after": 0.11059999999999999, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 74 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 74) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 74)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 74) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 74) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 74)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 74) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11680000000000001, "after": 0.1163, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 97 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 97) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 97)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 97) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 97) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 97)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 97) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11359999999999999, "after": 0.1167, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 55 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 55) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 55)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 55) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 55) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 55)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 55) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.12180000000000002, "after": 0.1163, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 84 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 84) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 84)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 84) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 84) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 84)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 84) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11150000000000002, "after": 0.12240000000000002, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 53 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 53) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 53)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 53) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 53) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 53)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 53) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1072, "after": 0.1081, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 28 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 28) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 28)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 28) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 28) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 28)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 28) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11740000000000002, "after": 0.1127, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 50 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 50) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 50)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 50) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 50) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 50)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 50) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.10469999999999999, "after": 0.11420000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 64 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 64) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 64)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 64) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 64) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 64)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 64) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1946, "after": 0.1769, "sql": "SELECT 1 AS one FROM enabled_modules WHERE enabled_modules.project_id IN (SELECT projects.id FROM projects WHERE projects.status <> 9 AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (116, 12))) AND enabled_modules.name = 'issue_tracking' LIMIT 8", "before_plan": [["Limit  (cost=12.90..91.84 rows=8 width=4)"], ["  ->  Nested Loop  (cost=12.90..15712.19 rows=1591 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{116,12}'::integer[]))"], ["        ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..2.45 rows=1 width=4)"], ["              Index Cond: (project_id = projects.id)"], ["              Filter: ((name)::text = 'issue_tracking'::text)"]], "after_plan": [["Limit  (cost=13.02..85.23 rows=8 width=4)"], ["  ->  Nested Loop  (cost=13.02..14373.92 rows=1591 width=4)"], ["        ->  Seq Scan on projects  (cost=12.61..11690.60 rows=1635 width=4)"], ["              Filter: (is_public AND (status <> 9) AND (NOT (hashed SubPlan 1)))"], ["              SubPlan 1"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{116,12}'::integer[]))"], ["        ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..1.64 rows=1 width=4)"], ["              Index Cond: ((name = 'issue_tracking'::text) AND (project_id = projects.id))"]]}
{"before": 0.1035, "after": 0.1079, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 118 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 118) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 118)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 118) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 118) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 118)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 118) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1152, "after": 0.11420000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 121 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 121) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 121)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 121) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 121) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 121)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 121) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.12279999999999999, "after": 0.1155, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 101 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 101) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 101)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 101) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 101) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 101)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 101) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11080000000000001, "after": 0.1163, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 122 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 122) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 122)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 122) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 122) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 122)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 122) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1167, "after": 0.11520000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 131 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 131) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 131)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 131) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 131) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 131)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 131) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1202, "after": 0.11780000000000002, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 119 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 119) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 119)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 119) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 119) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 119)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 119) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11479999999999999, "after": 0.1222, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 130 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 130) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 130)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 130) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 130) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 130)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 130) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1026, "after": 0.10869999999999999, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 129 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 129) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 129)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 129) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 129) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 129)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 129) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1031, "after": 0.10600000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 102 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 102) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 102)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 102) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 102) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 102)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 102) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1103, "after": 0.10529999999999999, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 123 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 123) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 123)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 123) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 123) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 123)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 123) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.10269999999999999, "after": 0.10569999999999999, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 134 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 134) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 134)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 134) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 134) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 134)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 134) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11430000000000003, "after": 0.1145, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 117 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 117) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 117)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 117) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 117) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 117)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 117) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1079, "after": 0.1062, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 141 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 141) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 141)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 141) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 141) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 141)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 141) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.10269999999999999, "after": 0.1058, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 120 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 120) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 120)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 120) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 120) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 120)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 120) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.10840000000000001, "after": 0.1093, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 116 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 116) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 116)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 116) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 116) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 116)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 116) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1061, "after": 0.1058, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 140 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 140) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 140)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 140) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 140) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 140)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 140) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1179, "after": 0.11520000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 142 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 142) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 142)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 142) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 142) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 142)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 142) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.11510000000000001, "after": 0.11250000000000002, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 113 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 113) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 113)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 113) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 113) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 113)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 113) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1045, "after": 0.10540000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 137 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 137) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 137)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 137) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 137) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 137)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 137) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1121, "after": 0.11710000000000001, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 115 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 115) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 115)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 115) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 115) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 115)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 115) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1163, "after": 0.1153, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 114 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 114) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 114)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 114) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 114) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 114)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 114) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.1165, "after": 0.1156, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id = 124 OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 124) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 124)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 124) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..40.25 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..31.94 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..15.30 rows=2 width=12)"], ["              Recheck Cond: ((user_id = 124) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=2 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 124)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id = 124) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.08619999999999998, "after": 0.08549999999999998, "sql": "SELECT members.user_id, role_id, members.project_id FROM members INNER JOIN projects ON projects.id = members.project_id INNER JOIN member_roles ON member_roles.member_id = members.id WHERE projects.status <> 9 AND (members.user_id IS NULL OR projects.is_public = True AND members.user_id = 12)", "before_plan": [["Nested Loop  (cost=9.15..29.22 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..20.91 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..12.59 rows=1 width=12)"], ["              Recheck Cond: ((user_id IS NULL) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=1 width=0)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id IS NULL)"], ["                    ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id IS NULL) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]], "after_plan": [["Nested Loop  (cost=9.15..29.22 rows=1 width=12)"], ["  ->  Nested Loop  (cost=8.87..20.91 rows=1 width=12)"], ["        ->  Bitmap Heap Scan on members  (cost=8.58..12.59 rows=1 width=12)"], ["              Recheck Cond: ((user_id IS NULL) OR (user_id = 12))"], ["              ->  BitmapOr  (cost=8.58..8.58 rows=1 width=0)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id IS NULL)"], ["                    ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.29 rows=1 width=0)"], ["                          Index Cond: (user_id = 12)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=5)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: ((status <> 9) AND ((members.user_id IS NULL) OR (is_public AND (members.user_id = 12))))"], ["  ->  Index Scan using index_member_roles_on_member_id on member_roles  (cost=0.28..8.30 rows=1 width=8)"], ["        Index Cond: (member_id = members.id)"]]}
{"before": 0.08439999999999999, "after": 0.08399999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 7)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 7)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 7)"]]}
{"before": 0.09539999999999998, "after": 0.09439999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 2)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"]]}
{"before": 0.09839999999999999, "after": 0.09439999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 3)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 3)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 3)"]]}
{"before": 0.09529999999999998, "after": 0.09829999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 9)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 9)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 9)"]]}
{"before": 0.08389999999999999, "after": 0.08409999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 22)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 22)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 22)"]]}
{"before": 0.08469999999999998, "after": 0.0824, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 20)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 20)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 20)"]]}
{"before": 0.08329999999999999, "after": 0.08199999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 18)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 18)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 18)"]]}
{"before": 0.08319999999999998, "after": 0.08289999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 45)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 45)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 45)"]]}
{"before": 0.09629999999999998, "after": 0.09559999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 40)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 40)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 40)"]]}
{"before": 0.0832, "after": 0.08259999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 29)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 29)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 29)"]]}
{"before": 0.08479999999999999, "after": 0.08399999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 16)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 16)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 16)"]]}
{"before": 0.08369999999999998, "after": 0.0828, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 17)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 17)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 17)"]]}
{"before": 0.08409999999999998, "after": 0.08419999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 38)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 38)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 38)"]]}
{"before": 0.0846, "after": 0.08349999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 27)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 27)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 27)"]]}
{"before": 0.09549999999999999, "after": 0.09409999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 46)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 46)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 46)"]]}
{"before": 0.09769999999999998, "after": 0.09879999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 44)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 44)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 44)"]]}
{"before": 0.09549999999999999, "after": 0.09779999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 15)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 15)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 15)"]]}
{"before": 0.0828, "after": 0.08459999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 11)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 11)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 11)"]]}
{"before": 0.09629999999999998, "after": 0.09639999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 41)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 41)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 41)"]]}
{"before": 0.09549999999999999, "after": 0.09539999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 13)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 13)"]]}
{"before": 0.08379999999999999, "after": 0.08359999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 23)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 23)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 23)"]]}
{"before": 0.08359999999999998, "after": 0.0827, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 21)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 21)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 21)"]]}
{"before": 0.09599999999999999, "after": 0.09479999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 43)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 43)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 43)"]]}
{"before": 0.09639999999999999, "after": 0.09549999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 39)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 39)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 39)"]]}
{"before": 0.08479999999999999, "after": 0.09279999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 36)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 36)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 36)"]]}
{"before": 0.08359999999999998, "after": 0.08639999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 28)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 28)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 28)"]]}
{"before": 0.08539999999999999, "after": 0.0822, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 19)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 19)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 19)"]]}
{"before": 0.08499999999999999, "after": 0.0823, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 31)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 31)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 31)"]]}
{"before": 0.08349999999999999, "after": 0.086, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 37)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 37)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 37)"]]}
{"before": 0.0842, "after": 0.08299999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 12)) AND custom_fields.visible = True AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (NOT is_filter) AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 12)"]]}
{"before": 0.09749999999999999, "after": 0.09519999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 14)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 14)"]]}
{"before": 0.09599999999999999, "after": 0.09469999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 42)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 42)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 42)"]]}
{"before": 0.09739999999999999, "after": 0.09489999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 35)) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=339.90..339.91 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=321.61..339.89 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 35)"]], "after_plan": [["Sort  (cost=79.78..79.78 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=61.49..79.77 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR (hashed SubPlan 1)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 35)"]]}
{"before": 0.127, "after": 0.12400000000000003, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=463.52..463.53 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..463.46 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR ((SubPlan 1) IS NOT NULL))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=203.39..203.41 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..203.34 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_for_all OR ((SubPlan 1) IS NOT NULL))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.1616, "after": 0.15399999999999997, "sql": "SELECT issues.* FROM issues INNER JOIN projects ON projects.id = issues.project_id INNER JOIN watchers ON watchers.watchable_id = issues.id AND watchers.watchable_type = 'News' WHERE projects.status <> 9 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND watchers.user_id = 1", "before_plan": [["Nested Loop  (cost=0.86..28.26 rows=1 width=262)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=262)"], ["        ->  Index Scan using watchers_user_id_type on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["              Index Cond: ((user_id = 1) AND ((watchable_type)::text = 'News'::text))"], ["        ->  Index Scan using issues_pkey on issues  (cost=0.29..8.30 rows=1 width=262)"], ["              Index Cond: (id = watchers.watchable_id)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..11.64 rows=1 width=4)"], ["        Index Cond: (id = issues.project_id)"], ["        Filter: ((status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"]], "after_plan": [["Nested Loop  (cost=0.86..28.26 rows=1 width=262)"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=262)"], ["        ->  Index Only Scan using unique_table_watchers_field_user_id_watchable_type_watchable_id on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["              Index Cond: ((user_id = 1) AND (watchable_type = 'News'::text))"], ["        ->  Index Scan using issues_pkey on issues  (cost=0.29..8.30 rows=1 width=262)"], ["              Index Cond: (id = watchers.watchable_id)"], ["  ->  Index Scan using projects_pkey on projects  (cost=0.29..11.64 rows=1 width=4)"], ["        Index Cond: (id = issues.project_id)"], ["        Filter: ((status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"]]}
{"before": 0.1272, "after": 0.13080000000000003, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND custom_fields.visible = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=463.52..463.53 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..463.46 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=203.39..203.41 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..203.34 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.10129999999999999, "after": 0.0991, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=463.48..463.49 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..463.46 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=203.36..203.37 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..203.34 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.1125, "after": 0.1055, "sql": "SELECT COUNT(*) AS count_all, custom_field_id AS custom_field_id FROM custom_fields INNER JOIN custom_fields_projects ON custom_fields_projects.custom_field_id = custom_fields.id INNER JOIN projects ON projects.id = custom_fields_projects.project_id WHERE custom_fields.type IN ('IssueCustomField') AND custom_fields.is_for_all = False GROUP BY custom_field_id", "before_plan": [["GroupAggregate  (cost=337.54..338.13 rows=34 width=12)"], ["  Group Key: custom_fields_projects.custom_field_id"], ["  ->  Sort  (cost=337.54..337.62 rows=34 width=4)"], ["        Sort Key: custom_fields_projects.custom_field_id"], ["        ->  Nested Loop  (cost=270.20..336.67 rows=34 width=4)"], ["              ->  Nested Loop  (cost=269.92..317.30 rows=34 width=8)"], ["                    ->  Bitmap Heap Scan on custom_fields  (cost=268.34..286.61 rows=3 width=4)"], ["                          Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["                          Filter: (NOT is_for_all)"], ["                          ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["                                Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["                    ->  Bitmap Heap Scan on custom_fields_projects  (cost=1.57..10.12 rows=11 width=8)"], ["                          Recheck Cond: (custom_field_id = custom_fields.id)"], ["                          ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..1.57 rows=11 width=0)"], ["                                Index Cond: (custom_field_id = custom_fields.id)"], ["              ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.57 rows=1 width=4)"], ["                    Index Cond: (id = custom_fields_projects.project_id)"]], "after_plan": [["HashAggregate  (cost=76.72..77.06 rows=34 width=12)"], ["  Group Key: custom_fields_projects.custom_field_id"], ["  ->  Nested Loop  (cost=10.08..76.55 rows=34 width=4)"], ["        ->  Nested Loop  (cost=9.79..57.18 rows=34 width=8)"], ["              ->  Bitmap Heap Scan on custom_fields  (cost=8.22..26.48 rows=3 width=4)"], ["                    Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["                    Filter: (NOT is_for_all)"], ["                    ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["                          Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["              ->  Bitmap Heap Scan on custom_fields_projects  (cost=1.57..10.12 rows=11 width=8)"], ["                    Recheck Cond: (custom_field_id = custom_fields.id)"], ["                    ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..1.57 rows=11 width=0)"], ["                          Index Cond: (custom_field_id = custom_fields.id)"], ["        ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.57 rows=1 width=4)"], ["              Index Cond: (id = custom_fields_projects.project_id)"]]}
{"before": 0.10050000000000003, "after": 0.054299999999999994, "sql": "SELECT changesets.* FROM changesets INNER JOIN repositories ON repositories.id = changesets.repository_id INNER JOIN projects ON projects.id = repositories.project_id WHERE projects.status <> 9 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'repository') IS NOT NULL AND changesets.repository_id = 11190 AND changesets.revision = 'sbawyoyldndtrmicnrnxpmfcxzkmzyjttubyujpbkpunhlltbzjcptqckmaauzpahytvurncjjznkazybnpmcyswfwyotqxptnshokepybhbxnndgwheeuoiculcvefdlspitnilsukqcukwphrkiaykxmbkjhzbriexvqzeullwsjospyocjcwykwysduyuyfibydrzpvojyjzupnqbgqqyuvmmckpodllqkjqmpnexfevnmnrp' LIMIT 3", "before_plan": [["Limit  (cost=0.86..33.43 rows=1 width=453)"], ["  ->  Nested Loop  (cost=0.86..33.43 rows=1 width=453)"], ["        ->  Nested Loop  (cost=0.57..16.62 rows=1 width=457)"], ["              ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["                    Index Cond: (repository_id = 11190)"], ["                    Filter: ((revision)::text = 'sbawyoyldndtrmicnrnxpmfcxzkmzyjttubyujpbkpunhlltbzjcptqckmaauzpahytvurncjjznkazybnpmcyswfwyotqxptnshokepybhbxnndgwheeuoiculcvefdlspitnilsukqcukwphrkiaykxmbkjhzbriexvqzeullwsjospyocjcwykwysduyuyfibydrzpvojyjzupnqbgqqyuvmmckpodllqkjqmpnexfevnmnrp'::text)"], ["              ->  Index Scan using repositories_pkey on repositories  (cost=0.29..8.30 rows=1 width=8)"], ["                    Index Cond: (id = 11190)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..16.81 rows=1 width=4)"], ["              Index Cond: (id = repositories.project_id)"], ["              Filter: ((status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'repository'::text)"]], "after_plan": [["Limit  (cost=0.86..33.43 rows=1 width=453)"], ["  ->  Nested Loop  (cost=0.86..33.43 rows=1 width=453)"], ["        ->  Nested Loop  (cost=0.57..16.62 rows=1 width=457)"], ["              ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["                    Index Cond: ((repository_id = 11190) AND ((revision)::text = 'sbawyoyldndtrmicnrnxpmfcxzkmzyjttubyujpbkpunhlltbzjcptqckmaauzpahytvurncjjznkazybnpmcyswfwyotqxptnshokepybhbxnndgwheeuoiculcvefdlspitnilsukqcukwphrkiaykxmbkjhzbriexvqzeullwsjospyocjcwykwysduyuyfibydrzpvojyjzupnqbgqqyuvmmckpodllqkjqmpnexfevnmnrp'::text))"], ["              ->  Index Scan using repositories_pkey on repositories  (cost=0.29..8.30 rows=1 width=8)"], ["                    Index Cond: (id = 11190)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..16.81 rows=1 width=4)"], ["              Index Cond: (id = repositories.project_id)"], ["              Filter: ((status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'repository'::text)"]]}
{"before": 0.12490000000000001, "after": 0.13400000000000004, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND custom_fields.visible = True AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=463.47..463.47 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=268.34..463.46 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=203.34..203.35 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=8.22..203.33 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (visible AND is_filter AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 37.8531, "after": 38.1653, "sql": "SELECT projects.* FROM projects WHERE (projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) OR projects.id = 1) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers)", "before_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]], "after_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{6,13}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]]}
{"before": 36.944599999999994, "after": 37.126, "sql": "SELECT projects.* FROM projects WHERE (projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (7, 12)) OR projects.id = 1) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers)", "before_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]], "after_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]]}
{"before": 0.2795, "after": 0.2761, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'issue_tracking' AND projects.lft >= 6 AND projects.rgt <= 7 ORDER BY trackers.position ASC", "before_plan": [["Unique  (cost=36.33..36.47 rows=6 width=164)"], ["  ->  Sort  (cost=36.33..36.35 rows=6 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.15..36.26 rows=6 width=164)"], ["              ->  Nested Loop  (cost=0.86..34.21 rows=6 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.58..33.34 rows=2 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..16.31 rows=2 width=4)"], ["                                Index Cond: (rgt <= 7)"], ["                                Filter: ((status <> 9) AND (lft >= 6))"], ["                          ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..8.50 rows=1 width=4)"], ["                                Index Cond: (project_id = projects.id)"], ["                                Filter: ((name)::text = 'issue_tracking'::text)"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]], "after_plan": [["Unique  (cost=32.19..32.32 rows=6 width=164)"], ["  ->  Sort  (cost=32.19..32.20 rows=6 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.27..32.11 rows=6 width=164)"], ["              ->  Nested Loop  (cost=0.99..30.06 rows=6 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.70..29.19 rows=2 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..16.31 rows=2 width=4)"], ["                                Index Cond: (rgt <= 7)"], ["                                Filter: ((status <> 9) AND (lft >= 6))"], ["                          ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..6.44 rows=1 width=4)"], ["                                Index Cond: ((name = 'issue_tracking'::text) AND (project_id = projects.id))"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 37.9726, "after": 37.6479, "sql": "SELECT projects.* FROM projects WHERE (projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (131, 12)) OR projects.id = 1) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers)", "before_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{131,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]], "after_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{131,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]]}
{"before": 37.273700000000005, "after": 38.3766, "sql": "SELECT projects.* FROM projects WHERE (projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (124, 12)) OR projects.id = 1) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers)", "before_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{124,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]], "after_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{124,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]]}
{"before": 0.6877000000000001, "after": 0.5123, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'wiki' AND projects.lft >= 1 AND projects.rgt <= 10 ORDER BY trackers.position ASC", "before_plan": [["Unique  (cost=48.09..48.30 rows=9 width=164)"], ["  ->  Sort  (cost=48.09..48.12 rows=9 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.15..47.95 rows=9 width=164)"], ["              Join Filter: (projects.id = enabled_modules.project_id)"], ["              ->  Nested Loop  (cost=0.86..42.47 rows=9 width=172)"], ["                    ->  Nested Loop  (cost=0.57..39.40 rows=9 width=12)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..20.32 rows=3 width=4)"], ["                                Index Cond: (rgt <= 10)"], ["                                Filter: ((status <> 9) AND (lft >= 1))"], ["                          ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..6.33 rows=3 width=8)"], ["                                Index Cond: (project_id = projects.id)"], ["                    ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                          Index Cond: (id = projects_trackers.tracker_id)"], ["              ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..0.60 rows=1 width=4)"], ["                    Index Cond: (project_id = projects_trackers.project_id)"], ["                    Filter: ((name)::text = 'wiki'::text)"]], "after_plan": [["Unique  (cost=42.15..42.36 rows=9 width=164)"], ["  ->  Sort  (cost=42.15..42.18 rows=9 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.27..42.01 rows=9 width=164)"], ["              ->  Nested Loop  (cost=0.99..38.94 rows=9 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.70..37.63 rows=3 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..20.32 rows=3 width=4)"], ["                                Index Cond: (rgt <= 10)"], ["                                Filter: ((status <> 9) AND (lft >= 1))"], ["                          ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..5.77 rows=1 width=4)"], ["                                Index Cond: ((name = 'wiki'::text) AND (project_id = projects.id))"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 37.485899999999994, "after": 37.636, "sql": "SELECT projects.* FROM projects WHERE (projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (114, 12)) OR projects.id = 1) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers)", "before_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{114,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]], "after_plan": [["Hash Join  (cost=861.85..97592.31 rows=812 width=395)"], ["  Hash Cond: (projects.id = projects_trackers.project_id)"], ["  ->  Seq Scan on projects  (cost=12.61..96740.93 rows=812 width=395)"], ["        Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["        SubPlan 1"], ["          ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                Index Cond: (project_id = projects.id)"], ["                Filter: ((name)::text = 'issue_tracking'::text)"], ["        SubPlan 2"], ["          ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                Index Cond: (user_id = ANY ('{114,12}'::integer[]))"], ["  ->  Hash  (cost=723.84..723.84 rows=10033 width=4)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"]]}
{"before": 0.3836, "after": 0.3467, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'time_tracking' AND projects.lft >= 11 AND projects.rgt <= 12 ORDER BY trackers.position ASC", "before_plan": [["Unique  (cost=52.10..52.30 rows=9 width=164)"], ["  ->  Sort  (cost=52.10..52.12 rows=9 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.15..51.95 rows=9 width=164)"], ["              Join Filter: (projects.id = enabled_modules.project_id)"], ["              ->  Nested Loop  (cost=0.86..46.48 rows=9 width=172)"], ["                    ->  Nested Loop  (cost=0.57..43.40 rows=9 width=12)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..24.32 rows=3 width=4)"], ["                                Index Cond: (rgt <= 12)"], ["                                Filter: ((status <> 9) AND (lft >= 11))"], ["                          ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..6.33 rows=3 width=8)"], ["                                Index Cond: (project_id = projects.id)"], ["                    ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                          Index Cond: (id = projects_trackers.tracker_id)"], ["              ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..0.60 rows=1 width=4)"], ["                    Index Cond: (project_id = projects_trackers.project_id)"], ["                    Filter: ((name)::text = 'time_tracking'::text)"]], "after_plan": [["Unique  (cost=46.15..46.35 rows=9 width=164)"], ["  ->  Sort  (cost=46.15..46.17 rows=9 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.27..46.01 rows=9 width=164)"], ["              ->  Nested Loop  (cost=0.99..42.94 rows=9 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.70..41.64 rows=3 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..24.32 rows=3 width=4)"], ["                                Index Cond: (rgt <= 12)"], ["                                Filter: ((status <> 9) AND (lft >= 11))"], ["                          ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..5.77 rows=1 width=4)"], ["                                Index Cond: ((name = 'time_tracking'::text) AND (project_id = projects.id))"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 0.6920000000000001, "after": 0.6045, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'documents' AND projects.lft >= 13 AND projects.rgt <= 16 ORDER BY trackers.position ASC", "before_plan": [["Unique  (cost=76.28..76.61 rows=15 width=164)"], ["  ->  Sort  (cost=76.28..76.31 rows=15 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=5.20..75.98 rows=15 width=164)"], ["              Join Filter: (projects.id = enabled_modules.project_id)"], ["              ->  Nested Loop  (cost=4.91..66.86 rows=15 width=172)"], ["                    ->  Nested Loop  (cost=4.63..61.73 rows=15 width=12)"], ["                          ->  Bitmap Heap Scan on projects  (cost=4.34..31.94 rows=5 width=4)"], ["                                Recheck Cond: (rgt <= 16)"], ["                                Filter: ((status <> 9) AND (lft >= 13))"], ["                                ->  Bitmap Index Scan on index_projects_on_rgt  (cost=0.00..4.34 rows=7 width=0)"], ["                                      Index Cond: (rgt <= 16)"], ["                          ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..5.93 rows=3 width=8)"], ["                                Index Cond: (project_id = projects.id)"], ["                    ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                          Index Cond: (id = projects_trackers.tracker_id)"], ["              ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..0.60 rows=1 width=4)"], ["                    Index Cond: (project_id = projects_trackers.project_id)"], ["                    Filter: ((name)::text = 'documents'::text)"]], "after_plan": [["Unique  (cost=65.72..66.06 rows=15 width=164)"], ["  ->  Sort  (cost=65.72..65.76 rows=15 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=5.33..65.43 rows=15 width=164)"], ["              ->  Nested Loop  (cost=5.04..60.31 rows=15 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=4.76..58.13 rows=5 width=8)"], ["                          ->  Bitmap Heap Scan on projects  (cost=4.34..31.94 rows=5 width=4)"], ["                                Recheck Cond: (rgt <= 16)"], ["                                Filter: ((status <> 9) AND (lft >= 13))"], ["                                ->  Bitmap Index Scan on index_projects_on_rgt  (cost=0.00..4.34 rows=7 width=0)"], ["                                      Index Cond: (rgt <= 16)"], ["                          ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..5.24 rows=1 width=4)"], ["                                Index Cond: ((name = 'documents'::text) AND (project_id = projects.id))"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 0.11180000000000001, "after": 0.1069, "sql": "SELECT 1 AS one FROM projects WHERE projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (7, 12)) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers) AND projects.id = 95 LIMIT 6", "before_plan": [["Limit  (cost=13.18..37.80 rows=1 width=4)"], ["  ->  Nested Loop Semi Join  (cost=13.18..37.80 rows=1 width=4)"], ["        ->  Index Scan using projects_pkey on projects  (cost=12.89..29.42 rows=1 width=4)"], ["              Index Cond: (id = 95)"], ["              Filter: (is_public AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["              SubPlan 2"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'issue_tracking'::text)"], ["        ->  Unique  (cost=0.29..8.34 rows=3 width=4)"], ["              ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..8.34 rows=3 width=4)"], ["                    Index Cond: (project_id = 95)"]], "after_plan": [["Limit  (cost=13.18..37.80 rows=1 width=4)"], ["  ->  Nested Loop Semi Join  (cost=13.18..37.80 rows=1 width=4)"], ["        ->  Index Scan using projects_pkey on projects  (cost=12.89..29.42 rows=1 width=4)"], ["              Index Cond: (id = 95)"], ["              Filter: (is_public AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["              SubPlan 2"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'issue_tracking'::text)"], ["        ->  Unique  (cost=0.29..8.34 rows=3 width=4)"], ["              ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..8.34 rows=3 width=4)"], ["                    Index Cond: (project_id = 95)"]]}
{"before": 0.6745, "after": 0.48650000000000004, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'wiki' AND projects.lft >= 1 AND projects.rgt <= 10 ORDER BY trackers.position ASC LIMIT 2", "before_plan": [["Limit  (cost=48.09..48.14 rows=2 width=164)"], ["  ->  Unique  (cost=48.09..48.30 rows=9 width=164)"], ["        ->  Sort  (cost=48.09..48.12 rows=9 width=164)"], ["              Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["              ->  Nested Loop  (cost=1.15..47.95 rows=9 width=164)"], ["                    Join Filter: (projects.id = enabled_modules.project_id)"], ["                    ->  Nested Loop  (cost=0.86..42.47 rows=9 width=172)"], ["                          ->  Nested Loop  (cost=0.57..39.40 rows=9 width=12)"], ["                                ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..20.32 rows=3 width=4)"], ["                                      Index Cond: (rgt <= 10)"], ["                                      Filter: ((status <> 9) AND (lft >= 1))"], ["                                ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..6.33 rows=3 width=8)"], ["                                      Index Cond: (project_id = projects.id)"], ["                          ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                                Index Cond: (id = projects_trackers.tracker_id)"], ["                    ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..0.60 rows=1 width=4)"], ["                          Index Cond: (project_id = projects_trackers.project_id)"], ["                          Filter: ((name)::text = 'wiki'::text)"]], "after_plan": [["Limit  (cost=42.15..42.20 rows=2 width=164)"], ["  ->  Unique  (cost=42.15..42.36 rows=9 width=164)"], ["        ->  Sort  (cost=42.15..42.18 rows=9 width=164)"], ["              Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["              ->  Nested Loop  (cost=1.27..42.01 rows=9 width=164)"], ["                    ->  Nested Loop  (cost=0.99..38.94 rows=9 width=4)"], ["                          Join Filter: (projects.id = projects_trackers.project_id)"], ["                          ->  Nested Loop  (cost=0.70..37.63 rows=3 width=8)"], ["                                ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..20.32 rows=3 width=4)"], ["                                      Index Cond: (rgt <= 10)"], ["                                      Filter: ((status <> 9) AND (lft >= 1))"], ["                                ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..5.77 rows=1 width=4)"], ["                                      Index Cond: ((name = 'wiki'::text) AND (project_id = projects.id))"], ["                          ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                                Index Cond: (project_id = enabled_modules.project_id)"], ["                    ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                          Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 0.4413, "after": 0.47779999999999995, "sql": "SELECT projects.* FROM projects WHERE projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (2, 12)) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers) ORDER BY projects.id ASC LIMIT 10", "before_plan": [["Limit  (cost=13.22..1427.77 rows=10 width=395)"], ["  ->  Merge Join  (cost=13.22..114733.49 rows=811 width=395)"], ["        Merge Cond: (projects.id = projects_trackers.project_id)"], ["        ->  Index Scan using projects_pkey on projects  (cost=12.93..113596.68 rows=811 width=395)"], ["              Filter: (is_public AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["              SubPlan 2"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.63 rows=4 width=4)"], ["                      Index Cond: (user_id = ANY ('{2,12}'::integer[]))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'issue_tracking'::text)"], ["        ->  Unique  (cost=0.29..1001.26 rows=10033 width=4)"], ["              ->  Index Only Scan using projects_trackers_project_id on projects_trackers  (cost=0.29..924.03 rows=30894 width=4)"]], "after_plan": [["Limit  (cost=13.22..1427.77 rows=10 width=395)"], ["  ->  Merge Join  (cost=13.22..114733.49 rows=811 width=395)"], ["        Merge Cond: (projects.id = projects_trackers.project_id)"], ["        ->  Index Scan using projects_pkey on projects  (cost=12.93..113596.68 rows=811 width=395)"], ["              Filter: (is_public AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["              SubPlan 2"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.63 rows=4 width=4)"], ["                      Index Cond: (user_id = ANY ('{2,12}'::integer[]))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'issue_tracking'::text)"], ["        ->  Unique  (cost=0.29..1001.26 rows=10033 width=4)"], ["              ->  Index Only Scan using projects_trackers_project_id on projects_trackers  (cost=0.29..924.03 rows=30894 width=4)"]]}
{"before": 0.07869999999999999, "after": 0.07519999999999999, "sql": "SELECT 1 AS one FROM projects WHERE (projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (7, 12)) OR projects.id = 1) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers) AND projects.id = 1213 LIMIT 10", "before_plan": [["Limit  (cost=13.18..37.80 rows=1 width=4)"], ["  ->  Nested Loop Semi Join  (cost=13.18..37.80 rows=1 width=4)"], ["        ->  Index Scan using projects_pkey on projects  (cost=12.89..29.42 rows=1 width=4)"], ["              Index Cond: (id = 1213)"], ["              Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'issue_tracking'::text)"], ["              SubPlan 2"], ["                ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["        ->  Unique  (cost=0.29..8.34 rows=3 width=4)"], ["              ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..8.34 rows=3 width=4)"], ["                    Index Cond: (project_id = 1213)"]], "after_plan": [["Limit  (cost=13.18..37.80 rows=1 width=4)"], ["  ->  Nested Loop Semi Join  (cost=13.18..37.80 rows=1 width=4)"], ["        ->  Index Scan using projects_pkey on projects  (cost=12.89..29.42 rows=1 width=4)"], ["              Index Cond: (id = 1213)"], ["              Filter: (((status = 1) AND ((SubPlan 1) IS NOT NULL) AND is_public AND (NOT (hashed SubPlan 2))) OR (id = 1))"], ["              SubPlan 1"], ["                ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                      Index Cond: (project_id = projects.id)"], ["                      Filter: ((name)::text = 'issue_tracking'::text)"], ["              SubPlan 2"], ["                ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                      Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["        ->  Unique  (cost=0.29..8.34 rows=3 width=4)"], ["              ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..8.34 rows=3 width=4)"], ["                    Index Cond: (project_id = 1213)"]]}
{"before": 8.290099999999999, "after": 8.3445, "sql": "SELECT projects.* FROM projects WHERE projects.lft >= 1 AND projects.rgt <= 10 AND projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (7, 12)) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers) ORDER BY projects.lft ASC", "before_plan": [["Sort  (cost=817.15..817.16 rows=1 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Hash Join  (cost=590.13..817.14 rows=1 width=395)"], ["        Hash Cond: (projects_trackers.project_id = projects.id)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"], ["        ->  Hash  (cost=66.95..66.95 rows=1 width=395)"], ["              ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..66.95 rows=1 width=395)"], ["                    Index Cond: (rgt <= 10)"], ["                    Filter: (is_public AND (lft >= 1) AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["                    SubPlan 2"], ["                      ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                            Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["                    SubPlan 1"], ["                      ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                            Index Cond: (project_id = projects.id)"], ["                            Filter: ((name)::text = 'issue_tracking'::text)"]], "after_plan": [["Sort  (cost=817.15..817.16 rows=1 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Hash Join  (cost=590.13..817.14 rows=1 width=395)"], ["        Hash Cond: (projects_trackers.project_id = projects.id)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"], ["        ->  Hash  (cost=66.95..66.95 rows=1 width=395)"], ["              ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..66.95 rows=1 width=395)"], ["                    Index Cond: (rgt <= 10)"], ["                    Filter: (is_public AND (lft >= 1) AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["                    SubPlan 2"], ["                      ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                            Index Cond: (user_id = ANY ('{7,12}'::integer[]))"], ["                    SubPlan 1"], ["                      ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                            Index Cond: (project_id = projects.id)"], ["                            Filter: ((name)::text = 'issue_tracking'::text)"]]}
{"before": 8.1742, "after": 8.4316, "sql": "SELECT projects.* FROM projects WHERE projects.lft >= 1 AND projects.rgt <= 10 AND projects.status = 1 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND projects.is_public = True AND projects.id NOT IN (SELECT project_id FROM members WHERE user_id IN (6, 13)) AND projects.id IN (SELECT DISTINCT project_id FROM projects_trackers) ORDER BY projects.lft ASC", "before_plan": [["Sort  (cost=817.15..817.16 rows=1 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Hash Join  (cost=590.13..817.14 rows=1 width=395)"], ["        Hash Cond: (projects_trackers.project_id = projects.id)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"], ["        ->  Hash  (cost=66.95..66.95 rows=1 width=395)"], ["              ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..66.95 rows=1 width=395)"], ["                    Index Cond: (rgt <= 10)"], ["                    Filter: (is_public AND (lft >= 1) AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["                    SubPlan 2"], ["                      ->  Index Only Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..12.60 rows=2 width=4)"], ["                            Index Cond: (user_id = ANY ('{6,13}'::integer[]))"], ["                    SubPlan 1"], ["                      ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                            Index Cond: (project_id = projects.id)"], ["                            Filter: ((name)::text = 'issue_tracking'::text)"]], "after_plan": [["Sort  (cost=817.15..817.16 rows=1 width=395)"], ["  Sort Key: projects.lft"], ["  ->  Hash Join  (cost=590.13..817.14 rows=1 width=395)"], ["        Hash Cond: (projects_trackers.project_id = projects.id)"], ["        ->  HashAggregate  (cost=523.17..623.50 rows=10033 width=4)"], ["              Group Key: projects_trackers.project_id"], ["              ->  Seq Scan on projects_trackers  (cost=0.00..445.94 rows=30894 width=4)"], ["        ->  Hash  (cost=66.95..66.95 rows=1 width=395)"], ["              ->  Index Scan using index_projects_on_rgt on projects  (cost=12.89..66.95 rows=1 width=395)"], ["                    Index Cond: (rgt <= 10)"], ["                    Filter: (is_public AND (lft >= 1) AND (NOT (hashed SubPlan 2)) AND (status = 1) AND ((SubPlan 1) IS NOT NULL))"], ["                    SubPlan 2"], ["                      ->  Index Only Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..12.60 rows=2 width=4)"], ["                            Index Cond: (user_id = ANY ('{6,13}'::integer[]))"], ["                    SubPlan 1"], ["                      ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                            Index Cond: (project_id = projects.id)"], ["                            Filter: ((name)::text = 'issue_tracking'::text)"]]}
{"before": 0.1587, "after": 0.10500000000000001, "sql": "SELECT issues.* FROM issues INNER JOIN issue_statuses ON issue_statuses.id = issues.status_id INNER JOIN trackers ON trackers.id = issues.tracker_id INNER JOIN projects ON projects.id = issues.project_id INNER JOIN enumerations ON enumerations.id = issues.priority_id AND enumerations.type IN ('IssuePriority') WHERE issues.id IN (SELECT watchers.watchable_id FROM watchers WHERE watchers.watchable_type = 'Issue' AND watchers.user_id IN ('1'))", "before_plan": [["Nested Loop  (cost=9.73..18.01 rows=1 width=262)"], ["  ->  Nested Loop  (cost=9.45..17.68 rows=1 width=262)"], ["        ->  Nested Loop  (cost=9.16..17.28 rows=1 width=262)"], ["              ->  Nested Loop  (cost=8.88..16.96 rows=1 width=262)"], ["                    ->  Nested Loop  (cost=8.59..16.62 rows=1 width=262)"], ["                          ->  HashAggregate  (cost=8.31..8.32 rows=1 width=4)"], ["                                Group Key: watchers.watchable_id"], ["                                ->  Index Scan using watchers_user_id_type on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["                                      Index Cond: ((user_id = 1) AND ((watchable_type)::text = 'Issue'::text))"], ["                          ->  Index Scan using issues_pkey on issues  (cost=0.29..8.30 rows=1 width=262)"], ["                                Index Cond: (id = watchers.watchable_id)"], ["                    ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..0.34 rows=1 width=4)"], ["                          Index Cond: (id = issues.status_id)"], ["              ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..0.32 rows=1 width=4)"], ["                    Index Cond: (id = issues.tracker_id)"], ["        ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.40 rows=1 width=4)"], ["              Index Cond: (id = issues.project_id)"], ["  ->  Index Only Scan using index_enumerations_on_id_and_type on enumerations  (cost=0.28..0.33 rows=1 width=4)"], ["        Index Cond: ((id = issues.priority_id) AND (type = 'IssuePriority'::text))"]], "after_plan": [["Nested Loop  (cost=1.71..18.00 rows=1 width=262)"], ["  ->  Nested Loop  (cost=1.43..17.67 rows=1 width=262)"], ["        ->  Nested Loop  (cost=1.14..17.27 rows=1 width=262)"], ["              ->  Nested Loop  (cost=0.86..16.95 rows=1 width=262)"], ["                    ->  Nested Loop  (cost=0.57..16.61 rows=1 width=262)"], ["                          ->  Index Only Scan using unique_table_watchers_field_user_id_watchable_type_watchable_id on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["                                Index Cond: ((user_id = 1) AND (watchable_type = 'Issue'::text))"], ["                          ->  Index Scan using issues_pkey on issues  (cost=0.29..8.30 rows=1 width=262)"], ["                                Index Cond: (id = watchers.watchable_id)"], ["                    ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..0.34 rows=1 width=4)"], ["                          Index Cond: (id = issues.status_id)"], ["              ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..0.32 rows=1 width=4)"], ["                    Index Cond: (id = issues.tracker_id)"], ["        ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.40 rows=1 width=4)"], ["              Index Cond: (id = issues.project_id)"], ["  ->  Index Only Scan using index_enumerations_on_id_and_type on enumerations  (cost=0.28..0.33 rows=1 width=4)"], ["        Index Cond: ((id = issues.priority_id) AND (type = 'IssuePriority'::text))"]]}
{"before": 31.3525, "after": 31.382800000000003, "sql": "SELECT issues.* FROM issues INNER JOIN issue_statuses ON issue_statuses.id = issues.status_id INNER JOIN trackers ON trackers.id = issues.tracker_id INNER JOIN projects ON projects.id = issues.project_id INNER JOIN enumerations ON enumerations.id = issues.priority_id AND enumerations.type IN ('IssuePriority') WHERE issues.id NOT IN (SELECT watchers.watchable_id FROM watchers WHERE watchers.watchable_type = 'Issue' AND watchers.user_id IN ('1'))", "before_plan": [["Nested Loop  (cost=1117.26..1893.61 rows=1665 width=262)"], ["  ->  Merge Join  (cost=1116.98..1142.19 rows=1665 width=262)"], ["        Merge Cond: (issue_statuses.id = issues.status_id)"], ["        ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..452.90 rows=10000 width=4)"], ["        ->  Sort  (cost=1116.69..1120.86 rows=1665 width=262)"], ["              Sort Key: issues.status_id"], ["              ->  Merge Join  (cost=1002.59..1027.61 rows=1665 width=262)"], ["                    Merge Cond: (trackers.id = issues.tracker_id)"], ["                    ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..358.29 rows=10000 width=4)"], ["                    ->  Sort  (cost=1002.31..1006.47 rows=1665 width=262)"], ["                          Sort Key: issues.tracker_id"], ["                          ->  Hash Join  (cost=340.08..913.22 rows=1665 width=262)"], ["                                Hash Cond: (issues.priority_id = enumerations.id)"], ["                                ->  Seq Scan on issues  (cost=8.31..568.31 rows=5000 width=262)"], ["                                      Filter: (NOT (hashed SubPlan 1))"], ["                                      SubPlan 1"], ["                                        ->  Index Scan using watchers_user_id_type on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["                                              Index Cond: ((user_id = 1) AND ((watchable_type)::text = 'Issue'::text))"], ["                                ->  Hash  (cost=298.85..298.85 rows=2634 width=4)"], ["                                      ->  Seq Scan on enumerations  (cost=0.00..298.85 rows=2634 width=4)"], ["                                            Filter: ((type)::text = 'IssuePriority'::text)"], ["  ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.45 rows=1 width=4)"], ["        Index Cond: (id = issues.project_id)"]], "after_plan": [["Nested Loop  (cost=1117.26..1893.61 rows=1665 width=262)"], ["  ->  Merge Join  (cost=1116.98..1142.19 rows=1665 width=262)"], ["        Merge Cond: (issue_statuses.id = issues.status_id)"], ["        ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..452.90 rows=10000 width=4)"], ["        ->  Sort  (cost=1116.69..1120.86 rows=1665 width=262)"], ["              Sort Key: issues.status_id"], ["              ->  Merge Join  (cost=1002.59..1027.61 rows=1665 width=262)"], ["                    Merge Cond: (trackers.id = issues.tracker_id)"], ["                    ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..358.29 rows=10000 width=4)"], ["                    ->  Sort  (cost=1002.31..1006.47 rows=1665 width=262)"], ["                          Sort Key: issues.tracker_id"], ["                          ->  Hash Join  (cost=340.08..913.22 rows=1665 width=262)"], ["                                Hash Cond: (issues.priority_id = enumerations.id)"], ["                                ->  Seq Scan on issues  (cost=8.31..568.31 rows=5000 width=262)"], ["                                      Filter: (NOT (hashed SubPlan 1))"], ["                                      SubPlan 1"], ["                                        ->  Index Only Scan using unique_table_watchers_field_user_id_watchable_type_watchable_id on watchers  (cost=0.29..8.30 rows=1 width=4)"], ["                                              Index Cond: ((user_id = 1) AND (watchable_type = 'Issue'::text))"], ["                                ->  Hash  (cost=298.85..298.85 rows=2634 width=4)"], ["                                      ->  Seq Scan on enumerations  (cost=0.00..298.85 rows=2634 width=4)"], ["                                            Filter: ((type)::text = 'IssuePriority'::text)"], ["  ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.45 rows=1 width=4)"], ["        Index Cond: (id = issues.project_id)"]]}
{"before": 0.9096, "after": 0.8867, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 2)) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 2)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1674.99..1674.99 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1656.67..1674.96 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((is_for_all OR (hashed SubPlan 1)) AND (visible OR (hashed SubPlan 2)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"]], "after_plan": [["Sort  (cost=1414.86..1414.87 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1396.55..1414.84 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((is_for_all OR (hashed SubPlan 1)) AND (visible OR (hashed SubPlan 2)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"]]}
{"before": 0.12669999999999998, "after": 0.1291, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'documents' AND projects.lft >= 1 AND projects.rgt <= 2 AND projects.status <> 9 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL ORDER BY trackers.position ASC", "before_plan": [["Unique  (cost=26.78..26.85 rows=3 width=164)"], ["  ->  Sort  (cost=26.78..26.79 rows=3 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.15..26.76 rows=3 width=164)"], ["              ->  Nested Loop  (cost=0.86..25.73 rows=3 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.58..25.30 rows=1 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..16.79 rows=1 width=4)"], ["                                Index Cond: (rgt <= 2)"], ["                                Filter: ((status <> 9) AND (lft >= 1) AND (status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["                                SubPlan 1"], ["                                  ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                        Index Cond: (project_id = projects.id)"], ["                                        Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..8.50 rows=1 width=4)"], ["                                Index Cond: (project_id = projects.id)"], ["                                Filter: ((name)::text = 'documents'::text)"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]], "after_plan": [["Unique  (cost=26.77..26.84 rows=3 width=164)"], ["  ->  Sort  (cost=26.77..26.78 rows=3 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.15..26.75 rows=3 width=164)"], ["              ->  Nested Loop  (cost=0.86..25.72 rows=3 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.58..25.29 rows=1 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..16.79 rows=1 width=4)"], ["                                Index Cond: (rgt <= 2)"], ["                                Filter: ((status <> 9) AND (lft >= 1) AND (status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["                                SubPlan 1"], ["                                  ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                        Index Cond: (project_id = projects.id)"], ["                                        Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..8.50 rows=1 width=4)"], ["                                Index Cond: (project_id = projects.id)"], ["                                Filter: ((name)::text = 'documents'::text)"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 0.9148999999999999, "after": 0.8939999999999999, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR id IN (SELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects AS cfp WHERE cfp.project_id = 2)) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 2)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1674.97..1674.98 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1656.67..1674.96 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)) AND (visible OR (hashed SubPlan 2)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"]], "after_plan": [["Sort  (cost=1414.85..1414.85 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1396.55..1414.84 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (is_for_all OR (hashed SubPlan 1)) AND (visible OR (hashed SubPlan 2)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 1"], ["          ->  Unique  (cost=0.15..53.24 rows=11 width=4)"], ["                ->  Index Only Scan using index_custom_fields_projects_on_custom_field_id_and_project_id on custom_fields_projects cfp  (cost=0.15..53.22 rows=11 width=4)"], ["                      Index Cond: (project_id = 2)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"]]}
{"before": 0.6543, "after": 0.6708000000000001, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'gantt' AND projects.lft >= 1 AND projects.rgt <= 10 AND projects.status <> 9 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL ORDER BY trackers.position ASC", "before_plan": [["Unique  (cost=74.36..74.50 rows=6 width=164)"], ["  ->  Sort  (cost=74.36..74.38 rows=6 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.15..74.28 rows=6 width=164)"], ["              ->  Nested Loop  (cost=0.86..72.24 rows=6 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.58..71.37 rows=2 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..54.34 rows=2 width=4)"], ["                                Index Cond: (rgt <= 10)"], ["                                Filter: ((status <> 9) AND (lft >= 1) AND (status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["                                SubPlan 1"], ["                                  ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                        Index Cond: (project_id = projects.id)"], ["                                        Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..8.50 rows=1 width=4)"], ["                                Index Cond: (project_id = projects.id)"], ["                                Filter: ((name)::text = 'gantt'::text)"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]], "after_plan": [["Unique  (cost=70.21..70.35 rows=6 width=164)"], ["  ->  Sort  (cost=70.21..70.23 rows=6 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.27..70.14 rows=6 width=164)"], ["              ->  Nested Loop  (cost=0.99..68.09 rows=6 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.70..67.22 rows=2 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..54.34 rows=2 width=4)"], ["                                Index Cond: (rgt <= 10)"], ["                                Filter: ((status <> 9) AND (lft >= 1) AND (status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["                                SubPlan 1"], ["                                  ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                        Index Cond: (project_id = projects.id)"], ["                                        Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..6.44 rows=1 width=4)"], ["                                Index Cond: ((name = 'gantt'::text) AND (project_id = projects.id))"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 0.5014000000000001, "after": 0.4758, "sql": "SELECT DISTINCT trackers.* FROM trackers INNER JOIN projects_trackers ON projects_trackers.tracker_id = trackers.id INNER JOIN projects ON projects.id = projects_trackers.project_id INNER JOIN enabled_modules ON enabled_modules.project_id = projects.id WHERE projects.status <> 9 AND enabled_modules.name = 'news' AND projects.lft >= 13 AND projects.rgt <= 14 AND projects.status <> 9 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL ORDER BY trackers.position ASC", "before_plan": [["Unique  (cost=107.13..107.33 rows=9 width=164)"], ["  ->  Sort  (cost=107.13..107.15 rows=9 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.15..106.99 rows=9 width=164)"], ["              Join Filter: (projects.id = enabled_modules.project_id)"], ["              ->  Nested Loop  (cost=0.86..101.51 rows=9 width=172)"], ["                    ->  Nested Loop  (cost=0.57..98.44 rows=9 width=12)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..79.36 rows=3 width=4)"], ["                                Index Cond: (rgt <= 14)"], ["                                Filter: ((status <> 9) AND (lft >= 13) AND (status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["                                SubPlan 1"], ["                                  ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                        Index Cond: (project_id = projects.id)"], ["                                        Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..6.33 rows=3 width=8)"], ["                                Index Cond: (project_id = projects.id)"], ["                    ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                          Index Cond: (id = projects_trackers.tracker_id)"], ["              ->  Index Scan using enabled_modules_project_id on enabled_modules  (cost=0.29..0.60 rows=1 width=4)"], ["                    Index Cond: (project_id = projects_trackers.project_id)"], ["                    Filter: ((name)::text = 'news'::text)"]], "after_plan": [["Unique  (cost=101.18..101.39 rows=9 width=164)"], ["  ->  Sort  (cost=101.18..101.21 rows=9 width=164)"], ["        Sort Key: trackers.\"position\", trackers.id, trackers.name, trackers.is_in_chlog, trackers.is_in_roadmap, trackers.fields_bits, trackers.default_status_id, trackers.description"], ["        ->  Nested Loop  (cost=1.27..101.04 rows=9 width=164)"], ["              ->  Nested Loop  (cost=0.99..97.97 rows=9 width=4)"], ["                    Join Filter: (projects.id = projects_trackers.project_id)"], ["                    ->  Nested Loop  (cost=0.70..96.67 rows=3 width=8)"], ["                          ->  Index Scan using index_projects_on_rgt on projects  (cost=0.29..79.36 rows=3 width=4)"], ["                                Index Cond: (rgt <= 14)"], ["                                Filter: ((status <> 9) AND (lft >= 13) AND (status <> 9) AND ((SubPlan 1) IS NOT NULL))"], ["                                SubPlan 1"], ["                                  ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                        Index Cond: (project_id = projects.id)"], ["                                        Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Only Scan using unique_table_enabled_modules_field_name_project_id_cond_none on enabled_modules  (cost=0.42..5.77 rows=1 width=4)"], ["                                Index Cond: ((name = 'news'::text) AND (project_id = projects.id))"], ["                    ->  Index Only Scan using projects_trackers_unique on projects_trackers  (cost=0.29..0.40 rows=3 width=8)"], ["                          Index Cond: (project_id = enabled_modules.project_id)"], ["              ->  Index Scan using trackers_pkey on trackers  (cost=0.29..0.34 rows=1 width=164)"], ["                    Index Cond: (id = projects_trackers.tracker_id)"]]}
{"before": 0.917, "after": 0.9169, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 2)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1798.59..1798.60 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1603.40..1798.53 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1538.47..1538.48 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1343.28..1538.41 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.15919999999999998, "after": 0.1626, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 3)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1818.63..1818.64 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1623.44..1818.57 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using index_members_on_user_id_and_project_id on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 3)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1558.50..1558.52 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1363.32..1558.45 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 3)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.15760000000000002, "after": 0.1616, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 53)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1818.63..1818.64 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1623.44..1818.57 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using index_members_on_user_id_and_project_id on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 53)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1558.50..1558.52 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1363.32..1558.45 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 53)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.1588, "after": 0.16340000000000002, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 55)) ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1818.63..1818.64 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1623.44..1818.57 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using index_members_on_user_id_and_project_id on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 55)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1558.50..1558.52 rows=5 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1363.32..1558.45 rows=5 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 55)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.9046999999999998, "after": 0.8871, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 2)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1798.56..1798.56 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1603.40..1798.53 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on index_members_on_user_id_and_project_id  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1538.43..1538.44 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1343.28..1538.41 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  HashAggregate  (cost=960.27..1260.10 rows=29983 width=4)"], ["                Group Key: cfr.custom_field_id"], ["                ->  Hash Join  (cost=38.91..885.05 rows=30088 width=4)"], ["                      Hash Cond: (cfr.role_id = mr.role_id)"], ["                      ->  Seq Scan on custom_fields_roles cfr  (cost=0.00..432.83 rows=29983 width=8)"], ["                      ->  Hash  (cost=38.87..38.87 rows=3 width=4)"], ["                            ->  Nested Loop  (cost=4.59..38.87 rows=3 width=4)"], ["                                  ->  Bitmap Heap Scan on members m  (cost=4.31..13.94 rows=3 width=4)"], ["                                        Recheck Cond: (user_id = 2)"], ["                                        ->  Bitmap Index Scan on unique_table_members_field_user_id_project_id_cond_none  (cost=0.00..4.30 rows=3 width=0)"], ["                                              Index Cond: (user_id = 2)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.13420000000000004, "after": 0.13399999999999998, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 3)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1818.59..1818.60 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1623.44..1818.57 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using index_members_on_user_id_and_project_id on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 3)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1558.47..1558.48 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1363.32..1558.45 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 3)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.1559, "after": 0.1709, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 53)) AND custom_fields.is_filter = True ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1818.58..1818.58 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1623.44..1818.57 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using index_members_on_user_id_and_project_id on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 53)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1558.45..1558.46 rows=2 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1363.32..1558.44 rows=2 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: (is_filter AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 53)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.13310000000000002, "after": 0.1368, "sql": "SELECT custom_fields.* FROM custom_fields WHERE custom_fields.type IN ('IssueCustomField') AND (is_for_all = True OR (SELECT 1 FROM custom_fields_projects AS cfp JOIN projects AS p ON p.id = cfp.project_id WHERE cfp.custom_field_id = custom_fields.id AND p.lft >= 1 AND p.rgt <= 10) IS NOT NULL) AND (custom_fields.visible = True OR custom_fields.id IN (SELECT DISTINCT cfr.custom_field_id FROM members AS m INNER JOIN member_roles AS mr ON mr.member_id = m.id INNER JOIN custom_fields_roles AS cfr ON cfr.role_id = mr.role_id WHERE m.user_id = 55)) AND custom_fields.is_filter = False ORDER BY custom_fields.position ASC", "before_plan": [["Sort  (cost=1818.59..1818.60 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1623.44..1818.57 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on index_custom_fields_on_id_and_type  (cost=0.00..268.34 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using index_members_on_user_id_and_project_id on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 55)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]], "after_plan": [["Sort  (cost=1558.47..1558.48 rows=3 width=137)"], ["  Sort Key: custom_fields.\"position\""], ["  ->  Bitmap Heap Scan on custom_fields  (cost=1363.32..1558.45 rows=3 width=137)"], ["        Recheck Cond: ((type)::text = 'IssueCustomField'::text)"], ["        Filter: ((NOT is_filter) AND (visible OR (hashed SubPlan 2)) AND (is_for_all OR ((SubPlan 1) IS NOT NULL)))"], ["        ->  Bitmap Index Scan on unique_table_custom_fields_field_name_type_cond_none  (cost=0.00..8.22 rows=5 width=0)"], ["              Index Cond: ((type)::text = 'IssueCustomField'::text)"], ["        SubPlan 2"], ["          ->  Unique  (cost=0.85..1330.02 rows=10029 width=4)"], ["                ->  Nested Loop  (cost=0.85..1304.95 rows=10029 width=4)"], ["                      Join Filter: (mr.role_id = cfr.role_id)"], ["                      ->  Index Only Scan using custom_fields_roles_ids on custom_fields_roles cfr  (cost=0.29..838.59 rows=29983 width=8)"], ["                      ->  Materialize  (cost=0.56..16.62 rows=1 width=4)"], ["                            ->  Nested Loop  (cost=0.56..16.61 rows=1 width=4)"], ["                                  ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members m  (cost=0.28..8.30 rows=1 width=4)"], ["                                        Index Cond: (user_id = 55)"], ["                                  ->  Index Scan using index_member_roles_on_member_id on member_roles mr  (cost=0.28..8.30 rows=1 width=8)"], ["                                        Index Cond: (member_id = m.id)"], ["        SubPlan 1"], ["          ->  Hash Join  (cost=15.33..35.37 rows=1 width=4)"], ["                Hash Cond: (p.id = cfp.project_id)"], ["                ->  Index Scan using index_projects_on_rgt on projects p  (cost=0.29..20.31 rows=4 width=4)"], ["                      Index Cond: (rgt <= 10)"], ["                      Filter: (lft >= 1)"], ["                ->  Hash  (cost=14.91..14.91 rows=11 width=4)"], ["                      ->  Bitmap Heap Scan on custom_fields_projects cfp  (cost=4.24..14.91 rows=11 width=4)"], ["                            Recheck Cond: (custom_field_id = custom_fields.id)"], ["                            ->  Bitmap Index Scan on index_custom_fields_projects_on_custom_field_id_and_project_id  (cost=0.00..4.24 rows=11 width=0)"], ["                                  Index Cond: (custom_field_id = custom_fields.id)"]]}
{"before": 0.16970000000000002, "after": 0.17099999999999999, "sql": "SELECT issues.* FROM issues INNER JOIN issue_statuses ON issue_statuses.id = issues.status_id INNER JOIN trackers ON trackers.id = issues.tracker_id INNER JOIN projects ON projects.id = issues.project_id INNER JOIN enumerations ON enumerations.id = issues.priority_id AND enumerations.type IN ('IssuePriority') WHERE issues.id IN (SELECT issues.id FROM issues INNER JOIN watchers ON issues.id = watchers.watchable_id AND watchers.watchable_type = 'Issue' LEFT OUTER JOIN projects ON projects.id = issues.project_id WHERE watchers.user_id IN ('1') OR projects.status <> 9 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND watchers.user_id IN ('3'))", "before_plan": [["Nested Loop  (cost=34.00..34.47 rows=1 width=262)"], ["  ->  Nested Loop  (cost=33.71..34.14 rows=1 width=262)"], ["        ->  Nested Loop  (cost=33.43..33.74 rows=1 width=262)"], ["              ->  Nested Loop  (cost=33.14..33.42 rows=1 width=262)"], ["                    ->  Nested Loop  (cost=32.86..33.08 rows=1 width=262)"], ["                          ->  HashAggregate  (cost=32.57..32.58 rows=1 width=8)"], ["                                Group Key: issues_1.id"], ["                                ->  Nested Loop Left Join  (cost=9.16..32.57 rows=1 width=8)"], ["                                      Filter: ((watchers.user_id = 1) OR ((projects_1.status <> 9) AND ((SubPlan 1) IS NOT NULL) AND (watchers.user_id = 3)))"], ["                                      ->  Nested Loop  (cost=8.88..20.91 rows=1 width=16)"], ["                                            ->  Bitmap Heap Scan on watchers  (cost=8.59..12.61 rows=1 width=8)"], ["                                                  Recheck Cond: (((user_id = 1) AND ((watchable_type)::text = 'Issue'::text)) OR ((user_id = 3) AND ((watchable_type)::text = 'Issue'::text)))"], ["                                                  ->  BitmapOr  (cost=8.59..8.59 rows=1 width=0)"], ["                                                        ->  Bitmap Index Scan on watchers_user_id_type  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 1) AND ((watchable_type)::text = 'Issue'::text))"], ["                                                        ->  Bitmap Index Scan on watchers_user_id_type  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 3) AND ((watchable_type)::text = 'Issue'::text))"], ["                                            ->  Index Scan using issues_pkey on issues issues_1  (cost=0.29..8.30 rows=1 width=8)"], ["                                                  Index Cond: (id = watchers.watchable_id)"], ["                                      ->  Index Scan using projects_pkey on projects projects_1  (cost=0.29..3.14 rows=1 width=8)"], ["                                            Index Cond: (id = issues_1.project_id)"], ["                                      SubPlan 1"], ["                                        ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                              Index Cond: (project_id = projects_1.id)"], ["                                              Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Scan using issues_pkey on issues  (cost=0.29..0.50 rows=1 width=262)"], ["                                Index Cond: (id = issues_1.id)"], ["                    ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..0.34 rows=1 width=4)"], ["                          Index Cond: (id = issues.status_id)"], ["              ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..0.32 rows=1 width=4)"], ["                    Index Cond: (id = issues.tracker_id)"], ["        ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.40 rows=1 width=4)"], ["              Index Cond: (id = issues.project_id)"], ["  ->  Index Only Scan using index_enumerations_on_id_and_type on enumerations  (cost=0.28..0.33 rows=1 width=4)"], ["        Index Cond: ((id = issues.priority_id) AND (type = 'IssuePriority'::text))"]], "after_plan": [["Nested Loop  (cost=34.00..34.47 rows=1 width=262)"], ["  ->  Nested Loop  (cost=33.71..34.14 rows=1 width=262)"], ["        ->  Nested Loop  (cost=33.43..33.74 rows=1 width=262)"], ["              ->  Nested Loop  (cost=33.14..33.42 rows=1 width=262)"], ["                    ->  Nested Loop  (cost=32.86..33.08 rows=1 width=262)"], ["                          ->  HashAggregate  (cost=32.57..32.58 rows=1 width=8)"], ["                                Group Key: issues_1.id"], ["                                ->  Nested Loop Left Join  (cost=9.16..32.57 rows=1 width=8)"], ["                                      Filter: ((watchers.user_id = 1) OR ((projects_1.status <> 9) AND ((SubPlan 1) IS NOT NULL) AND (watchers.user_id = 3)))"], ["                                      ->  Nested Loop  (cost=8.88..20.91 rows=1 width=16)"], ["                                            ->  Bitmap Heap Scan on watchers  (cost=8.59..12.61 rows=1 width=8)"], ["                                                  Recheck Cond: (((user_id = 1) AND ((watchable_type)::text = 'Issue'::text)) OR ((user_id = 3) AND ((watchable_type)::text = 'Issue'::text)))"], ["                                                  ->  BitmapOr  (cost=8.59..8.59 rows=1 width=0)"], ["                                                        ->  Bitmap Index Scan on unique_table_watchers_field_user_id_watchable_type_watchable_id  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 1) AND ((watchable_type)::text = 'Issue'::text))"], ["                                                        ->  Bitmap Index Scan on unique_table_watchers_field_user_id_watchable_type_watchable_id  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 3) AND ((watchable_type)::text = 'Issue'::text))"], ["                                            ->  Index Scan using issues_pkey on issues issues_1  (cost=0.29..8.30 rows=1 width=8)"], ["                                                  Index Cond: (id = watchers.watchable_id)"], ["                                      ->  Index Scan using projects_pkey on projects projects_1  (cost=0.29..3.14 rows=1 width=8)"], ["                                            Index Cond: (id = issues_1.project_id)"], ["                                      SubPlan 1"], ["                                        ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                              Index Cond: (project_id = projects_1.id)"], ["                                              Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Scan using issues_pkey on issues  (cost=0.29..0.50 rows=1 width=262)"], ["                                Index Cond: (id = issues_1.id)"], ["                    ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..0.34 rows=1 width=4)"], ["                          Index Cond: (id = issues.status_id)"], ["              ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..0.32 rows=1 width=4)"], ["                    Index Cond: (id = issues.tracker_id)"], ["        ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.40 rows=1 width=4)"], ["              Index Cond: (id = issues.project_id)"], ["  ->  Index Only Scan using index_enumerations_on_id_and_type on enumerations  (cost=0.28..0.33 rows=1 width=4)"], ["        Index Cond: ((id = issues.priority_id) AND (type = 'IssuePriority'::text))"]]}
{"before": 0.07529999999999999, "after": 0.08149999999999999, "sql": "SELECT members.id AS t0_r0, members.user_id AS t0_r1, members.project_id AS t0_r2, members.created_on AS t0_r3, members.mail_notification AS t0_r4, projects.id AS t1_r0, projects.name AS t1_r1, projects.description AS t1_r2, projects.homepage AS t1_r3, projects.is_public AS t1_r4, projects.parent_id AS t1_r5, projects.created_on AS t1_r6, projects.updated_on AS t1_r7, projects.identifier AS t1_r8, projects.status AS t1_r9, projects.lft AS t1_r10, projects.rgt AS t1_r11, projects.inherit_members AS t1_r12, projects.default_version_id AS t1_r13, projects.default_assigned_to_id AS t1_r14 FROM members INNER JOIN projects ON projects.id = members.project_id WHERE members.user_id = 1731 AND projects.status <> 9 ORDER BY projects.lft", "before_plan": [["Sort  (cost=16.62..16.62 rows=1 width=416)"], ["  Sort Key: projects.lft"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=416)"], ["        ->  Index Scan using index_members_on_user_id_and_project_id on members  (cost=0.28..8.30 rows=1 width=21)"], ["              Index Cond: (user_id = 1731)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=395)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 9)"]], "after_plan": [["Sort  (cost=16.62..16.62 rows=1 width=416)"], ["  Sort Key: projects.lft"], ["  ->  Nested Loop  (cost=0.57..16.61 rows=1 width=416)"], ["        ->  Index Scan using unique_table_members_field_user_id_project_id_cond_none on members  (cost=0.28..8.30 rows=1 width=21)"], ["              Index Cond: (user_id = 1731)"], ["        ->  Index Scan using projects_pkey on projects  (cost=0.29..8.31 rows=1 width=395)"], ["              Index Cond: (id = members.project_id)"], ["              Filter: (status <> 9)"]]}
{"before": 0.1709, "after": 0.1738, "sql": "SELECT issues.* FROM issues INNER JOIN issue_statuses ON issue_statuses.id = issues.status_id INNER JOIN trackers ON trackers.id = issues.tracker_id INNER JOIN projects ON projects.id = issues.project_id INNER JOIN enumerations ON enumerations.id = issues.priority_id AND enumerations.type IN ('IssuePriority') WHERE issues.id IN (SELECT issues.id FROM issues INNER JOIN watchers ON issues.id = watchers.watchable_id AND watchers.watchable_type = 'Issue' LEFT OUTER JOIN projects ON projects.id = issues.project_id WHERE watchers.user_id IN ('2') OR projects.status <> 9 AND (SELECT 1 AS one FROM enabled_modules AS em WHERE em.project_id = projects.id AND em.name = 'issue_tracking') IS NOT NULL AND (projects.id IN (1, 5) OR projects.id IN (2, 5)) AND watchers.user_id IN ('10'))", "before_plan": [["Nested Loop  (cost=34.00..34.48 rows=1 width=262)"], ["  ->  Nested Loop  (cost=33.72..34.14 rows=1 width=262)"], ["        ->  Nested Loop  (cost=33.43..33.75 rows=1 width=262)"], ["              ->  Nested Loop  (cost=33.15..33.42 rows=1 width=262)"], ["                    ->  Nested Loop  (cost=32.86..33.09 rows=1 width=262)"], ["                          ->  HashAggregate  (cost=32.58..32.59 rows=1 width=8)"], ["                                Group Key: issues_1.id"], ["                                ->  Nested Loop Left Join  (cost=9.16..32.58 rows=1 width=8)"], ["                                      Filter: ((watchers.user_id = 2) OR ((projects_1.status <> 9) AND ((SubPlan 1) IS NOT NULL) AND ((projects_1.id = ANY ('{1,5}'::integer[])) OR (projects_1.id = ANY ('{2,5}'::integer[]))) AND (watchers.user_id = 10)))"], ["                                      ->  Nested Loop  (cost=8.88..20.91 rows=1 width=16)"], ["                                            ->  Bitmap Heap Scan on watchers  (cost=8.59..12.61 rows=1 width=8)"], ["                                                  Recheck Cond: (((user_id = 2) AND ((watchable_type)::text = 'Issue'::text)) OR ((user_id = 10) AND ((watchable_type)::text = 'Issue'::text)))"], ["                                                  ->  BitmapOr  (cost=8.59..8.59 rows=1 width=0)"], ["                                                        ->  Bitmap Index Scan on watchers_user_id_type  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 2) AND ((watchable_type)::text = 'Issue'::text))"], ["                                                        ->  Bitmap Index Scan on watchers_user_id_type  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 10) AND ((watchable_type)::text = 'Issue'::text))"], ["                                            ->  Index Scan using issues_pkey on issues issues_1  (cost=0.29..8.30 rows=1 width=8)"], ["                                                  Index Cond: (id = watchers.watchable_id)"], ["                                      ->  Index Scan using projects_pkey on projects projects_1  (cost=0.29..3.14 rows=1 width=8)"], ["                                            Index Cond: (id = issues_1.project_id)"], ["                                      SubPlan 1"], ["                                        ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                              Index Cond: (project_id = projects_1.id)"], ["                                              Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Scan using issues_pkey on issues  (cost=0.29..0.50 rows=1 width=262)"], ["                                Index Cond: (id = issues_1.id)"], ["                    ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..0.34 rows=1 width=4)"], ["                          Index Cond: (id = issues.status_id)"], ["              ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..0.32 rows=1 width=4)"], ["                    Index Cond: (id = issues.tracker_id)"], ["        ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.40 rows=1 width=4)"], ["              Index Cond: (id = issues.project_id)"], ["  ->  Index Only Scan using index_enumerations_on_id_and_type on enumerations  (cost=0.28..0.33 rows=1 width=4)"], ["        Index Cond: ((id = issues.priority_id) AND (type = 'IssuePriority'::text))"]], "after_plan": [["Nested Loop  (cost=34.00..34.48 rows=1 width=262)"], ["  ->  Nested Loop  (cost=33.72..34.14 rows=1 width=262)"], ["        ->  Nested Loop  (cost=33.43..33.75 rows=1 width=262)"], ["              ->  Nested Loop  (cost=33.15..33.42 rows=1 width=262)"], ["                    ->  Nested Loop  (cost=32.86..33.09 rows=1 width=262)"], ["                          ->  HashAggregate  (cost=32.58..32.59 rows=1 width=8)"], ["                                Group Key: issues_1.id"], ["                                ->  Nested Loop Left Join  (cost=9.16..32.58 rows=1 width=8)"], ["                                      Filter: ((watchers.user_id = 2) OR ((projects_1.status <> 9) AND ((SubPlan 1) IS NOT NULL) AND ((projects_1.id = ANY ('{1,5}'::integer[])) OR (projects_1.id = ANY ('{2,5}'::integer[]))) AND (watchers.user_id = 10)))"], ["                                      ->  Nested Loop  (cost=8.88..20.91 rows=1 width=16)"], ["                                            ->  Bitmap Heap Scan on watchers  (cost=8.59..12.61 rows=1 width=8)"], ["                                                  Recheck Cond: (((user_id = 2) AND ((watchable_type)::text = 'Issue'::text)) OR ((user_id = 10) AND ((watchable_type)::text = 'Issue'::text)))"], ["                                                  ->  BitmapOr  (cost=8.59..8.59 rows=1 width=0)"], ["                                                        ->  Bitmap Index Scan on unique_table_watchers_field_user_id_watchable_type_watchable_id  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 2) AND ((watchable_type)::text = 'Issue'::text))"], ["                                                        ->  Bitmap Index Scan on unique_table_watchers_field_user_id_watchable_type_watchable_id  (cost=0.00..4.29 rows=1 width=0)"], ["                                                              Index Cond: ((user_id = 10) AND ((watchable_type)::text = 'Issue'::text))"], ["                                            ->  Index Scan using issues_pkey on issues issues_1  (cost=0.29..8.30 rows=1 width=8)"], ["                                                  Index Cond: (id = watchers.watchable_id)"], ["                                      ->  Index Scan using projects_pkey on projects projects_1  (cost=0.29..3.14 rows=1 width=8)"], ["                                            Index Cond: (id = issues_1.project_id)"], ["                                      SubPlan 1"], ["                                        ->  Index Scan using enabled_modules_project_id on enabled_modules em  (cost=0.29..8.50 rows=1 width=4)"], ["                                              Index Cond: (project_id = projects_1.id)"], ["                                              Filter: ((name)::text = 'issue_tracking'::text)"], ["                          ->  Index Scan using issues_pkey on issues  (cost=0.29..0.50 rows=1 width=262)"], ["                                Index Cond: (id = issues_1.id)"], ["                    ->  Index Only Scan using issue_statuses_pkey on issue_statuses  (cost=0.29..0.34 rows=1 width=4)"], ["                          Index Cond: (id = issues.status_id)"], ["              ->  Index Only Scan using trackers_pkey on trackers  (cost=0.29..0.32 rows=1 width=4)"], ["                    Index Cond: (id = issues.tracker_id)"], ["        ->  Index Only Scan using projects_pkey on projects  (cost=0.29..0.40 rows=1 width=4)"], ["              Index Cond: (id = issues.project_id)"], ["  ->  Index Only Scan using index_enumerations_on_id_and_type on enumerations  (cost=0.28..0.33 rows=1 width=4)"], ["        Index Cond: ((id = issues.priority_id) AND (type = 'IssuePriority'::text))"]]}
{"before": 0.9437000000000001, "after": 0.2872, "sql": "SELECT versions.id AS t0_r0, versions.project_id AS t0_r1, versions.name AS t0_r2, versions.description AS t0_r3, versions.effective_date AS t0_r4, versions.created_on AS t0_r5, versions.updated_on AS t0_r6, versions.wiki_page_title AS t0_r7, versions.status AS t0_r8, versions.sharing AS t0_r9, attachments.id AS t1_r0, attachments.container_id AS t1_r1, attachments.container_type AS t1_r2, attachments.filename AS t1_r3, attachments.disk_filename AS t1_r4, attachments.filesize AS t1_r5, attachments.content_type AS t1_r6, attachments.digest AS t1_r7, attachments.downloads AS t1_r8, attachments.author_id AS t1_r9, attachments.created_on AS t1_r10, attachments.description AS t1_r11, attachments.disk_directory AS t1_r12 FROM versions LEFT OUTER JOIN attachments ON attachments.container_id = versions.id AND attachments.container_type = 'ewmowhuaykjvetgaguamrelcmu' WHERE versions.project_id = 3175 ORDER BY attachments.filename ASC", "before_plan": [["Sort  (cost=371.62..371.63 rows=1 width=1088)"], ["  Sort Key: attachments.filename"], ["  ->  Nested Loop Left Join  (cost=0.29..371.62 rows=1 width=1088)"], ["        ->  Seq Scan on versions  (cost=0.00..363.30 rows=1 width=356)"], ["              Filter: (project_id = 3175)"], ["        ->  Index Scan using index_attachments_on_container_id_and_container_type on attachments  (cost=0.29..8.30 rows=1 width=732)"], ["              Index Cond: ((container_id = versions.id) AND ((container_type)::text = 'ewmowhuaykjvetgaguamrelcmu'::text))"]], "after_plan": [["Sort  (cost=243.00..243.00 rows=1 width=1088)"], ["  Sort Key: attachments.filename"], ["  ->  Nested Loop Left Join  (cost=0.57..242.99 rows=1 width=1088)"], ["        ->  Index Scan using unique_table_versions_field_name_project_id_cond_none on versions  (cost=0.28..234.67 rows=1 width=356)"], ["              Index Cond: (project_id = 3175)"], ["        ->  Index Scan using index_attachments_on_container_id_and_container_type on attachments  (cost=0.29..8.30 rows=1 width=732)"], ["              Index Cond: ((container_id = versions.id) AND ((container_type)::text = 'ewmowhuaykjvetgaguamrelcmu'::text))"]]}
{"before": 0.10610000000000004, "after": 0.06870000000000001, "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, users.id AS t1_r0, users.login AS t1_r1, users.hashed_password AS t1_r2, users.firstname AS t1_r3, users.lastname AS t1_r4, users.admin AS t1_r5, users.status AS t1_r6, users.last_login_on AS t1_r7, users.language AS t1_r8, users.auth_source_id AS t1_r9, users.created_on AS t1_r10, users.updated_on AS t1_r11, users.type AS t1_r12, users.identity_url AS t1_r13, users.mail_notification AS t1_r14, users.salt AS t1_r15, users.must_change_passwd AS t1_r16, users.passwd_changed_on AS t1_r17, users.twofa_scheme AS t1_r18, users.twofa_totp_key AS t1_r19, users.twofa_totp_last_used_at AS t1_r20 FROM changesets LEFT OUTER JOIN users ON users.id = changesets.user_id AND users.type IN ('User', 'AnonymousUser') WHERE changesets.repository_id = 3945 AND changesets.committer = 'yrhiuiqgdfcmitpgsmvwgvsiuazjkhgmgsyhymykfmzvqybpbkukzuhcbtjcbqvapsbnunfmxygvxatofhvgricdaowmunvicbiruoublpcwtkdxqjmdzhstmjjimnvlorwicqkqdefnpmjsxrktohrsvboysiwmddbhgfrkcbjgotqhhphcytahjppdxejktsqzcexvadeqyecognbpclhiuokiqvgheeoj' ORDER BY changesets.id DESC LIMIT 9", "before_plan": [["Limit  (cost=16.89..16.90 rows=1 width=1033)"], ["  ->  Sort  (cost=16.89..16.90 rows=1 width=1033)"], ["        Sort Key: changesets.id DESC"], ["        ->  Nested Loop Left Join  (cost=0.57..16.88 rows=1 width=1033)"], ["              ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["                    Index Cond: (repository_id = 3945)"], ["                    Filter: ((committer)::text = 'yrhiuiqgdfcmitpgsmvwgvsiuazjkhgmgsyhymykfmzvqybpbkukzuhcbtjcbqvapsbnunfmxygvxatofhvgricdaowmunvicbiruoublpcwtkdxqjmdzhstmjjimnvlorwicqkqdefnpmjsxrktohrsvboysiwmddbhgfrkcbjgotqhhphcytahjppdxejktsqzcexvadeqyecognbpclhiuokiqvgheeoj'::text)"], ["              ->  Index Scan using index_users_on_id_and_type on users  (cost=0.28..8.30 rows=1 width=580)"], ["                    Index Cond: (id = changesets.user_id)"], ["                    Filter: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"]], "after_plan": [["Limit  (cost=16.89..16.90 rows=1 width=1033)"], ["  ->  Sort  (cost=16.89..16.90 rows=1 width=1033)"], ["        Sort Key: changesets.id DESC"], ["        ->  Nested Loop Left Join  (cost=0.57..16.88 rows=1 width=1033)"], ["              ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["                    Index Cond: (repository_id = 3945)"], ["                    Filter: ((committer)::text = 'yrhiuiqgdfcmitpgsmvwgvsiuazjkhgmgsyhymykfmzvqybpbkukzuhcbtjcbqvapsbnunfmxygvxatofhvgricdaowmunvicbiruoublpcwtkdxqjmdzhstmjjimnvlorwicqkqdefnpmjsxrktohrsvboysiwmddbhgfrkcbjgotqhhphcytahjppdxejktsqzcexvadeqyecognbpclhiuokiqvgheeoj'::text)"], ["              ->  Index Scan using index_users_on_id_and_type on users  (cost=0.28..8.30 rows=1 width=580)"], ["                    Index Cond: (id = changesets.user_id)"], ["                    Filter: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"]]}
{"before": 0.11039999999999998, "after": 0.07050000000000001, "sql": "SELECT changesets.id AS t0_r0, changesets.repository_id AS t0_r1, changesets.revision AS t0_r2, changesets.committer AS t0_r3, changesets.committed_on AS t0_r4, changesets.comments AS t0_r5, changesets.commit_date AS t0_r6, changesets.scmid AS t0_r7, changesets.user_id AS t0_r8, users.id AS t1_r0, users.login AS t1_r1, users.hashed_password AS t1_r2, users.firstname AS t1_r3, users.lastname AS t1_r4, users.admin AS t1_r5, users.status AS t1_r6, users.last_login_on AS t1_r7, users.language AS t1_r8, users.auth_source_id AS t1_r9, users.created_on AS t1_r10, users.updated_on AS t1_r11, users.type AS t1_r12, users.identity_url AS t1_r13, users.mail_notification AS t1_r14, users.salt AS t1_r15, users.must_change_passwd AS t1_r16, users.passwd_changed_on AS t1_r17, users.twofa_scheme AS t1_r18, users.twofa_totp_key AS t1_r19, users.twofa_totp_last_used_at AS t1_r20 FROM changesets LEFT OUTER JOIN users ON users.id = changesets.user_id AND users.type IN ('User', 'AnonymousUser') WHERE changesets.repository_id = 7325 AND changesets.committer = 'rmexmmhgeyhgumdfuwkyirnlatomevhfncfukgepihgyyizeimzcahxvaclcgeolpvdeqxrecbkvxfrgbevoylrhnknmsslrcntmehknuamumqsdlmtddkinisgkbtvzutyqigwhswygkuwhegqefawlbbtvyvieysqsirlcnioervvyjqybaynpfdijcqvttzxdjdrbwkfyhzdqyhmabibjypzca' ORDER BY changesets.committed_on DESC, changesets.id DESC LIMIT 3", "before_plan": [["Limit  (cost=16.89..16.90 rows=1 width=1033)"], ["  ->  Sort  (cost=16.89..16.90 rows=1 width=1033)"], ["        Sort Key: changesets.committed_on DESC, changesets.id DESC"], ["        ->  Nested Loop Left Join  (cost=0.57..16.88 rows=1 width=1033)"], ["              ->  Index Scan using changesets_repos_scmid on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["                    Index Cond: (repository_id = 7325)"], ["                    Filter: ((committer)::text = 'rmexmmhgeyhgumdfuwkyirnlatomevhfncfukgepihgyyizeimzcahxvaclcgeolpvdeqxrecbkvxfrgbevoylrhnknmsslrcntmehknuamumqsdlmtddkinisgkbtvzutyqigwhswygkuwhegqefawlbbtvyvieysqsirlcnioervvyjqybaynpfdijcqvttzxdjdrbwkfyhzdqyhmabibjypzca'::text)"], ["              ->  Index Scan using index_users_on_id_and_type on users  (cost=0.28..8.30 rows=1 width=580)"], ["                    Index Cond: (id = changesets.user_id)"], ["                    Filter: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"]], "after_plan": [["Limit  (cost=16.89..16.90 rows=1 width=1033)"], ["  ->  Sort  (cost=16.89..16.90 rows=1 width=1033)"], ["        Sort Key: changesets.committed_on DESC, changesets.id DESC"], ["        ->  Nested Loop Left Join  (cost=0.57..16.88 rows=1 width=1033)"], ["              ->  Index Scan using unique_table_changesets_field_repository_id_revision_cond_none on changesets  (cost=0.29..8.30 rows=1 width=453)"], ["                    Index Cond: (repository_id = 7325)"], ["                    Filter: ((committer)::text = 'rmexmmhgeyhgumdfuwkyirnlatomevhfncfukgepihgyyizeimzcahxvaclcgeolpvdeqxrecbkvxfrgbevoylrhnknmsslrcntmehknuamumqsdlmtddkinisgkbtvzutyqigwhswygkuwhegqefawlbbtvyvieysqsirlcnioervvyjqybaynpfdijcqvttzxdjdrbwkfyhzdqyhmabibjypzca'::text)"], ["              ->  Index Scan using index_users_on_id_and_type on users  (cost=0.28..8.30 rows=1 width=580)"], ["                    Index Cond: (id = changesets.user_id)"], ["                    Filter: ((type)::text = ANY ('{User,AnonymousUser}'::text[]))"]]}
